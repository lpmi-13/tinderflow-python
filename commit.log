 Improve description
 Explain a bit better what the extension does.
 Update icons
 Fix lint problems
 Don't record time when the window is not active
 Merge pull request #1 from andreea-lucau/add_watch
 Update based on comments
 Update based on comments
 More stuff
 Move all url manipulation in background.js
 Initial commit for the Watch plugin
 Initial commit
 fix typo
 Replaced Grounder::Assignments now uses generic mapping_iterator.
 NF distributes conjunctions over K and disjunctions over M.
 Fixed: split_order_matters optimisation in Solver::Split was unsound.
 PDL: Implication operator is right-associative.
 Google Test now included through CMake.
 Renamed LELA to Limbo.
 Fixed: Minesweeper error visualization bug.
 Fixed: custom Sudoku bug.
 Fixed: Solver::Assign() should check subsumption in original setup.
 Javascript TUI has 'demo' mode (blocks next command).
 Code formatting.
 Improved Javascript TUI and CMakeLists.
 TUI prints normalised formulas now; fixed PRINT_ABBREVIATIONS.
 Javascript TUI is now interactive.
 Fixed several C++ concepts.
 Fixed: Solver::kNoConsistencyGuarantee had wrong value.
 Added interactive mode to TUI.
 Cleaned up includes and ifdefs.
 Setup::PropagateUnit[s], Setup::Add[Unit|Clause] assert non-[in]valid.
 Moved Sudokus to a separate text file.
 Copyright, License, a little cleanup.
 Setup::Subsumes() holds for valid clauses.
 Clause::valid() now includes t/=n1, t/=n2 cases.
 Clause::valid() now includes the case where it contains t_1=t_2 and t_1/=t_2.
 Disabled end-game clauses in Minesweeper.
 Slightly simplified Term::Subsumes(); added test for G.
 Fixed: wrong operator<() for [int|array]_iterator.
 Renamed minesweeper and textinterface examples; cleaned up.
 Improved Minesweeper visualization.
 Fixed: order of splits matters for Solver::Determines().
 Minesweeper optionally uses Solver::Determines() now.
 Sudoku now uses Solver::Determines() for faster queries.
 KnowledgeBase uses Solver::Determines() to optimize simple queries.
 Added Solver::Determines().
 Added Grounder::[PrepareForQuery|RelevantSplitTerms]() for term queries.
 Fixed: missing lhs in Setup::Units::Determines().
 Fixed some layout issues in Javascript demos, especially Minesweeper.
 New web-interface for Minesweeper.
 Documentation.
 Fixed: internal::HashSet() didn't test removed-flag.
 Solver::Split() avoid redundant split combinations.
 Cleaned up Setup::ShallowCopy and friends; cpplint.
 Added Setup::[Locally]Consistent().
 Added Setup::Determines().
 Reimplemented (first part of) Setup with watched literals.
 Added #ifdef's to enable/disable bloom filters.
 Rewrote Clause::Subsumes(), Clause::PropagateUnit[s]().
 Clause uses custom stack plus arrays now.
 Fixed: when assume_consistent, Solver::Assign() must not test [].
 Fixed: undeclared variables in quantifiers crashed text interface.
 Fixed: Formula::Exists::Rectify() didn't register variables.
 Removed some redundant Setup::enabled() calls.
 Minesweeper JS is compiled for growing memory now.
 Added consistency modality G.
 Readme.
 Fixed: Solver::Consistent() did not fully use consistency guarantee.
 Fixed: Solver::Consistent() did not fully use consistency guarantee.
 Merge branch 'master' into wsc
 Fixed: KnowledgeBase::BuildSpheres() omitted last pl-cons sphere.
 Term::[Complementary|Subsumes]() use bitwise operations.
 Merge branch 'master' into wsc
 Rewrote/added Grounder::[Relevant]LiteralAssignments().
 Added 32 bit hash functions.
 Added [Term|Literal]::Unify(), [Term|Literal]::Bisimilar().
 Revising Grounder::AssignmentLiterals().
 Extended name API to have arguments.
 Fixed: singletons crashed Javascript version.
 Simplified Literal representation.
 Factories are singletons; Terms are 32 bit, Literals are 64 bit.
 Added closed hashtable.
 Removed Comparators.
 Minesweeper first looks at points near the last move.
 Term::hash() is now deterministic wrt Term::Factory. Added Sudokus.
 Added Sudoku test.
 Added closed HashSet for Clauses.
 Added missing Sudoku files.
 Restructured Sudoku agent.
 Added debug output for conditional beliefs.
 Improved web-version of Sudoku.
 Improved web-version of Sudoku.
 Added web-version of Sudoku.
 Added standalone Sudoku agent.
 Added Sudokus.
 Added some newspaper Sudokus.
 Added Grounder::Split(), which caches split setups.
 Added callbacks to suppress query logging.
 Restored accidentally deleted example files.
 Sudoku.
 Restructured battleship examples.
 Extended PDL control structures.
 Battleship 4x4.
 Battleship 1x4.
 Very simple version of battleship.
 Fixed: two and a half bugs in Formula::Flatten().
 Added Context::CreateTerm().
 Some work towards Battleship.
 Copyright notice.
 Started battleship engine.
 Added callbacks.
 Added if/else as well as while and for loops.
 Moved Context out of Parser.
 Parser is action-based now.
 Started battleship modelling.
 Representation theorem re-uses dummy names.
 Readme and documentation.
 Updated documentation of text-interface.
 Readme.
 Added missing CMake file.
 Fixed: GCC errors in Parser::Token() and Parser::Result::operator<<().
 Fixed: GCC's control reaches end of non-void function warnings.
 Fixed: relied on order of argument evaluation in Formula::Bel ctor.
 Removed end-of-line-marker (semicolon) from PDL.
 Fixed: Grounder::AssignLiterals() missed literals.
 Fixed: Res operator didn't handly no-free-vars case correctly.
 C++11 suffices.
 Fixed: parser bug for conditionals.
 Fixed a few small bugs; updated PDL.
 Fixed: generation of system of spheres.
 Fixed: Formula::Bel needs ternary ctor to keep normalization alive.
 Fixed: split terms / assign literals may be empty for trivial formulas.
 Implemented representation theorem for modal operators.
 Slightly improved minesweeper evaluation and web interface.
 Added modal operators to formulas.
 Fixed: iOS Minesweeper display bug.
 Sudokku attempt.
 Simplified Clause::Subsumes(); added average Minesweeper move time to eval.sh.
 Simplified bloom filter hash functions.
 Improved parser's error reporting.
 Added static_assert()ions to check iterator categories.
 Slightly extended tests.
 Fixed: bug in Formula::Normalize(); improved Formula::Flatten().
 Fixed: Formula::Flatten() handled positive literals like definitions.
 Parser now supports implication, equivalence; also in KB.
 Fixed: Formula::Flatten() skips non-quasiprimitive function-free atoms.
 Unit tests.
 Removed Grounder::PlusSplitNames().
 Added Formula::Flatten() to Formula::NF().
 Rewrote Formula.
 Cleanup.
 Added some experiments to find good bucket size.
 Setup revision finished.
 Ongoing Setup revision.
 Ongoing Setup revision.
 Started Setup revision.
 Restructured BloomFilter, added BloomSet.
 Restructured bloom filter.
 Using impl traits for iterators.
 Cargo file.
 Started Setup.
 Refactoring.
 Substitution with traits.
 Substitution with FnBox (not working yet).
 Term iterators.
 Terms filter.
 Clause.
 FNV-1a Hasher.
 Fixed: Minesweeper visualization on Chrome.
 Bloom filter.
 Added Literal and a few Term methods.
 Rewrite attempt in Rust.
 Cleanup.
 Cleaned up copy/move constructors/assignment.
 Replaced virtual class with template paramter for logging.
 Parser is now part of the library in format namespace.
 Text interface file/stdin can be combined.
 Corrected sort ENTITIY/HUMAN in examples.
 Setup::occurs_ is now std::unsorted_multimap.
 Renamed internal::hash() to fnv1a_hash(); added BloomFilter::hash().
 Removed flatten_range(), unique_filter.
 Grounder::TermSet, Grounder::LiteralSet are now std::unordered_sets.
 Cleaned up a includes.
 Generalised flatten_iterator.
 Term::Factory, Grounder::Assignments::Assignment use unordered_map now.
 Formula::Substitute() does not substitute bound variables.
 Added traits to allow transform_iterator's function work with iterators.
 Fixed: Formula::Element::operator= non-const reference problem.
 CMake; examples.
 Changed includes to make cpplint happy.
 Textinterface helps with unit tests.
 Two simple tests for textinterface.
 Fixed: too few split names were considered (again!).
 Added assertions, comments to text interface.
 Cleaned up previous code fix.
 Improved web-interface; added alternatives for operators.
 Using only one name for BOOL sort.
 Fixed: too few split names were considered.
 Dropped "False" value from boolean sorts.
 Text interface reads from standard input.
 Fixed iterator_categories (hopefully).
 Minesweeper demo runs (fake) asynchronously now.
 Added Minesweeper web demo.
 Improved text interface grammar.
 Nicer HTML/Javascript demo.
 Javascript binding for text-interface.
 Implemented KB, formulas, abbreviations, queries.
 Fixed: Solver::Reduce() accidentally negated disjuncts.
 Better error reporting.
 Ongoing new parser.
 Writing a new parser.
 Abandoning Boost Spirit.
 Started parser.
 Fixed: Term::hash() also works for 32 bit.
 Replaced Solver::EntailsComplete() with Solver::Consistent().
 Cleanup.
 Readme.
 Cleanup.
 Readme.
 Fixed two bugs in Grounder.
 Rewrote Grounder::AssignLiterals().
 Fixed a few bugs in Solver::EntailsComplete().
 Fixed splitting-query-substitution bug
 First version of Grounder::AssignTerms().
 Lazy version of Grounder::SplitTerms().
 Fixed compiler errors in old GCC.
 Fixed Clause unit test.
 Started complete semantics.
 Renamed KB to Solver, Maybe::succ to yes; bool conversion explicit.
 Cleanup.
 Added Grounder::RelevantSplitTerms.
 Difference between old and new minesweeper is bug in old one.
 Grounder avoids additional names in cases like the Bool simulation.
 Fixed: inheriting Setups are kept minimal.
 Cleaned up Minesweeper.
 Replaced incr_iterator with int_iterator.
 Fixed: iterators did not adhere to InputIterator concept.
 Grounder avoids regrounding after AddClause(), PrepareFor().
 Started minesweeper example.
 Restructured code again.
 Restructured code.
 KB implements (almost) LBF semantics.
 Added IntMap unit test.
 Unit test for iterator; symbol registration for pretty printer.
 Started KB class.
 Grounder::SortedNames is an IntMap instead of std::multimap now.
 Added Formula::Reader::NF().
 Refactored pretty printer; added higher-level syntax layer.
 Merge branch 'master' of https://github.com/schwering/lela into bolf
 Fixed: Grounder's treatment of additional names for splitting.
 Fixed: BloomFilter::hash() only used half of the bytes.
 Fixed Grounder::SplitTerms() to consider non-primitive terms in query.
 Refactored unit tests to allow for FRIEND_TEST().
 Cpplint.
 Fixed Lemma 8 bug in Grounder; redesigned assignments iterators.
 Grounder unit test.
 Fixed a bug in Setup::Minimize().
 Grounder now has a state.
 Grounder can now incorporate names and variables of Formula.
 Substitution in formulas.
 Fixed a few issues in Formula.
 Added basic formulas.
 Renamed test classes.
 Reordered static methods.
 Readme.
 Readme.
 Little work on formulas.
 Setup::LocallyConsistent() only considers transitive closur of literals.
 nullptr and consistent use of default ctor/dtors.
 Introduced symbol and term factories.
 Merged Ground() and Substitute().
 Grounder.
 Renamed Term::Collect and friends Term::Traverse with simpler interface.
 Started with the grounder.
 Workaround for clang error with typedef in IntMap.
 Setup::primitive_terms() only considers occurring clauses.
 Cleanup
 Some documentation.
 Removed legacy files.
 Rewrote iterators templates and setup iterators. Fixed unit propagation.
 Bloomfilter; tests.
 Unit test for clauses and setups, bugfixes.
 Unit test for bloom filter and literals.
 Unit test for terms.
 Bloom filters.
 Revised iterators.
 Setup data structure is hopefully more sophisticated.
 Setups
 Lots of minor changes and little progress towards LBF/BOLF.
 Added BucketMap.
 Continuing rewrite.
 Rewrite for BOLF has begun.
 Removed actions.
 Fixed: conditional propagation in belief setups.
 Removed obsolete function declaration.
 Fixed: Setup::Entails() for counterfactuals.
 Minesweeper skips consistency check; added statistics script.
 Setup::AddClauseWithoutConsistencyCheck() is public now.
 Fixed: inconsistency check in Setup::AddClause() was incomplete
 Minesweeper: cosmetic changes, added evaluation script.
 Minesweeper: inspected fields are ordered heuristically.
 Minesweeper: fixed non-square field bug; tweaked params for performance.
 Minesweeper considers remaining mines at the end; fixed bugs.
 Minesweeper agent plays more rationally when nothing is known.
 Minesweeper agent plays autonomously.
 Minesweeper now has colorful output.
 Added a simple minesweeper example.
 Updated README for legacy v1.
 Removed README for now.
 Readme.
 [z] K phi now works for unit propagation.
 Renamed ESBL to LELA.
 Objective level literals in Formulas get special treatment.
 Further tried profiling Eval nodes.
 Eval literals in formulas and CNF to invert evaluation order.
 Refactored Formula, introduced BasicActionTheory class.
 Made cpplint happy.
 Simplified code structure in Formula.
 Several small API changes.
 Refactored Formula, introduces explicitly objective formulas.
 Fixed: Formula::Minimize() and ResolveLiterals().
 Completed implementation of Reprensetation Theorem.
 Continued implementation of Representation Theorem.
 Continued implementation of Representation Theorem.
 Fixed: compiler errors due to -D_GLIBCXX_CONCEPT_CHECKS.
 Began implementation of Representation Theorem.
 Implemented [Knowledge|Belief]::Regress().
 Rearranged formula.cc, added folding.
 Added Setup::Progress(). Fixed bugs in [Simple]Clause::ResolveWrt().
 Removed Clause::Unify().
 Added Clause::ResolveWrt(), which supersedes Clause::ResolveWithUnit().
 Added methods to Literal::Comparator for search by PredId.
 Replaced Clause::[MIN|MAX]_UNIT with Clause::Set::first_unit().
 Literal::Set considers sign 2nd prio in comparator; ranges for loops.
 Moved [Low|Upp]erBound() to comparators.
 Renamed some comparators.
 Introduced comparators.
 Renamed is_ground() to ground().
 Inlined operator==, operator<.
 Removed unused operators/methods; typedefed all sets.
 Removed old outcommented code.
 Updated examples to use [en|dis]able_regression/1.
 Added SfLiteral subclass.
 Box clauses are not instantiated for {} and added immediately.
 Setup::AddClause() takes over the task of Setup::AddSensingResult().
 Prolog interface has [en|dis]able_regression/1 predicates.
 Formulas can be simplified before conversion to CNF.
 Removed C/C++ examples.
 Added entailment with regression predicate entailsreg/3.
 Using std::tie in operator< now.
 Query CNF is now minimized.
 Added second unit test for regression.
 Fixed: regression base case and recursive call. Added unit test.
 BATs moved to nested namespace esbl::bats.
 Implemented regression.
 Fixed: prefixes regression RHS. Formula::Substitute is in-place.
 Proper+ compiler also generates RegressOneStep() method.
 Fixed: grounding of quantifiers.
 One line of documentation.
 Formulas partly support nested K and B.
 Maybe can handle objects like std::unique_ptr.
 Added Collect[Names|Variables] to TermSeq.
 Made Maybe more readable.
 Merge branch 'cpp-restricted-ewffs'
 Cosmetic changes to make cpplint happy.
 There is a unary and binary Maybe now.
 Replaced std::pair/tuple with Maybe where appropriate.
 Fixed (?): Truth of (x. P(x)) v (Ex. ~P(x)).
 Updated readme.
 Understood the problem from commit c6c66a8 (it's an ESL bug).
 Added kitchen scenario from the demo.
 Fixed: missing assignment in Formula::Cnf::C::Substitute().
 Fixed: splitting only initial literals is not sufficient.
 Preliminary version of the demo kitchen BAT.
 Documentation of ECLiPSe-CLP interface. Changed arg-order of entails/3.
 Fixed: PEL(c) contains dynamic literals from the query clause.
 New ECLiPSe-CLP interface.
 Unit test for formulas.
 Cosmetic changes to make cpplint happy.
 Renamed Query to Formula. Prepared for Regression. Added unit test.
 Implemented complex queries.
 Setup::AddClause instantiates box clauses for {} immediately.
 Fixed: Setup::GroundBoxes(z) didn't ground for z.
 Removed old ESBL code.
 Removed old test code.
 Fixed: Setups::PropagateBeliefs() built belief setups incorrectly.
 Generated BAT's names are capitalized but not all-uppercase.
 Fixed: assertion in Setup::PropagateUnits() to allow non-units.
 Added KBat, BBat classes for generated knowledge/belief BATs.
 Implemented belief setups.
 Simplified generated BATs.
 Removed useless includes.
 Simplified inconsistency management.
 Fixed Setup::SubsumesWithSplit(). Faster Setup::PropagateUnits().
 H+ is kept in sync implicitly by Setup::AddClause().
 Boxes are now grounded implicitly by Setup::Entails().
 Fixed: Pel(l) = {a | a in Rel(l) and ~a Rel(l)} does work.
 Bugfixes in Term, Literal, Ewff, Clause, Setup.
 Proper+ compiler generates C++ code.
 Full implementation of Setup class.
 Clause ewffs are restricted to clause variables.
 Fixed: comparison function in Clause::Subsumes().
 Fixed box unification.
 Fixed: Term::[Match|Unify] should fail for different size sequences.
 Subsumption of clauses with ewffs.
 Drastically restricted ewffs.
 Added [Ewff|Conj]::Subsumes().
 Ewff representation is even closer to unique.
 Ewff representation is closer to unique.
 Result of Term::Unify() is commutative now.
 Started Setup::PropagateUnits().
 Added Clause::ResolveWithUnitClause().
 Added [Ewff|Conj]::And().
 Removed [Atom|Literal]::AppendActions().
 Added Setup::names() and Setup::variables().
 Added Setup::Rel() and Setup::Pel().
 YouCompleteMe configuration.
 Improved efficency of Clause::Subsumes().
 Fixed: proper+ compiler generated double clauses in code.
 Fixed: setup_relevant_split() checked wrong clause's size.
 Changed kitchen BAT for demo.
 Added comparison operator to Clause.
 Updating a unifier now doesn't fail if the pair was present before.
 Clause::Rel(), Clause::Subsume() look correct for non-ground literals.
 Added unit test for Clause::Rel().
 Fixed: Atom::is_ground() didn't check arguments.
 Kitchen BAT now has five objects but only one location.
 Moved UnifySeq() to class Term.
 Learned about STL debug define.
 Added unit test for clause subsumption.
 Using aggregation instead of inheritance for StdName and Variable.
 Fixed: Ewff::Conj::SubstituteName() erased from wrong map.
 Fixed: Clause::Subsumption().
 Additional operator<< definitions.
 Fixed: method dispatching from Literal to Atom
 Added Term::Factory.
 Added namespace.
 Added Clause::PropagateUnit().
 Added Clause::Subsumes().
 Fixed: Rel() needs to check if the clause is boxed or not.
 Added Ewff::Satisfiable().
 Fixed: Rel needs to negate literal
 Renamed a few methods.
 Simplified Ewff::Conj. variables() and names() return SortedMaps.
 Started clause.
 Unified Ground()/Substitute(). Added typedefs.
 Implemented Conj::Substitute(). Added unit tests.
 Fixed unification, added operator<< functions, unit test for literal.
 Fixed unification. Added unit tests.
 Fixed unification. Added std::pair-versions of Unify, Ground.
 Renamed Term::Var, Term::Name to Variable, StdName. Added unit test.
 Ewff is DNF. Introduced Term::Var and Term::Name.
 You Complete Me config.
 Implemented model generation for ewffs.
 Variables IDs are implicit.
 Added ewffs.
 Started re-implementation in C++.
 Gitignore.
 Restructured for C++.
 Moved ewff to separate files.
 Started a minesweeper BAT.
 Removed profiling test.
 Updated readme.
 Fixed: query_names() also added variables, removed #1, #2.
 Updated documentation, cosmetic changes, added unit tests.
 Merge branch 'split-optimization'
 Queries are converted to CNF (again).
 Added ewff_cmp(), slightly changed ewff_eval().
 vector_clear() clears the buffer.
 Added stdvec_is_ground().
 Fixed: timeout in belief unit test.
 SF literals are split for free again.
 SF literals are not split anymore.
 Added map_[lazy_]copy().
 Fixed: split literals were deleted too aggressively from PEL
 Cosmetic changes.
 Updated readme.
 Added context_guarantee_consistency(). Unified Prolog interface naming.
 Replaced MALLOC with NEW where possible.
 Added setup_guarantee_consistency().
 Updated documentation and unit test.
 Gitignore.
 Updated documentation.
 Renamed setup_get_unit_clauses() to setup_unit_clauses().
 Implemented consistency checks.
 Updated documentation.
 Removed query construct EVAL.
 Actions are added to the setups one by one now.
 Dependencies in README.md.
 Merge branch 'master' into split-optimization
 Kitchen BAT for standard ESL.
 Implemented needless split detection.
 Enabled warnings.
 Implemented smaller setups.
 Thoughts on splitting.
 query.c's context_rebuild_setup() minimizes setups now.
 Using loop in bats/CMakeLists.txt.
 Added Prolog ECAI-2014 example.
 Added [store|retrieve]_context/2 predicates and Prolog KR-2014 example.
 Added email address to a few headers.
 ECLiPSe-CLP correctly handles non-BAT predicates.
 Fixed (possibly): garbage collection issue with ECLiPSe-CLP.
 pred_t is long int now; introduced MAX_PRED.
 Fixed: query_ennf() didn't propagate negations properly.
 Added example binaries to .gitignore.
 Fixed ECLiPSe-CLP interface bugs; found problem with GC.
 Added context to ECLiPSe-CLP interface.
 Merge branch 'master' of github.com:schwering/esbl
 FindProlog module for cmake.
 Updated readme.
 FindECLiPSe-CLP module for cmake.
 BATs are built automatically now.
 Started ECLiPSe-CLP interface.
 Added print_query() to common.h.
 Added serialization and deserialization functions.
 Renamed CMake projects.
 Fixed: kv_t's members are const
 Using non-const iterators where appropriate.
 Hello, cmake.
 So long, nedmalloc.
 So long, autoconf.
 ewff_true() is now (forall x . x = x).
 BATs must list sort names; fixed implication and equivalence in proper+ compiler.
 Proper+ compiler generates better is_<sort>().
 Fixed serialization of variables in proper+ compiler print_all/1.
 Fixed: incomplete setups due to ewff_ground() varmap bug.
 Makefile.am: tests don't compile with lib_LTLIBRARIES.
 Non-const iterator in bsetup_propagate_units().
 Makefile: install library, add include header sub-dir
 configure: build shared libraries by default
 gitignore: add .libs dirs
 Proper+ compiler prints readable BATs; fixed is_<sort>() functions.
 Proper+ compiler generates complete C header.
 Proper+ compiler works for examples.
 Started proper+ BAT compiler.
 Made setup_is_inconsistent() static.
 Added a test for eventual completeness.
 Fixed consistency check of belief setups.
 Removed SET_ALIAS.
 Quantifiers are handled in one pass during query answering.
 One less loop iteration in setup_propagate_units().
 Sped up clause_resolve().
 Simplified setup_minimize_wrt().
 Replaced loops with iterators.
 Added a val attribute to all iterators.
 New iterator API.
 Added context_remove_undone_sf().
 Added context_prev() to undo functions (untested).
 Renamed stdname to term in queries.
 Iterators for sets and vectors.
 Query handling without CNF.
 Fixed: context_copy_with_new_actions() mishandled query_zs.
 Fixed: forall x phi as not exists x _not_ phi.
 Added a check for inconsistency for better performance.
 Unit test for belief context.
 Added belief contexts.
 Cleanup and added kcontext_copy().
 Fixed belief setup subsumption. Added Example 12 to unit test.
 Added subsumption for belief setups.
 Unit test for belief.
 H+ for beliefs, started unit test for beliefs.
 Computation of belief setups (untested).
 Started belief, moved splitting to setup.c.
 Some cleanup.
 Merge branch 'master' of ssh://schwering.ath.cx/home/git/esl
 Quantifiers in queries using var_t instead of callbacks.
 Unit test for ewffs; fixed rest of setup unit test.
 Unit test for ewffs; fixed rest of setup unit test.
 ewffs are now represented as terms instead of callbacks.
 New representation of BATs with macros for simple definition.
 Unit propagation minimizes the setup.
 Fixed profiling test.
 Sped up unit propagation. Added setup_copy_with_new_actions().
 Fixed: EVAL queries were not negated properly.
 Removed nedmalloc. Documentation.
 Clearing work, documentation.
 Simplified PEL optimization and split-SF computation.
 Support for nested queries (untested). Queries are const now.
 Optimization of PEL.
 More efficient use of unit propagation.
 Splitting SF literals like ordinary literals works now.
 Fixed performance, broke correctness when splitting SFs.
 Treating SF literals as normal split variables.
 Removed memory deallocations.
 Fixed: Boehm GC is used by default.
 Replaced nedmalloc with Boehm GC.
 Setups can be re-used.
 Fixed build system. Sped up memory allocation.
 Moved query code from clause.c to query.c Added query constructors.
 Replaced standard allocator with nedmalloc.
 Query evaluation works.
 New query evaluation attempt based on CNF.
 Query evaluation (untested).
 Query preprocessing (untested).
 Better unit propagation. Started query evaluation.
 Added subsumption.
 Implemented unit propagation (efficiently).
 Introduced box_univ_clauses and univ_clauses.
 Fixed a few bugs, unit tests.
 Utility functions for clauses.
 Grounding of KB, untested.
 Refactoring: constructors return structures now.
 Started with grounding of clauses.
 Macros for type-safe vectors, sets, maps.
 Variables and standard names definitions.
 Map structure and unit test.
 Set operations, unit tests.
 Unit test.
 Unit tests, set functions.
 Fixed a bug, unit tests.
 Build infrastructure, unit testing.
 Vector and set structures.
 fix simple typo
 host: fix include with newer uhd
 Revert "Add latest images that pases timing constrains"
 umtrx2collectd: lowercase sensor names
 host: Add support for complex values in the status monitor.
 cmake: make Boost a required library
 uhd v3.10.0 compatibility
 Add latest images that pases timing constrains
 add map config for latest successful timing build
 reset duc/ddc chain on idle
 bump version to 1.0.11
 collectd: use 'fairwaves-monitoring' user to run plugin
 bumped version to 1.0.10
 collectd: rewritten collection script
 bump version to 1.0.9
 collectd: plugin to collect umtrx sensors
 bumped version to 1.0.8
 Merge branch 'earwin/pythonpack'
 bumped version to 1.0.7
 debian: packaged python utils in host/utils
 add fixed image but few rules are violated
 fix hang during fpga flashing in safe mode
 throw exception if incorrect DCDC version were provided
 turn off vin bypass to amplifiers by default
 add lmsvga2 args parameter to override UMTRX_VGA2_DEF
 autodetect DCDC translation version on startup
 add lmsvga1 device args parameter to override VGA1_DEF
 Merge branch 'umsel2_work'
 host: Check if DC offset value reads as it's been written to LMS.
 umsel: device args for enabling umsel2 and verbose
 host: Checking in umtrx_query_versions.py
 host: Add string getters/setters to the Python property tree library.
 host: Add "STRING" to umtrx_monitor error output.
 host: Properly handle most corner cases in VSWR calculations.
 Bump version to 1.0.6
 host: make boost property tree thread safe
 host: support string type in JSON query
 debian: build now produces an additional package with debug symbols
 host: print locked for debugging
 host: freq update sequence, copied registers from gui
 host: umsel2 adf355-2 tuning algorithm
 host: umsel2 register work for adf355-2
 umtrx_firmware: fixed typo preventing it from working
 Bump version to 1.0.5
 host: implement selection for umsel2 + lms
 host: remove old umsel code from lsm6002
 host: integrate support class for umsel2
 fpga: updated 4x ddc image for spi work
 Merge branch 'axi_shared_spi'
 debian: added firmware to package and umtrx_firmware script to handle it
 fpga: simplify spi setting regs with generate loop
 fpga: connect both spi settings drivers
 fpga: use axi stream spi core (still single dest)
 fpga: created axi stream controled spi core
 host: Fix getters in umtrx_property_tree.py.
 host: disable umtrx_fifo_ctrl cache of spi config
 fpga: bump compat minor, work on late flag
 fpga: implement fifo control tracking info
 debian: conflicts/replaces stanzas to replace renamed package
 fpga: larger long fifo with 64 entries
 debian: 1.0.4 release changelog.
 utils: Prettier output for umtrx_auto_calibration
 host: Fix a typo in the DC offset property tree setter.
 utils: Verify that calibration property has been set correctly.
 utils: Set default Rx gain to 50 instead of 100 in calibration utils.
 scripts: Fix a nasty typo in umtrx_auto_calibration.
 debian: split umtrx into module and runtime packages
 host: fixed missing boost math include (boost 1.46)
 host: FIx SET handling for the property tree JSON API.
 host: There is no need to explicitely support coerce() in property_alias()
 host: Complete calculations for VSWR in Python utils + better sensors output.
 Merge branch 'status_monitor'
 host: A Python library for the property tree API and sensors query utility.
 host: No need to explicitely insert EOL, it's already there.
 host: Fix typo in a comment s/GET/SET/.
 umtrx: remove sleep used for testing
 umtrx: generic JSON property tree service
 umtrx: client handler thread to keep socket open
 umtrx: changes to tcp query server
 umtrx: mutex for i2c-based interfaces
 umtrx: sensor query support and comments
 umtrx: mutex for lms ctrl wrapper class
 umtrx: work on status monitor tcp server
 umtrx: skeleton for status monitor thread
 Merge branch 'achemeris/divsw'
 host: By default route each Rx channel to it's own antenna.
 host: Add ability to set diversity switches position from UHD args.
 host: Implement property_alias() function which creates an alias at the proprty tree.
 minor debianization fixes: +x debian/rules, correct debian/source/format
 Merge branch 'debian'
 debian: changelog entry for 1.0.3 release
 umtrx: strip leading g from describe hash
 utils: Better documentation for umtrx_auto_calibration.
 Merge branch 'achemeris/iq_cal_work' implementing Tx IQ calibration.
 fpga: move tx frontend mux between DSP and corrections module
 host: Fix UHD args in the umtrx_auto_calibration.
 host: Add missing new line in the calibration utils output.
 host: Improve console output for calibration utilities.
 host: Use "fifo_ctrl_window=0" UHD param in the umtrx_auto_calibration.
 host: Better reporting at the end of umtrx_auto_calibration
 host: Checking in umtrx_auto_calibration script.
 host: An attempt to get IQ balance caliration working with the 2nd channel.
 host: Correctly store IQ balance calibration values.
 host: Better default values for umtrx_cal_tx_iq_balance.
 host: Checking in umtrx_cal_tx_iq_balance utility.
 host: Move more generic functions to usrp_cal_utils.hpp
 debian: first shot at umtrx debianization
 host: Implement setting Rx VGA1 gain in real dBs.
 host: Fix whitespaces.
 host: Implement power control below the PA minimum output power using LMS VGA.
 host: Output all known PA types on startup.
 host: Implement functions to list all known PA types.
 host: Replace 'pa_power_limit' param with 'pa_power_max_w' and 'pa_power_max_dbm'.
 host: Add utils to read NMEA and GPS coordinates from UmTRX.
 host: Fix umtrx_cal_tx_dc_offset help output to mention UmTRX.
 Merge branch 'achemeris/pa_control'
 host: Checking in a full scale DCDC conversion table.
 host: Delay between DCDC setting and reading it back is not necessary when there is a PA installed.
 host: Enable DCDC converter before setting its value.
 host: Give DCDC converter time to settle when we set PA output power.
 host: UHD uses dB for gains, not Watts.
 host: Implement case insensitive PA type comparison.
 host: Better status message
 host: Output a status message when PA power is limited by a configuration parameter.
 host: Implement PA output power limit parameter.
 host: Fix power_amp_impl::max_power() implementation.
 host: Fix crash and beautift code.
 host: Move power amp code into a separate class.
 Initial implementation of the power control for UmTRX+PA systems.
 umtrx: support dirty version marker when tree is unclean
 umtrx: add fifo_ctrl_window argument to specify window size
 host: Update copyright for umtrx_cal_tx_dc_offset.cpp.
 Merge branch 'achemeris/dc_offset_work'
 host: Use amplitude setting for Dc offset calibration.
 host: Better algorithm for Dc offset compensation search.
 host: Improvements in the dc_cal_t abstraction.
 host: Actually test dc_i/q_stop values.
 host: Better abstraction for dc calibration routines.
 host: More verbose logging about calibration files loading.
 host: Store calibration file in a new way.
 host: Update automatic DC calibration utility.
 host: Fix loading of DC offset calibration values from EEPROM.
 Merge branch 'win_fixes'
 Merge branch 'version_info'
 Merge branch 'dc_offset_debug'
 umtrx: updated binaries after bootloader work
 umtrx: use portable sleeps from boost
 umtrx: switch to portable stdint.h include
 umtrx: remove misused class declspec UHD_API
 umtrx: provided nan() function for MSVC 2012
 umtrx: parse and print version info from git
 images: Remove _test_pa image. All its features are already in the master.
 host: Fix PLL lock detection - only 0x00 value is correct according to the LMS6002d documentation.
 host: Make non-interface functions of lms6002d_ctrl_impl class protected for better abstraction.
 host: Fix debug output.
 host: Implement lo_locked sensor to show whether LMS PLL is actually locked.
 zpu: Bump fw minor version for the bootloader behavior change.
 zpu: Don't confuse users telling USRP2 is loading - it's UmTRX they have!
 zpu: Do not attempt to load production ZPU firmware from safe FPGA image.
 umtrx: modify boost sleep line for boost compatibility
 umtrx: added link with pthreads to build
 Merge branch 'umtrx_icp_fix' into umtrx_update
 Merge pull request #9 from zabbal/umtrx_update
 Merge branch 'fw_githash' into umtrx_update
 umtrx: checkin new fw with compat bump and hash
 umtrx: bump fw minor for githash addition
 umtrx: store 4 byte git hash into fw
 umtrx: spi is fast now, use sleeps for settling times
 Host: By default set LMS Icp to 0.2mA.
 Merge branch 'umtrx_gains' into umtrx_update
 Host: Power down DC comparators in LMS to improve Rx linearity (as per FAQ).
 Host: Update the LMS regusters initialization to follow FAQ 1.0r12.
 umtrx: test both channels with umtrx_test_gains
 umtrx: removed Safety check in favor of clipping
 umtrx: fixes for gain distribution
 Host: Enable separate controls for Tx VGA1 and VGA2 gains.
 umtrx: slow down icap clock, this image resets reliably
 Use ip instead of deprecated ifconfig.
 umtrx: remove multi-threading from stream converters
 zpu: move spi mask into spi.c
 zpu: fixed umtrx_init() lms_res typo
 umtrx: s2 slave unused, fix comment
 update fpga & zpu images
 zpu: add watchdog timer for while( ... ); operations
 zpu: set UART debug port speed 115200
 fpga: fix DCSYNC clock to 541.66 kHz
 umtrx: revert merge changes for debugging
 Merge branch 'fairwaves/umtrx' into umtrx_update
 Set pa_en1 & pa_en2 to "1" by default, add "pa_en1" & "pa_en2" EEPROM variables and UMTRX_PA_EN1 & UMTRX_PA_EN2 enviroment values to override defaults
 umtrx: max timeout for tx async handler flush
 Use CMAKE_INSTALL_PREFIX as dest dir for cpack
 Add --divsw1 and --divsw2 options to umtrx_pa_ctrl
 Fix UmTRX v2.0 creation with phony sensors
 Add UMTRX_PA_DCDC_R and UMTRX_PA_LOW enviroment variable to override current EEPROM values for pa_dcdc_r and pa_low
 Fix reading pa_dcdc_r from EEPROM
 Fix typo
 Add DCSYNC for DC/DC. Not tested since I don't have an oscilloscope.
 Add FPGA image with PA control; not tested well!!!
 Add PA control logic
 Move temperature sensors to separate class; add power sensor ADCs and add abitily to autodetect hw revision
 umtrx: command line options for cal app
 umtrx: produce cal files from script
 umtrx: added goodness plot, cleanup
 umtrx: plot validation dc power using sparse corrections values
 umtrx: umtrx_cal_tx_dc_offset in python for tweaks
 Merge branch 'umtrx_update' into dc_offset_debug
 umtrx: fix register temperature sensor
 umtrx: move dc_offset plugin to bottom
 umtrx: plugin lms dc offset into fe corrections tree
 umtrx: disable lms on shutdown device
 umtrx: added temp sensors
 umtrx: copy in platform.hpp, which may be deleted from uhd
 umtrx: added net reset for fw/fpga boot
 umtrx: 4DDC leds reversed
 umtrx: update fpga images for led fix
 umtrx: default rx ant RX1
 umtrx: added debian package generator
 Add --dump & --erase options for EEPROM
 Fix 4DDC version
 umtrx: uninstall target for cmake build
 umtrx: remap LEDS, regular and 4DDC cases -- needs test
 umtrx: deleted build for unused revision
 umtrx: updated fw memory map for register remap
 umtrx: move buffering + gateway to rx chain
 umtrx: remap dsps, add rx buffering
 umtrx: setup mutex for stream creation
 umtrx: defaults avoid error on getFreq without setting
 umtrx: fpga build for 4DDC and arbitrary DSP support
 umtrx: added ifdef check for UHD API change
 Host: Fix Tx VGA, VGA1 and VGA2 gains setting procedure.
 umtrx: fix defaults for set_iq_balance
 umtrx: rx3 was default antenna in previous code
 umtrx: increase spi divider
 umtrx: checkin images for LTE_30_72MHz
 Host: Change the reference clock to 30.72MHz.
 FPGA: System clock was changed from 26MHz to 30.72MHz
 ZPU: System clock was changed from 26MHz to 30.72MHz
 Merge branch 'dc_cal_work' into umtrx_update
 umtrx: fix registration after UHD API change
 umtrx: support for cal side A or B
 umtrx: change avg plot to be avg of trials @ same freq
 umtrx: multiple trials per LO to plot stddeviation
 umtrx: tweaks to umtrx_cal_tx_dc_offset + csv plotter
 umtrx: random convergence search for tx dc cal
 umtrx: error message for streaming on uninitialized rx_dsp_core
 umtrx: some fixes to get cal app working again
 umtrx: checkin original cal app for tx DC cal work
 umtrx: init frontend muxes to IQ -- fixes TX mux
 umtrx: fix typo for dsp_core vita rate
 Merge branch 'fix-gps-nmea' of https://github.com/fairwaves/UHD-Fairwaves into umtrx_update
 umtrx: update ZPU image binary (GPS NMEA fix)
 umtrx: fix GPS NMEA data, over UART1 (UDP/49171)
 umtrx: add spi/i2c/wishbone interfaces into the ptree
 umtrx: fix create dsp_rate in ptree
 umtrx: fix, dsp rate is half of the vita rate
 umtrx: updated fpga bin file to latest commit
 umtrx: fix led mux and dac mux from last commits
 umtrx: fixup mux typo
 umtrx: added tx mux switch based on subdev spec
 umtrx: checkin last images built
 umtrx: move umtrx_test_chains.cpp to utils
 umtrx: added README changelog for UmTRX update work
 umtrx: strobe adcs from same signal for DSP alignment
 umtrx: fix typo in settings bus assign
 umtrx: external rx fe switch for quad dsp support -- has issues
 umtrx: switch lms6002d_ctrl to use fifo ctrl for spi
 umtrx: switch to timed spi core
 umtrx: renamed u2plus_core.v to umtrx_core.v
 umtrx: removed old dir structure in old/
 umtrx: missed a file from last commit
 umtrx: resets and clears when IMCP disconnect -- UDP dest not reachable
 umtrx: misc cleanup from last commit
 umtrx: fix prot framer bug for gen_context_pkt
 umtrx: tx work, fix prot framing, remap stuff
 umtrx: lms reset gets its own register
 Host: Power down DC comparators in LMS to improve Rx linearity (as per FAQ).
 umtrx: allocate constants for framers, sids, exc
 Host: Update the LMS regusters initialization to follow FAQ 1.0r12.
 Host: Whitespace fixes.
 umtrx: protocol framer is 2x wide now, 8 entries
 umtrx: protoframer gets dedicted settings bus
 umtrx: tie in fifo ctrl to settings bus
 Host: Enable separate controls for Tx VGA1 and VGA2 gains.
 umtrx: work in settings fifo integration
 umtrx: added back dispatcher drop vs to cpu case
 umtrx: work on wider router and dispatcher + fw changes to match -- not tested
 umtrx: added axi demux
 umtrx: added axi many muxes for new router
 umtrx: began work on umtrx router to support ctrl fifo + more
 umtrx: misc files created by fpga build
 umtrx: removed unused stuff
 umtrx: need pkt gate for max rate bursting in eth tx chain
 Host: By default set LMS Icp to 0.2mA.
 umtrx: added axi fifo2clk, didnt fix the issue though
 umtrx: threw in mtu discovery and fake db eeprom ids
 umtrx: update cross clock fifo wrapper
 umtrx: always lo locked, tweak cal eeprom stuff
 umtrx: added calibration back in
 umtrx: added debug coregen chipscope
 umtrx: updated bootloader, fix misc typo
 umtrx: work on program stream dest
 umtrx: work on io impl and recv streamer
 umtrx: update clock rate for dsp @ 26 MHz
 umtrx: created tx and rx chains for umtrx
 umtrx: updated many cores and top level, dsp still needs proper strobes
 umtrx: redo how registering adc/dac drivers for IOB/timingness
 umtrx: move around sys, dsp clock domains
 umtrx: cross clock fifo for all vita chains
 umtrx: removed unused serdes signals
 umtrx: rename adc/dac signals, added strobes
 umtrx: removed another set of ifdefs
 umtrx: remove ifdefs, now I can see
 umtrx: adc/dac bus width fix + test signal from reg
 umtrx: firmware building in current directory structure
 umtrx: moved new umtrx directory up one
 umtrx: moved other directories to old folder
 umtrx: time-register self test
 umtrx: added burner util
 umtrx: remove old directories, didnt need
 umtrx: time64 core update
 umtrx: use an updated time core (FPGA needs update)
 umtrx: setup lms6002d_ctrl and register in prop tree
 umtrx: created control interface for lms6002d
 umtrx: added dsp core support
 umtrx: save frontend interface work
 umtrx: filling eeprom and tick rate stuff
 umtrx: uhd find discovery working
 umtrx: building updated iface + find function
 umtrx: moved non specific files to old* dirs
 umtrx: save cmake work + added files before continue
 umtrx: copied in host support files, work on build system
 umtrx: copied in zpu firmware build
 umtrx: removed unused top dirs, renamed top dir
 umtrx: copied usrp2 fpga directory into new umtrx root
 Merge pull request #2 from zabbal/fairwaves/umtrx
 Merge pull request #4 from shimaore/patch-1
 Workaround for #3
 backport time_spec improvements from upstream
 fix umtrx-specific compilation warnings
 Host: Support multiple DSPs connection to a single LMS.
 Host: Better debug output for db_lms.cpp
 FPGA: Frontend switch was changed according with 4ddc mode.
 HOST: Remove Tx DSPs, add two Rx DSPs.
 ZPU: Remove Tx DSPs, add two Rx DSPs.
 FPGA: Remove Tx DSPs, add two Rx DSPs.
 Host: Expose RX VGA1 gain to the external UHD API.
 HOST: Add file writing capability to rx_multi_samples example.
 Host: Correct Boost dependency for Ubuntu 12.04
 Host: Set an even sample rate decimation by default to avoid annoying warnings.
 usrp2: added retry logic to control packets
 FPGA: Max sample rate was fixed.
 Host: Store DC offset calibration values for both channels in EEPROM.
 Host: Change the reference clock to 30.72MHz.
 FPGA: System clock was changed from 26MHz to 30.72MHz
 ZPU: System clock was changed from 26MHz to 30.72MHz
 ZPU: DEBUG: Output assert() message before aborting ZPU due to failed assert.
 ZPU: Better debug output in case of wrong flash size.
 Host: BETA: A test code to talk to a synthetizer on UmSEL.
 Host: Implement a single place to set UmTRX clock frequency and a way to talk to both LMS SPI and AUX SPI.
 Host: Remove declarations of functions we no longer implement.
 Host: Fix typo in comments in db_lms.cpp.
 Host: Remove unused functions from db_lms6002d class.
 HOST: AUX connector. I2C bus was added.
 HOST: : AUX connector. SPI bus to AUX connector was added.
 ZPU: AUX connector. IRQ for Lock Detect was added.
 ZPU: AUX connector. SPI bus to AUX connector was added.
 ZPU: AUX connector. I2C bus was added.
 FPGA: AUX connector. Control logic for Lock Detect was added.
 FPGA: AUX connector. Pins to AUX connector were uncommented.
 FPGA: AUX connector. SPI bus to ADF4350 was added.
 FPGA: AUX connector. I2C bus was added.
 Host: Use the new API to set VCTCXO DAC.
 ZPU: Add function to get/set VCTCXO DAC value from inside ZPU and from the control socket interface.
 Host: Remove unused code from umtrx_impl.cpp
 HOST: Registers for controlling diversity switches was added.
 ZPU: Decrease speed of sending data into the ICAP block.
 ZPU: Correctly set reset signals for LMS on init.
 ZPU: Implementation of Xilinx Spartan 6 ICAP.
 FPGA: Fix control logic for the Spartan 6 ICAP
 Host: Tweak constants in UHD calibration utils to work better with UmTRX.
 Host: Add more verbose output to uhd_cal_rx_iq_balance.cpp
 Host: Revert hacks in UHD calibrations utils related to lo_locked sensor. It is supported by UmTRX now.
 Host: Add phony "lo_locked" sensor to LMS db to make some UHD utils happy.
 Host: Fix Tx DSP frequency range.
 Host: Correctly set Rx and Tx fsync and IQ interleaving in LMS on init.
 Host: Add comments to lms6002d_dev::init() and lms6002d_dev::dump() functions.
 Host: Fix a bug in the LMS LPF bandwidth calibration routine, found by Ricardas.
 Host: Add a hack to support 500kHz LPF filter in LMS.
 Host: Shutdown calibration unit when LMS LPF calibration is finished.
 Host: Fix printf specifier in calibration utils debug output.
 Host: Fix gain settings in calibration utils.
 Host: Reset LMS chips every time on the UHD startup.
 Host: Cleaner output of lms6002d_dev::dump() function.
 Host: Clean up LMS init function from old code and disable AUX PA on startup to reduce noise.
 Host: Update RF loopback code according to the recent information from LimeMicro.
 Host: By default set initial Rx/Tx gain for LMS to middle point instead of the minimum.
 Host: Checking in a util to calibrate Tx DC offset using LMS internal registers.
 Host: Append dboard name to the LMS dboard serial number in UHD.
 Host: Rename path to DC calibration properties in the UHD property tree.
 Host: Add extensive debug output to UHD calibration utils.
 Host: Tweak UHD DC ofset and I/Q imbalance calibration utils to work with UmTRX.
 Host: Output messages to console only is verbosity>0 in LMS auto-calibration routines.
 Host: Support for RF loopback mode for LMS6002D chip.
 Host: Don't set Tx gains in lms6002d_dev::init().
 Host: Adding LMS auto-calibration on UHD initialization.
 ZPU: Fix a typo in a comment.
 Host: Move LMS interface in LMS2006D daughter board class into a variable for cleaner code.
 Host: Rename lms6002d_dev::lms_txrx_pll_tune() to lms6002d_dev::txrx_pll_tune() for better consistency.
 Host: Change LMS interace from separate Rx and Tx classes to a single XCVR class.
 FPGA: The fix for multiplexer for the RX and TX frontends was added.
 Host: Move LMS6002D control class to  separate source file.
 Host: Fix cmake install scripts after umtrx_ctrl.py and umtrx_lms.py has been removed.
 Host: By default use RX1 input on LMS, which is default on UmTRXv2+.
 Host: Removed UmTRX specific Python utils - they've been moved to a separate repo.
 FPGA: Work of each DSP channel's is indicated by separate LED's
 FPGA: Multiplexer for the RX and TX frontends was added.
 FPGA: Dual channel mode (TX) was fixed.
 Host: Add a comment regarding IQ mux selection logic in umtrx_impl::update_rx_subdev_spec().
 Host: Set correct register number for the Rx DSP/frontend muxer.
 Host: Create rx/tx codec paths in the property tree for both channels.
 Host: Fix IQ muxer settings in dual-channel case.
 Host: Fix Tx DSP registers - they were accidentially swapped.
 Host: Indentation fix in umtrx_impl.cpp.
 Host: Fix indentation and add a comment to umtrx_impl.cpp.
 Host: Fix tcxo-dac setting in dual-channel configuration.
 Host: Fix rx/tx_fe_corrections() to support multiple daughter boards on UmTRX.
 Host: Fixes for dual-channel support.
 ZPU: Add support for the second UDP Tx stream to ZPU and to fw_common.h.
 ZPU: Memory map has been changed according dual channel implementation.
 FPGA: Control logic for dual channel SRAM FIFO was fixed.
 FPGA: The second transmit channel was added.
 FPGA: The second receive channel has been made fully independent.
 Revert "Host: WORKAROUND: set_time_now() doesn't work for some reason."
 FPGA: Control logic for vita timer was fixed.
 Host: Clean-up umtrx_impl.cpp/hpp from outdated implementation of LMS6002D interface.
 Host: Return actual tunned frequency during PLL tune.
 Host: Clean-up db_lms.cpp from excessive default settings.
 Host: Implement Tx DC calibration setting for LMS6002D and hook it to UHD property tree.
 Host: Read TCXO DAC value form EEPROM on startup.
 Host: Add function to set TCXO DAC value from host.
 Host: Set Tx daughterboard and Rx daughterboard serial and revision equal to the motherboard serial and revision.
 Host: Implement EEPROM maping for UmTRX.
 Host: Replace tabs with spaces in indentation in usrp2_iface.cpp.
 Host: Bugfix: Initialize _tick_rate variable of rx_dsp_core_200 in constructor.
 ZPU: Added ability to software control LMS reset pins.
 Temporarily was disabled unused output pins in fpga project for UmTRX v2 board.
 FPGA: Fixed name of top module of the FPGA project for UmTRXv2.
 Opportunity to build FPGA project for the UmTRXv2 board has been added to the Makefile
 Added missed pins in project for UmTRX v2 board.
 fpga: Control logic for diversity switches was added.
 FPGA: Added ability to software control LMS reset pins.
 Added the ability to build the project for UmTRX v2 board.
 Host: TEMP: Set Tx/Rx LPF to 0.75MHz by default wile OpenBTS doesn't control this.
 Host: Fix comments in umtrx_lms.py.
 Host: Tweak verbosity of the register access debug in lms_tx/lms_rx classes.
 Host: Add support for gains, antennas and bandwidth control from UHD.
 Host: Implement Tx/Rx LPF control in UHD in lms6002d_dev.
 Host: Remove "lms_" prefix from lms6002d_dev functions for consistency, modify gain setting functions behavior.
 Host: Introduce verbosity to db_lms.cpp debug output and format it better too.
 Host: Print out tuning info in umtrx_lms.py only when verbosity >0.
 Host: De-tabify umtrx/dboard_iface.cpp
 Host: A more proper information about gains in LMS.
 Host: Remove old unused code for LMS control. Now replaced with the new code.
 Host: tx_enable() and rx_enable() will be called by UHD at the proper time anyway.
 Host: Better logging at umtrx_impl.cpp - controlled by a verbosity variable and more detailed/consistent.
 Host: Fix typo in comments.
 Host: Don't initialize LMS chips in UHD.
 Host: Rename lms6002d_dev::Init() to lms6002d_dev::init() to follow the naming convention.
 Host: gdb_eeprom is required for some UHD/GnuRadio utilities to operate correctly.
 Host: Do not change LMS settings which are not directly related to the tuning while tuning in UHD.
 Host: Make freqsel array in lms6002d_dev::lms_txrx_pll_tune() const static.
 Host: Remove old commented out code from umtrx_lms.py
 Host: Do not change LMS settings which are not directly related to the tuning while tuning in umtrx_lms.py.
 Host: We should use binary ~ instead of logical ! when operating bits in LMS register helper functions.
 Host: Implement basic tuning
 Host: Uncomment umtrx_impl::set_tx_dsp_freq() and umtrx_impl::get_tx_dsp_freq_range() functions to make more utilities work with UmTRX.
 Host: Fix typo in lms_set_vga1dc_q() function in lms.py.
 Host: More robust handling of parameters in umtrx_ctrl.py
 Host: Fix python syntax in umtrx_ctrl.py
 Host: Bump the version of umtrx_lms.py to 3.2
 Host: Update automatic initialization procedure.
 Host: Add an option for debug output for LMS register operations to umtrx_ctrl.py.
 Host: Set VGAs gain and turn off Rx in the automatic tuning procedure in umtrx_lms.py
 Host: Fix comments and make the logic of calibration procedures in umtrx_lms.py more straightforward.
 Host: Update General DC calibration procedure in umtrx_lms.py to correctly handle edge cases.
 Host: Add new commands to umtrx_ctrl.py, renameold ones for better consistency.
 Host: Add few test register setting to --init command in umtrx_lms.py (disabled by default).
 Host: Fix a bug in tuning algorithm in umtrx_lms.py, it works reliably now.
 Host: Better error reporting in umtrx_lms.py when tuning.
 Host: Update umtrx_lms.py to skip undefined registers in a register dump.
 Update s6_icap_wb.v to correctly handle clock domain crossing of control signals
 Host: Disable RXOUTSW in lms_init() to avoid any external interference on ADC.
 Merge branch 'sylvain/gpsdo' into fairwaves/umtrx
 Reading order of IQ data from LMS was changed.
 host: Add manual VCXO DAC control utility for UmTRX
 zpu: Improve GPSDO loop by Low Pass filtering the input value
 zpu: Add initial code for GPSDO support
 fpga: Add GPSDO hardware unit and wire it
 fpga: Fix VCXO DAC SPI, it's a MOSI output and not a MISO input ...
 Merge remote branch 'origin/akarpenkov/lms_freq' into fairwaves/umtrx-dboard
 Host: Add Rx PLL tuning function to umtrx_lms.py
 Host: Fix names of command line parameters for uhd_cal_tx_iq_balance
 TXLPF output to base band loop back was added.
 FPGA: Clock signal of TX DSP blocks fixed.
 Max idle changed according to DAC frequency.
 ADC/DAC data width corrected.
 FPGA: Vita timer frequency same as ADC/DAC frequency (13 MHz)
 Definition "LMS_DSP" was added into Makefile.UmTRX
 FPGA: Clock signal of DSP blocks switched to ADC/DAC clock.
 HOST: add options to manually apply I/Q corrections
 Host: Fix umtrx_ctrl.py to correctly detect UmTRX with new FPGA image.
 Host: Add option to erase flash contents to the usrp_n2xx_net_burner.py
 Host: Bump version of umtrx_lms.py
 Host: Add new actions to umtrx_lms.py and improve console output.
 Host: Add function to get bits to umtrx_ctrl.py
 Host: Fix host/utils/CMakeLists.txt - we have renamed LMS control script.
 Host: Add infinite looping feature to tx_samples_from_file.
 ZPU: Split the master clock rate from the TIME64 / VITA TIMER clock rate.
 ZPU: Let bootloader load production firmware even if no production FPGA image is found.
 ZPU: Fix LMS SPI interface edges.
 ZPU: Temporary disable ICAP to let ZPU formware build.
 ZPU: Add UmTRX-specfic initialization.
 ZPU: Add macros to form LMS read and write commands.
 ZPU: Set GPS UART rate to 9600 for UmTRX.
 ZPU: Support UMTRX_CTRL_ID_REQUEST if UMTRX is selected.
 ZPU: Enable SPI flash update over the network.
 Host: WORKAROUND: set_time_now() doesn't work for some reason.
 Host: Use get_master_clock_rate() instead of a magic number for the UmTRX clock rate.
 Host: Make UmTRX implementation closer to USRP2/N.
 Host: Enable Rx/Tx frontend corrections in UmTRX.
 Host: Correctly set tick rate in UmTRX interface.
 Host: More details in help in umtrx_lms.py
 Host: Clarify help comments in umtrx_lms.py
 Host: Bump umtrx_lms.py version to 3.0
 Host: Add enable/disable comands for Rx and Tx chains to umtrx_lms.py.
 Host: Fix lms_pa_off()/lms_pa_on() in umtrx_lms.py to affect only PA part of the configuration register.
 Host: Refactor umtrx_lms.py.
 HOST: pylint-inspired cleanup, default dump removed, use --dump option
 Host: Bump version of umtrx_lms.py
 Host: Fix command line parameters handling in umtrx_lms.py.
 Host: Python 2.7/3 compatibility for umtrx_lms.py
 Host: Fix typo in umtrx_lms.py
 Host: umtrx_lms.py version bump
 Host: Add DC calibration and LPF tuning functions to umtrx_lms.py. PLL tuning comand name is changed as well.
 Host: Clean up PLL tuning and update tuning range check.
 Host: Align comments in umtrx_lms.py
 Host: Bump umtrx_lms.py version.
 Host: Fix PLL tuning in umtrx_lms.py.
 Host: Fix comment in umtrx_lms.py
 Host: Add some RF settings initialization.
 HOST: python3 conversion, suppress additional output for --verify
 HOST: split out init into separate functions, expose them into CLI, add option to verify write results.
 HOST: fix parameter conversion and function name
 HOST: expose pll_tune and lms_init to CLI
 HOST: port LMS init from c++
 HOST: version bump
 HOST: port pll_tune implementation from c++
 HOST: code cleanup
 HOST: add Chemeris' lms_pll_tune
 HOST: reorganize options and help text
 HOST: use hex for register number everywhere, display at least 2 digits for hex numbers
 HOST: update rx_dsp rates
 HOST: add missing tick_rate
 HOST: introduce undocumented LMS init routine
 HOST: add LMS-specific register constants
 HOST: add LMS DC calibration stub
 HOST: fix typo
 HOST: fix dump function, improve output consistency
 HOST: allow dumping lms registers separately, make --lms required for writing, use hex for --data
 HOST: use global udp timeout
 HOST: improve textual messages
 HOST: code cleanup
 HOST: implement spi read\write
 HOST: improve umtrx address option handling
 HOST: use python version required by argparse
 HOST: improve spi write routine
 HOST: add basic command-line options
 HOST: rename to better reflect functionality
 HOST: fix spi writing
 HOST: add spi writing
 HOST: add register dump functionality
 HOST: refactor receiving codepath
 HOST: improve address handling
 HOST: add LMS registry reading
 HOST: fix copyrights
 HOST: copy io_impl from usrp2
 HOST: cosmetic improvements
 HOST: add crippled streamers implementation from usrp2
 HOST: hardcode dboard IDs due to lack of eeprom
 HOST: add db eeprom support
 Host: Fix bug in usrp_n2xx_net_burner.py
 Host: Modify usrp_n2xx_net_burner.py to support UmTRX.
 Host: Fix bug in usrp_n2xx_net_burner.py: user input should be read with raw_input().
 stricter check for return value
 HOST: another dummy path fix via adding placeholders
 HOST: add missing conf. tree branches
 HOST: add UmTRX awareness to silence error message
 HOST: add version info
 HOST: workaround - disable hw check to allow burning eeprom on UmTRX with usrp2 utils
 HOST: groundwork for python spi read\write
 HOST: minor cleanup
 HOST: improve formatting
 HOST: add forgotten output formatter
 HOST: fix options parsing
 HOST: add dumping implementation because external wrapper is too slow
 HOST: fix output filtering
 HOST: remove hardcoded debug output
 HOST: add wrapper for register dump
 HOST: add verbosity control
 HOST: code cleanup
 HOST: fix interface to properly address LMS units
 HOST: add umtrx_detect to install scenario
 HOST: revamp interface to fix runtime errors
 HOST: segfault fix
 HOST: cosmetic formatting fix
 HOST: make pylint happy
 HOST: simplify, improve code quality and portability
 HOST: simplify code and improve logging
 HOST: add broadcasting debug utility
 HOST: minor logging improvement
 HOST: improve logging
 HOST: fix UmTRX discovery
 HOST: minor style improvement
 HOST: fix boost options parsing
 HOST: add LMS register read\write utility
 HOST: remove NotImplemented exception from unsupported GPIO interface
 HOST: mask init function for UmTRX
 HOST: remove obsolete files
 ZPU: add conditional choice between UmTRX and USRP2
 document present directory layout and interface dependencies
 HOST: add UmTRX support to usrp2_iface
 Merge branch 'fairwaves/umtrx-dboard' of github.com:chemeris/UHD-Fairwaves into fairwaves/umtrx-dboard
 HOST: (re)arrange functions so UmTRX implementation is in separate directory but as much as possible of USRP2 code reused.
 HOST: move UmTRX support into separate directory
 HOST: remove UmTRX-specific constants
 HOST: rollback UmTRX-specific additions
 HOST: rollback UmTRX-specific additions
 HOST: revert dboard interface to original state
 HOST: revert controllers to original state.
 Host: A big hack to test LMS tunning.
 Host: Rename lms_dboard_iface::write_addr_data() to lms_dboard_iface::write_addr() and name its parameters.
 add hw revision check to make sure that clock and codec controllers won't issue unneeded SPI requests.
 add logging to stub functions
 extend test functions interface to handle both RISE and FALL read\write
 add description and testing instructions
 fix write routine, code cleanup
 use umtrx-specific dboard interface
 add umtrx-specific dboard interface
 HOST: add UmTRX IDs.
 ZPU: add UmTRX IDs to request-response protocol.
 HOST: (re)arrange functions so UmTRX implementation is in separate directory but as much as possible of USRP2 code reused.
 HOST: move UmTRX support into separate directory
 HOST: remove UmTRX-specific constants
 HOST: add UmTRX IDs.
 ZPU: add UmTRX IDs to request-response protocol.
 HOST: rollback UmTRX-specific additions
 HOST: rollback UmTRX-specific additions
 HOST: revert dboard interface to original state
 HOST: revert controllers to original state.
 Host: A big hack to test LMS tunning.
 Host: Rename lms_dboard_iface::write_addr_data() to lms_dboard_iface::write_addr() and name its parameters.
 add hw revision check to make sure that clock and codec controllers won't issue unneeded SPI requests.
 add logging to stub functions
 extend test functions interface to handle both RISE and FALL read\write
 add description and testing instructions
 Direction of TX1EN, TX2EN, RX1_EN and RX2_EN nets changed.
 Nets TXD2 and RXD2 was swapped due to fix Issue 7 in UmTRX project
 fix write routine, code cleanup
 use umtrx-specific dboard interface
 add umtrx-specific dboard interface
 FPGA changes to enable control both ethernet socket LEDs.
 Update ZPU bootloader after the previous commit.
 Control both green and orange LEDs of Ethernet socket.
 Change MASTER_CLK_RATE in ZPU from 100MHz to 104MHz for UmTRX.
 Precompiled bootloader was changed due to fix Issue9, and switched on blocks of EEPROM, SPI and I2C.
 Reverting temporary correction of the Issue 9. Ethernet MAC is now working properly due to FPGA timing violations fixes.
 Readme file for UmTRX project is added
 Minor timing fix: add pipeline register to rising and falling edge of PPS signal.
 Modify fpga/usrp2/coregen/.gitignore to omit Xilinx Coregen files
 ICAP timing fixes for UmTRX Spartan-6 FPGA.
 LMS1 is renamed to LMS2 and vice versa. Previously they were named in a counterintuitive manner
 Masks for controlling different SPI peripherals was defined in ZPU firmware
 Masks for controlling different SPI peripherals was defined
 Precompiled bootloader was changed due to temporary fix Issue9, and switched on blocks of EEPROM, SPI and I2C.
 UmTRX option has been added to the Makefile to allow compile the UmTRX project with  "make UmTRX" command
 Blocks of EEPROM, SPI and I2C are switched on
 Precompiler directive was added to switch off initialization of clock due to unnecessary in the project "UmTRX"
 Precompiled bootloader was changed due to temporary fix Issue9.
 Temporary correction of the problem with receiving broadcast packet. (Issue 9)
 Control block for external SRAM was switched on for further testing
 LMS RESET signal is set to 1 to enable LMS chip after FPGA load.
 Corrected links on top and .ucf files in Makefile for UmTRX project
 Direction of the SPI lines to the chip has been fixed
 Name of top module was changed
 SPI bus were aligned with the project
 Some blocks were switched off and some input and output nets was deleted, because they are unused in project
 Nets TXD1 and RXD1 was swapped due to fix Issue 7 in UmTRX project
 .ucf file for UmTRX project was renamed and his structure was optimized
 Top file for UmTRX project was added
 Fixed link to the ucf file for UMTRX board.
 Definition UMTRX was added to select the board
 Precompiled bootloader for UmTRX board was added
 UART divisors was recalculated according to 52 MHz clock frequency
 Pll cores was added to makefile
 Added a Makefile to build UmTRX project
 Fixed an error with name of compiler directive UMTRX
 Fixed an error with name of compilers directive "NO_EXT_FIFO"
 I removed this because CPU did not work if I unplug the serdes block. I didn't undestend yet why so happend. I don't yet understand why this is happening.
 Fixed an error with name of signal CLK_TO_MAC
 Generation of clock signal for UmTRX was added (compiler directive UMTRX)
 Generation of clock signal for ICAP module was changed for implementation on Spartan 6
 Width of signal dat_o was changed for implementation on Spartan 6
 Instance name of ICAP module was changed
 Modify ZPU firmware to remove all access to Flash, EEPROM and AD9510 clock distributor.
 User constraints file for xc6slx75 in package fgg484 was added.
 Frontend to LMS602D has been redesigned. Second LMS602D was added.
 NO_EXT_RAM was replaced by NO_EXT_FIFO
 Missing "'else" statement was added.
 Compiler directive to enable LMS chip interface is changed from "NO_LMS" to "LMS602D_FRONTEND".
 Interface for a LMS chip was added. Compiler directive for using of LMS chip is "NO_LMS".
 Spartan6 ICAP was added. Compiler directive for using of Spartan6 ICAP is "SPARTAN6".
 Compiler directives for using of external RAM and SERDES was added.
 uhd: flush transport for new rx streamers
 images: include license file into image tarballs
 usrp1: use fixed bit width integer for hash
 uhd: patch to support PKG_LIB_DIR per debian fs standards
 uhd: dont populate requires.private in pc file
 Merge branch 'fpga_master'
 n2xx: fix burner print if bad rev
 n2xx: updated bootloader to latest build in uhd master
 usrp: db manager tweak for contructor throwing
 usrp: compensate for other sc8 conversion gain
 usb: updated FindUSB1.cmake for standards compliance
 sbx: fix dboard tuning to cache result
 usrp1: initialize tick_rate prop (fixes readback)
 N210 R4 should be using LVDS TX clock, not CMOS.
 usrp2: fw fix for hal_uart_getc_noblock return code
 uhd: typo fix in tx waveforms options
 uhd: fixes that make uhd compile on freebsd
 e100: better error message for eeprom model error
 uhd: manually link into pthreads here
 uhd: manually calculate bcast addr, boost version buggy
 Merge branch 'network_foo'
 usrp: added underflow_policy to tx streamer args
 usrp2: added bind option to the relay
 usrp2: more work on relay app and sequence error detection
 usrp2: created network relay example app
 usrp2: use the socket to determine the device addr
 uhd: network device discovery -> calc bcast addr under certain conditions
 basic: minor fix for copy paste typo
 Make WBX v3+ TX set max attenuation when idle
 usrp1: fix div ratio for interp register
 usrp1: fixed swapped sign on rx cordic
 tvrx: adjust returned lo freq to compensate for negative cordic shift
 tvrx: fixes for tvrx since the property tree work
 uhd: use more recent udev rules format
 uhd: typo fix for the error print
 usrp: better error message when dboard fails in init
 uhd: make use of TEMP_FAILURE_RETRY when select()
 uhd: update udev rules, replace SYSFS w/ ATTRS
 usrp: added mboard param to set time next pps
 uhd: correct images docs for ZPU support
 UHD will now print 'L' whenever a late packet is transmitted.
 uhd: some more notes on calibration utils
 uhd: added wireformat to samples to file
 usrp: rx dsp move init code into clear (like tx)
 Make TX disable mixer when idle to avoid LO leakage
 uhd: work with stream clearing
 Merge branch 'uhd_master'
 usrp1: set scale factor after setting converter
 Merge branch 'fpga_master' into uhd_master
 rx_samples_to_file is not streaming the correct nsamps
 uhd: fix so MSVC client apps dont rely on min/max
 usrp2/nseries: restored clock/serdes readback
 uhd: tweaks to calibration utilities
 b100: tweaks for fpga resets on init
 dbsrx: set initial freq and bw filter after clocks enabled
 usrp: clear dsp when making new streamer
 basic: fix basic db center freq to always zero
 uhd: fixed mboard detection checks to the cal utils
 Merge branch 'calibration'
 e100: added self-cal support with minor speedups
 uhd: more common code in cal utils
 uhd: support for applying cal corrections B100
 uhd: added calibration usage app notes and renamed apps again
 uhd: added freq options and common gain setter
 convert: added generic conversion for sc8 wire -> sc8 host
 Merge branch 'convert_work'
 convert: move priorities to implementation, different for arm
 uhd: work on doxygen comments for stream args
 uhd: different interp methods for IQ vs DC
 uhd: added tx dc offset calibration + tweaks
 convert: msvc warning fixes for sc8 table gen
 uhd: fixed sc8 table conversion, and simplified shifts
 usrp: fixed default initialization of iq bal correction
 convert: added table conversion routines for sc8
 convert: simplify table conversion with templates
 convert: added table conversion routine for sc16 to floats
 convert: made conversion functions into classes so they can keep state
 uhd: share more common code in cal utils
 Merge branch 'fpga_cal_work' into calibration
 uhd: created rx IQ imbalance app to parallel tx
 uhd: lots of tweaks for calibration utility
 uhd: simplification for tx waveforms
 Updates to accommodate loopback calibration mode
 uhd: convert should use register_bytes_per_item
 usrp: basically working iq cal on tx
 uhd: basically usable cal sweep for wbx
 need more umph out of correction values
 uhd: updated ref sensor checks for new option names
 uhd: performance improvement for tx waveforms using integer table lookup
 uhd: first stab at calibration app
 usrp: added missing include for weak ptr
 usrp1: fix typo when calculating rx_dc_offset register
 Clip WBX target freq before computing LO settings
 uhd: useful tweaks from user
 Merge branch 'uhd_next'
 Merge branch 'fpga_master' into uhd_next
 uhd: removed wax and props utils
 Updated typos in XCVR2450 dboard property tree code
 uhd: dont pass 0 sample buffs to converter (avoid segfaults)
 usrp2: fix channel mapping calculation
 uhd: modify examples to use new time/clock source API
 uhd: bumped version number for next branch work
 wbx: fixed typo because it should tx
 wbx: bring WBX into the tree
 sbx: bring SBX into the tree
 wbx: squashed Ben's WBX work
 sbx: squashed Ben's SBX work
 basic: disable dboard clocks by default
 Port of daughterboards from wax to new property trees
 rfx: setup frontend property tree for rfx dboard
 usrp: work on dboard code to use subtrees to populate frontend props
 uhd: fixed compilation error on tx waveforms
 uhd: performance speed up for tx waveforms, no iterative libmath per sample
 remove unused irq to meet timing
 usrp: parse rx stream args scalar
 convenience makefiles for top level projects
 uhd: performance speed up for tx waveforms, no iterative libmath per sample
 increase vita rx fifosize to 10, like USRP2, make things work
 dsp: remove dsp_buffer and replace with simpler add_routing_header,   other funcs of dsp_buffer are done by double_buffer and dsp_engine
 e100/b100: init tree before filling it
 dsp: remove warnings
 u1e: fix unattached nets from copy-paste error
 b100: fix warnings, complete removal of test code
 b100: remove test features from GPIF to save space
 e100/b100: moved gpio regs and compat readback
 usrp2: reg map change for GPIO core
 usrp: fix rate calculation logic
 usrp: multi usrp API tweak
 somebody made a typo
 usrp: added called to query bw range as well
 usrp: reorganize frontend paths in tree for correction stuff
 usrp: placeholder for potential set_next_command_time call
 usrp: docs tweaks and renames to multi-usrp
 usrp: prefer name iq_balance for api call
 usrp: register properties for correction and dc offset
 usrp: update frontend cores for dc offset
 usrp: add api call to adjust phase/mag imbalance
 usrp1: implement rx dc offset control hooks
 usrp: add api control for tx/rx dc offset control
 usrp: added get_tx/rx_rates
 uhd: added some stream docs/app notes
 uhd: changed stream args args to device_addr_t
 uhd: added converter for item32 as cpu type
 uhd: added trailer parsing for occupancy
 uhd: fixed 8sc item32 converter on head/tail cases
 usrp: deprecated clock config, added time/clock source calls
 uhd: renamed convert markup to format
 e100: performed streamer API update to e100 impl
 b100: performed streamer API update to b100 impl
 usrp1: support variable clock rate through API
 uhd: added one packet mode to rx streamer
 usrp1: got the 16Msps working (needed non hb-filter image)
 usrp2: work on alternative OTW formats
 usrp1: various tweaks related to streaming
 usrp1: type conversions and 8-bit work
 usrp1: multi channel receive working
 uhd: renamed some of the stream types and functions
 uhd: device_deprecated.ipp typo fix
 uhd: restore io type header for swig backwards compat
 usrp1: did work for stream interface on usrp1
 uhd: updated examples to use new streamer interface
 uhd: tweaks to streamer interface and multi-usrp convenience interface
 usrp2: additional corrections for streaming to work
 uhd: lots of work releated to streamer work and usrp2 implementation
 uhd: restored super packet handler functionality
 uhd: created backwards compatible send/recv implementation
 convert: restored unit test functionality
 convert: reworked convert to use new identification standard
 uhd: work on streamer interface, lots of docstrings
 uhd: removed unsed interfaces, deprecated otw and io type
 uhd: moved wax API into deprecated files
 uhd: allow device addr (from string) to parse empty values
 n2xx: set default for checkrev on burner so gui still works
 u1e/u1p: GPIOs switched over to setting regs
 basic/lf: keep dboard clocks disabled (should be by default)
 uhd: bump verion compat to 3.3.1
 uhd: added toolchain file for native arm neon build
 forgot to add gpio atr to makefile source list
 32 bit compat number for E and B series
 u1e/u1p: removed led setting reg
 u1p/u1e: partially redone atr and gpio redo
 u2/u2p: use new setting_reg based gpios, gets it off of wb
 u1e/u1p: remove unused UART
 u2/u2p: move nearly all setting regs onto dsp_clk
 u2/u2p: remove dead comments and code
 dsp: make rounding a single bit work again
 dsp: new rounding.  more complex, but better properties
 dsp_engine: don't use SD rounding in 8 bit mode, so we can have a flat noise floor.
 dsp_engine: trailer change to fit standard
 dsp_engine fix rst -> reset, default to read address
 dspengine: move the register to VITA_RX_CTRL + 9 instead of + 3 which is occupied
 dspengine:  insert into the rx chain
 dsp_engine: new way of doing DSP operations on VITA packets.  Example does 16 to 8 bit conversion
 dsp: ability to set rx dc offset to a fixed value
 usrp2: fix typo in top level core files
 uhd: more doc tweaks to build guide
 Line-wraps in general docs.
 Simple refactor, lower-cased 'FAT' so users wouldn't think it is an acronym.
 Small changes / markup on the e1xx documentation.
 Adding stuff to the tune request docs.
 uhd: change how we configure version.cpp
 docs: unified gpsdo docs and sensors stuff
 nseries: added dont check rev option to the burner app
 usb: improve messages/logging for when the usb open fails
 b100: perform test claim on usb before continuing
 b100/e100: additional constraints for clock rate configuration
 uhd: added missing shbang to pre/post scripts
 Fixing VID comment in firmware to reflect ERLLC rather than FSF.
 uhd: added post/pre un/install scripts for deb and rpm packages
 uhd: added supported models and some doc tweaks
 Default adf4350 PLL to fast-lock mode.
 Fix for unitialized eeprom
 b100: new eeprom map for special 9 byte serial
 usrp: add documentation for front-panel leds (needs FPGA update)
 Merge branch 'fpga_master' into uhd_master
 connect and map b100 and e100 front-panel leds
 B100: change B100 PID in usb_descriptors.a51 as well
 uhd: specify range on tx_waveforms --ampl
 b100: add reference lock sensor
 usrp: added product and revision fields to eeprom
 usrp: added revision field to the dboard id class
 B100: use PA6 for pktend
 1 Character Patch for USRP1 usrp_eeprom.bin generation
 Renaming 'usrp1_init_eeprom' to 'fx2_init_eeprom', and making it enable based on ENABLE_USB rather than ENABLE_USRP1 since we also need it for B100.
 Changed the udev rules for the new B100 PID.
 B100/USRP1: pass in VID/PID from args string so you can specify where to look for devices if you like
 Init_eeprom: enhancements for B100/reinit of init'ed devices
 B100: modify build_eeprom for correct B100 PID
 B100 firmware fix for FPGA load race condition, plus a little cleanup for readability
 Bumping the B100 PID to 0x0002, at Josh's direction.
 uhd: help messages for user on rx samples to file
 e100: codec control register fix for tx
 gen2: fixed rate calculation when > 128
 images: fix makefile for E1XX build dirs
 usrp2: give users a warning for gpsdo support + fw update
 usrp2: remove old pre-release warning
 images: include hash in the generated file name
 usrp2: allow backwards compat with previous fw
 Merge branch 'uhd_master'
 e100: tweak for codec params for slight improvement
 images: typo fix building B100.bin
 e100: gps talking -> termios magic foo
 Merge branch 'fpga_master' into uhd_master
 usrp1: copy regs files into common and fix include paths
 e100: gps uart deal with cr and nl
 E100: GPSDO serial port level conversion
 e100: added support for internal gpsdo
 gps: use absolute timeout for communication
 usrp: add gps control to the API
 usrp2: uart/udp work in host and fw, working
 ZPU/USRP2: first stab at UDP UART firmware
 e100: added ref locked sensor for clock reference
 e100: added support for r4 differential clocking
 uhd: doc tweak for udp transport notes
 B100: unshadow dboard clock rates so you can set master freq after init and still tune ok
 uhd: bumped version numbers for this new cycle
 Updates to example apps
 Make unknown db complain usefully about antenna selection
 usrp: super packet handler release in order
 B100: LVDS clocking on db outputs
 usrp1: disable pad to one for usrp1 (not needed)
 b100: order of deconstruction, kill marauder first
 B100: use gpif_misc on R2 hw, invert direction of gpif_misc pins
 usb: added interface args to usb abstractions
 uhd: separate_device_addr, copy globals across entire address
 usrp: also use the new API to get the property tree in multi-usrp
 usrp: fix string mapping for PPS_NEG clock config
 uhd: updated to images documentation
 u1e,u1p: turn off debug pins, misc cleanups
 u1p: proper format in ucf file
 usrp: remove wax::obj entry point (not used)
 usrp: fix check for max stream_cmd.num_samps, upper 4 bits reserved
 USRP2: don't populate GPS sensors if no GPSDO found. Fixes bug #614.
 n-series: removed unused bootloader files in fw
 wbx: fix bug in wbxv3 tx gain readback calculation
 udp: added check_registry_for_fast_send_threshold to non-wsa transport
 e100: fix FPGA filename lookup, and use model string for name
 uhd: add mimo cable config option to rx_multi_samples
 uhd: updated docs usb post-install, added uhd-usrp.rules
 uhd: remove Boost_LIBRARIES from pc file libs.private
 Merge branch 'e110_support'
 Merge branch 'fpga_master' into e110_support
 u1e: relax GPMC constraints, eases P&R
 usb: reimplement ~libusb_zero_copy_impl to avoid segfaults and indefinite timeouts
 usrp1: reset control objects in this order to avoid race conditions
 usb: removed handler thread, do work in get buffer calls
 e110: added support to images Makefile
 Merge branch 'fpga_master'
 e100: use model string to determine FPGA image to support E110
 Header-include fix: <cstring> for std::memcpy in usrp_e_utils.
 xcvr2450: fix the locking at marginal frequencies
 uhd: fill in other fields of pkg-config file
 uhd: removed WSA UDP transport implementation
 u1e: separate build for E100 and E110, just a different FPGA
 e100: add FIFO clear and kernel clear to loopback
 e100: reimplemented loopback for easy regression testing
 e100: changed compat numbers, and tweaks
 e100: only generate random _even_ sizes for loopback
 e100: changes to support bus work
 B100: don't reset send buffers (screws up TX)
 Merge branch 'fpga_master' into next
 Merge branch 'patch_release'
 usrp2: made iface deconstructor safe (unlock can throw)
 usrp2: made iface deconstructor safe (unlock can throw)
 uhd: added docs on FPGA images for n-series hw revs
 uhd: also normalise the time spec when adding/subtracting (added unit test)
 uhd: tweak for tx_timed_samples to pad async msg timeout
 uhd: more doc tweaks and added gpsdo notes to index
 uhd: fixed formatting on gpsdo doc, added time sync docs on mimo cable
 usrp2: manually deconstruct tasks, fixes cleanup bug
 uhd: bump minor version for patch release
 Merge branch 'fpga_patch_release' into patch_release
 usrp: preserve sub-ranges when calculating overall tune range
 fix typo
 all: tie unused ram inputs to 1 instead of zero, helps routing
 e100: squashed work on bus implementation on GPMC
 fix warning on dat_o in atr_controller16.v
 uhd: fix for dealing with negative wrapping in time_spec
 fpga: minor tweaks to build system
 fix typo
 all: tie unused ram inputs to 1 instead of zero, helps routing
 b100: gpif_rst resynced to gpif_clk
 dsp: slow down the time constant of the DC offset correction by a factor of 16.  it may need to be even slower.
 usrp2: reconnect frontend calibration, timing meets
 usrp2: manually deconstruct tasks, fixes cleanup bug
 B100: fix order-of-operations issue w/SPI & I2C
 B100: reset FPGA GPIF fifos correctly so no garbage data on startup
 usrp2: initialize channel occupancy variables,
 usrp: use the frontend BW to clip the overall tune range
 uhd: replace cast in usrp_burn_mb_eeprom to be like other apps (fixes ubuntu 10.4 compiler bug)
 usrp: dboard sensors fix, populate for tvrx, and should be empty on basics/unknown
 uhd: added readback of version and arbitrary string property to probe app
 Merge branch 'fpga_patch_release' into patch_release
 e100: continuation of the atr fix to get e100 to build
 uhd: bump patch version to 2 for upcoming patch release
 usrp2: bump FPGA minor number to 2 for patch release
 connect unused BRAM inputs to 1s to save routing logic
 dsp: clear cic_decim when not enabled
 N2x0: print constraints summary from makefile
 N2x0: added a Makefile to build all N2x0 projects (make -j4)
 N2x0: delay ADC A inversion so A and B are latched in the same
 usrp2: bump usrp2 fw minor to 4 for upcoming patch release
 usrp2: always resize socket send buffer to size of SRAM (we will never commit more)
 SBX: fix typo in freq range
 save before you commit, thanks
 typo in last commit
 uhd: also find RST2HTML_EXECUTABLE as rst2html.py
 gps_ctrl: make GPSDO parsing more robust, add retries
 udp: only build WSA transport for MSVC (not supported on mingw for example)
 B100/E100: fix ATR RX mode pins not connected
 uhd: fix sync docs typo for pps detect method1
 N2XX: fix bug in firmware updater (don't use local variables for static data). this fixes the "n210 bricking on update while streaming" bug.
 usrp1: handle special case of no rx or no tx dsps
 usrp1: fix for multi-channel, OTW channel width is always 1
 Added documentation for subdevice specifications
 GPS ctrl fixes for uncooperative Firefly devices (Bastien Auneau)
 uhd: if found, require a liborc version orc-0.4 > 0.4.11
 uhd: specify all the boosts
 uhd: minor tweak for send_packet_handler, force zero sample send hack to return zero
 uhd: added print constraints to makefile, and used directory variable
 uhd: incr minor, add date to images tag, add package target to makefile
 usrp2: shutoff streaming using the stop bit (fix)
 Merge branch 'atr_fix_fpga' into atr_fix
 usrp2: turn that message into an exception, require at least 7.1
 usrp2: adjusted mimo delay cycles for FPGA changes
 time:  register time output to help fpga timing
 vrt: delay the late signal to help with timing
 dsp: allow tx iq balance to be removed at compile time
 dsp: option to remove iq compensation at compile time
 usrp2: remove hw config readback, not needed
 time64: reverted mimo sync changes to time64
 u2/u2p: speed up time_64, and remove readbacks on simple_gemac wb regs
 simple_gemac: remove old 19-bit wide wrapper
 usrp2: remove old unused readback mux value
 usrp2: bump minor version number for changes
 vita_rx_ctrl: use an extra cmd bit to signal stop
 usrp2: fixed swapped tx/rx signals for nsgpio
 usrp: use a new cmd bit to signal stop
 simple_gemac: add parameter to allow disabling rx flow control at compile time
 usrp2: created new gpio core and used in dboard iface
 u2/u2p: apply atr/gpio changes to u2p
 atr: forgot to delete this line
 u2: redo the atr gpio pins, remove some old cruft
 uhd: make spawn barrier a member of a task (see notes)
 usrp2: fix unintended change in last commit
 uhd: exit task on the catch-all exceptions, and dont print anything
 uhd: fixed some warnings with gcc on macosx
 u2p: finish copying over serdes light fix
 e100: perfer orc if available and dont build neon intrinsic support
 uhd: added helpful UHD_VAR macro for debugging purposes
 uhd: replaced boost filesystem path with fs_path in property tree
 uhd: added get_version_string and way to disable system info print
 usrp: update multi usrp header to use complete subdev specs
 u2/u2p: further qualify the serdes link light
 usrp2: use the command function from card burner for net burner ifconfig
 usrp2: workaround for older boost thread sleep
 uhd: forward declare property tree in device so gnuradio swig cant complain
 uhd: add get_tree call directly to the device
 uhd: fix for images CMakeLists.txt to use the new modules directory
 uhd: images build script chmod recursive, files only
 fpga: save the N2XX bit files into the images build
 Merge branch 'new_work' into uhd_next
 fpga: squashed new_work fpga changes onto uhd next
 usrp2: comment out poll + print overflow/underflow in fw
 usrp2: split inspection logic into each relevant cycle
 appease the ISE gods
 removed wb readback of ATR, allowing it to be synthesized as luts
 N200: detailed map report allows you to see what takes up too much space
 dsp: reduce bitwidth to help timing
 fpga: print timing report after generate bin file
 dsp: reset the interpolator when the rate changes, to prevent oscillation
 b100: fix for fpga syntax error on xfer_rate
 Merge branch 'b100_shrink' into new_work
 uspr1: shutdown thread in deconstructor (not automatically)
 udp: check for FastSendDatagramThreshold + print warning inside the wsa transport
 usrp2: try/catch for socket open on discovery, use large send buffers windows
 uhd: tweaks for windows boost 1.47 compile
 Merge branch 'master' into next
 usrp2: added fw minor and moved ICMP dest error handling to txrx app
 usrp2: use the err transport for tx/err, and rx xports are recv only
 udp: squashed the wsa work and added documentation work
 Added notes on latency and through put tuning for UDP
 uhd: some header changes from next
 uhd: created SSE2 conversion routines for fc64
 Updates to WBX dboard driver for version 3 support
 uhd: pulled misc changes from other branches into master
 uhd: added tasks to simplify thread spawning use cases
 usrp2: added a place for product code in eeprom map
 usrp2: added a place for product code in eeprom map
 uhd: some tweaks to fix msvc warnings
 Fix rounding in DBSRX2 tuning
 Fix rounding in DBSRX2 tuning
 E1X0 : Remove the spi and i2c test programs.
 e100 : Adapt kernel header to work in user space.
 e100: typo fix for calling ioctl on iface
 e100: use the USRP_E_READ_CTL32 ioctl for async msg read
 Update usrp_e kernel header file copies.
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 Merge branch 'fpga_next' into next
 b100: fix for fpga syntax error on xfer_rate
 uhd: updated the major and minor versions for next branch
 uhd: moved modules and some other files into cmake subdir
 Merge branch 'fpga_next' into next
 Merge branch 'b100_shrink' into next
 uhd: added unit test for properties subtree
 uhd: benchmark example will print help if no rate specified
 usrp: added software scale factor adjustment
 uhd: added subtree capability to property tree
 usrp: fix error message typo in recv_packet_demuxer
 Merge branch 'next' into properties
 Merge branch 'master' into next
 usrp: enable/disable frontends when validating subdev spec
 usrp: added clipping to link max rate when setting sample rate
 usrp: handle frontend swapping if the first subdev is QI or Q
 uhd: added inline message testing to the messages example
 usrp2: accept old db name 0 for backwards compat
 usrp2: set the set_alignment_failure_threshold to match default socket buffer size
 usrp2: restored fpga compat check, updated for major/minor scheme
 usrp2: split compat number into major/minor (increment minor for fixes)
 usrp: removed register defs in regs.hpp that were covered by cores
 usrp1: tweaks + implemented other features to mimic async and inline messages
 usrp: renamed ref_source to clock_source (terminology)
 usrp: renamed sma source option to external
 usrp: updated documentation for various changes (mimo mode, subdevice spec defaults)
 usrp: created common code to demux an rx stream (b100, e100)
 usrp: added validate_subdev_spec to all io_impls
 uhd: replaced alignment indexes implementation w/ boost bitset
 usrp: moved fx2 stuff into common folder
 usrp1: removed unused files from impl dir
 usrp1: implemented properties interface on usrp1
 e100: disable eeprom read so double open can work for now
 e100: added false alarm count + sleep for gpio irq (since its shared)
 e100: removed unused files from e100 build dir
 e100: moved e100 into property tree, probes ok...
 b100: figured it out, endianess was set wrong
 usrp2: restored component registry
 b100: made async callback safer, other tweaks (still issues)
 b100: some tweaks (unresolved streaming issues ATM)
 b100: removed old impl files, moved async processing to io impl
 b100: got b100 into the properties tree like usrp2
 usrp2: moved impl back into usrp subdir
 uhd: misc tweaks and also msvc compile
 usrp: deleted a bunch on obsoleted files in usrp directory
 uhd: implement prop tree usage in utils
 uhd: make sure things are initialized
 uhd: properties tweaks and docs
 usrp: filled in the to pp string method
 uhd: loopback working on usrp2
 uhd: added properties unit tests, use shared ptr<void> in tree
 uhd: work getting multi-usrp working
 usrp: fixed core bases (miscalculation)
 usrp: got probe working w/ the new property tree
 usrp2: filled in missing TODOs and code cleanup
 usrp2: init subdev specs and tick rates
 usrp2: fix for new props interface
 uhd: re-work to make the properties easier to use
 usrp2: restored discovery and most of io_impl
 usrp2: added gps ctrl and mboard and gps sensors
 usrp: populate a tree from a subdev
 usrp2: setup many more control objects and xports
 usrp2: work on setting up controllers
 uhd: fixed sse2 conversion bounds check
 usrp: filled in rx and tx frontend cores
 usrp: created cores for the rx and tx dsp
 uhd: added core for time64
 usrp: created core controllers for i2c and spi on 100 series
 uhd: created uart iface to inherit from
 uhd: forgot to commit properties file
 uhd: change for default prop create()
 uhd: created a property tree to store properties
 uhd: work on templated property class
 Merge branch 'master' into next
 b100: always init the serial number in find
 usrp2: init the usrp2_ctrl_data_t to make valgrind happy
 uhd: print the exception so e gets used (avoid MSVC warning)
 uhd: added dynamic throw and clone to exceptions
 Merge branch 'wbx_v3'
 Merge branch 'gps_work'
 e100: consistent name for e100 fpga files in host code and images build
 e100: proc_int should be high when interrupted
 usrp2: fix typo w/ setting send frame size
 e100: added proc_int and buffer for async messages
 uhd: benchmark rate fix so we dont use metadata on timeout
 Refactor GPS code to duplicate way less stuff, make members private
 Add GPSDO documentation
 USRP2/N210: set VITA time even if GPS not locked. harmless to do so.
 UHD: implemented gps_locked sensor. usrp2 mboard doesn't init VITA time if time not valid.
 UHD: GPS work. * Rewrote NMEA acquisition to be more general * Added GPS sensors instead of member fns for data access * GPS sensors added to mboard sensors to keep ABI compat * VITA time initialized to GPS time on init
 uhd: on e100, this benchmark control thread should also have prio so it can spawn both
 e100: tweak which I don't understand
 e100: wrong gpio, its 147 for interrupt
 b100: also spi wait before using spi to ensure its ready
 e100: implemented spi, i2c, messages w/ peek/poke
 WBX: Add support for WBX v3 daughterboards
 u1p: remove uart and bus testing to fit easier
 u1p: remove unused ports
 uhd: re-worded the fast-path thread app notes
 u1e: core compile now works as a fullchip lint
 N210 R4 lost fix for ADC data termination
 uhd: replaced boolean for thread loop w/ boost::this_thread::interruption_requested
 Merge branch 'fw_updater'
 Merge branch 'card_burner_tweaks'
 N210: update burner for python3.0, added listbox for device selection in gui
 uhd: replaced boolean for thread loop w/ boost::this_thread::interruption_requested
 usrp2: macosx fix, use object's strip, not str (could be unicode)
 u1p/u1e: cleanup some warnings, connect the correct clocks
 fw_updater: windows enumeration works
 u1p: connect have_packet signal
 usrp2: removed asserts in card burner, remove ascii decode
 u1e: fix typos
 fw_updater: decrease discovery timeout, modify win to return bcast instead of ip
 fw_updater: device enumeration support, not integrated into main app yet
 u1e: the perils of cut and paste
 fw_updater: add broadcast addr finding for *nix/Win
 u1e: rearrange gpmc fifo
 fw_updater: add support for fictitious "rev 2" N2XX
 u1e: experimental rewrite of read path of gpmc
 N2XX: firmware stops device streaming on fw update, and updater script checks hw rev before proceeding
 USRP2/N2x0: incremented compat numbers for frontend work
 Merge branch 'usrp_e100_aux_spi' into dsp_rebase
 u1e/u1p: new register map for new dsp
 Merge branch 'benchmark_rate'
 uhd: use aligned loads and stores for floats in sse2 conversion routines
 Merge branch 'next'
 b100: removed defunct test utilities
 uhd: more benchmark tweaks, removed old benchmark rx
 uhd: added dropped samples calculation to rx test
 uhd: created benchmark rate app
 usb: fix for fx2_ctrl include issue
 uhd: increment version minor for release
 b100: update find to match usrp1 style + features
 b100: removed usrp prefix from files
 Merge branch 'philip/e100-fpga-test-fixes' into next
 b100: fix fx2_ctrl include to use relative path
 usb: fix for fx2_ctrl include issue
 e100: clean up gpio wrapper stuff, fix order of setup in make()
 Merge branch 'master' into next
 e100: removed usrp from directory prefix
 uhd: tweak for bounded buffer pop elem
 Merge branch 'master' into frontend_work
 b100: tweaks to get dsp branch working
 b100: support for dual dsp
 uhd: added host to/from worknet conversion to byteswap header
 u1p: work in dual rx and frontend from u1e
 u1p: new tx dsp frontend, copied from u1e
 u1e-dsp: attach tx dc offset and iq balance
 uhd: increment version minor for release
 n2xx: makefile typo fixes
 b100: added images to Makefile
 b100: added b100 host (squashed)
 b100: added b100 firmware (squashed)
 uhd: updated images Makefile
 Merge branch 'fpga_next' into uhd_next
 uhd: under/over flow app notes
 usrp_e100: init the subdev specs before calling io_init
 uhd: fix for resize routine of super packet handler
 uhd: update packet handlers when the clock rate is changed
 uhd: fix some warnings under msvc in sph
 uhd: removed vrt packet handler code
 usrp_e100: super packet handler support squashed
 usrp1: super packet handler support squashed
 usrp2: super packet handler support squashed
 uhd: supper packet handler support squashed
 NEON detection for E100 in convert/
 Remove unnecessary include
 use temp vars in sc16->item32 to make orcc happy
 UHD: added item32<->sc16 conversions in Orc
 UHD: Fixed convert_test (scalars backwards), fixed Orc conversions (endianness backwards).
 UHD: Orc conversion routine works
 UHD: Orc implementation added and CMake magic put in. Won't link.
 uhd: added scaling factor to conversion routines
 N210: stop sending 1 char at a time to the GPSDO
 N2XX: fix UART bug for GPSDO
 usrp1: moved fx2 control into its own directory
 uhd: allow benchmark to continue on untracked error codes
 e100: bug fix w/ SID parsing (endianess)
 uhd: added host to/from worknet conversion to byteswap header
 sph: added unit test for overflow handler
 uhd: made all bounded_buffer methods forced inline
 udp: replaced callbacks in zero copy interface by giving direct queue access
 e100: disable debug prints in io impl
 e100: dual dsp working, cleanup for io impl, needs more testing
 usrp: use dboard name A or single slot boards
 e100: dual dsp support (compiles, not tested)
 uhd: changed compat numbers to reflect dsp work in fpga
 Merge branch 'usrp_e100_aux_spi' into frontend_work
 usrp: added registers and mux calculation for fe work
 dsp: implement iqbal on tx
 usrp-e-timed : Fix stupid typo in tx rate calculation.
 usrp-e-loopback : Fix transfer rate calculation.
 u1e: new write interface, with 2x clock
 u1e: new 2 clock fifo, 18 bits by 1K
 uhd: added information in reference sources to sync docs
 B100/USRP1: fix bug where fpga size div by 64 resulted in never finishing load
 uhd: added more SAFE_CALL macros to hardware wrapper dtors
 N2XX: this method for defining R3/R4 actually works
 uhd: added safe call on a few dboard related deconstructors
 usrp-e100: fix message typo, its master_clock_rate
 usrp-e100: removed passthrough files, not needed w/ aux spi for clock chip
 usrp-e100: make reg_test32 persistent across resets, bump compat number
 usrp-e100: work on aux spi
 dsp: remove unused setting reg
 dsp: added tx_frontend, instantiated in u2/u2p
 dsp: small_hb_dec now 24 bits wide as well
 dsp: do everything at 24 bits wide
 u1e: update u1e to use new rx_frontend, and give it a 2nd rx dsp core
 u2/u2p: use all 24 bits from the rx_frontend
 dsp: pass 24 bit wide signals between frontend and dsp core. Overkill, but we have the bits already, so why throw them away?
 dsp: clip in hb_dec to prevent the rare overflow with certain frequencies at max amplitude
 dsp: add guard bit to top of cordic to allow clipping on output instead of wrapping
 dsp: fix off-by-one error in timing of hb_dec
 dsp: register hb output
 dsp: no need to keep all the low order bits from the accumulator
 dsp: increase gain of small_hb_dec because it used to scale down by factor of 2.  Clip if needed.
 dsp: use round_sd in small_hb_dec
 dsp: reorganized scaling and rounding, removed multipliers (will put back in a different location)
 dsp: testbenches for dsp blocks
 dsp: tx_dcoffset, not integrated yet
 dsp: add resets for simulation purposes
 dsp: do proper rounding at the end of dsp chain
 dsp: reworked muxes on rx
 dsp: more typos
 dsp: new files in dsp directory
 dsp: fix typos
 dsp: add2_and_clip_reg and round_sd now are now strobed to be compatible with strobed (non-full rate) data
 u2/u2p: use new rx_frontend in u2 and u2p
 dsp: use sigma delta rounding in rx_dcoffset and in dsp_core_rx
 dsp: reworked round_sd, it is much simpler now
 dsp: first cut at sigma-delta rounding
 dsp: pass the error through in the rounding function
 u2/u2p: misc connection and compilation fixes
 unused nets
 u2/u2p:  pull IQ balance and dcoffset out of dsp_core, put in frontend module
 redone DC offset with sigma-delta quantization
 fix copyright notice
 added copyrights
 lots of renaming and moving around of toplevel directories to reflect product names
 remove old ethernet tester, no longer needed or working
 removed bit-rotted test harness
 remove old iad stuff
 N210: added makefiles in for rev 4 versions (use LVDS)
 u2p: FPGA internal termination on the clock line from ADC
 u2p-lvds:  remove unused nets
 builds now
 first cut at using lvds for adc pins
 uhd: many tweaks for tx_waveforms including performance
 uhd: increment version minor for release
 usrp-e100: bring up the clock as the first thing
 usrp-e100: removed clockgen config stuff and docs
 usrp-e100: added check for wishbone readback and clock recovery
 usrp-e100: work on aux spi
 uhd: just send a mini EOB packet for tx timed samplesa
 wbx: mixers always enabled, ant switches always defined
 uhd: pseudocode tweaks for sync docs
 usrp2: catch exceptions thrown in locker loop (like the user unplugs device)
 Merge branch 'sync_docs'
 Merge branch 'gpsdo_ant_power_docs'
 uhd: tweaks to log and msg implementation
 Added GPSDO antenna specs
 updated sync doc for clarity & examples
 uhd: added app notes to docs on tuning
 usrp2: added app notes on multi channel RX
 uhd: notes on LO calibration, and tweaks
 uhd: work on sync docs
 tx_bursts: minor change
 tx_bursts: optional repeat
 u2p-rebase: go back to versions on next
 B100: added some packet splitter debug pins, removed debug from GPIO port, swapped I&Q in interleaver
 u1p: reset gpif
 u1p: connect frames per packet
 u1p: implement a signal to indicate a partially full usb lut, to flush it
 u1p: need to declare wires
 u1p: vita packet generator for testing purposes
 should split and reframe packets properly
 u1p: do padding outside of gpif_rd, in packet_splitter
 u1p: should fix underrun reporting
 u1p: modify dsp_framer36 to allow it to skip the udp prot eng headers. This way it works with u1e, u1p, as well as u2/u2p
 u1p: add new file to build
 u1p: modernize, fix warnings, debug pins
 u1p: debug pins
 u1p: unused signals
 u1p: better way of reframing the packets
 u1p:wr testbench
 u1p: use 18 bit fifos and use full size of a block ram in the tx path
 u1p: gpif-to-fx2 path should now handle arbitrary sized packets, up to 2KB
 u1p: pass tx status/error packets back through GPIF over the response channel (short packets)
 u1p: added loopback and timed capability just like u1e
 u1p: revert change to address bus width
 u1p: use icarus verilog to find warnings
 u1p: fix bus widths and other warnings
 u1p: added debug0, debug1 for GPIF debugging
 u1p: add clear ports to gpif, not hooked up yet
 u1p: remove extram from Makefile
 u1p: catch up with all the recent u1e changes
 modernize the make files, it now compiles.  not tested.
 select bus is 2 bits wide
 I2C slave address decoding for 16-bit dw instead of 32-bit
 Fixed I2C pin names.
 add padding into gpif response path
 pad out packets to a minimum length
 fixed length command packets
 give response packets the same format as tx packets
 successful test
 old and unused
 put gpio back in
 fifo to wb should be functionally complete, needs testing
 not used
 fix ctrl/resp path to pass all 16 bits of data instead of the bottom bit typos fixed, everything is connected now, should just have off-by-1 error lots of debug pins added
 send reset to the gpif
 constrain the gpif clock
 first steps to a command packet handler for u1+
 redone gpif interface to match nick's new spec
 use vita_tx_chain top level block
 hook up flow control pins
 added a loopback control port, will do full wishbone interface later
 progress on gpif interface
 gpif skeletons
 skeleton
 copied over from u1e, most pins hooked up.
 Use the 4th LED which is shared on the cfg_init_b pin
 compiles now
 copied over from other repo.  Beginnings of a skeleton fpga image for USRP1-Plus
 minor change to tx_bursts
 Merge branch 'master' into burst_test
 WBX: keep mixer on when TX idle, and switch TX ant sw to RX when idle to keep mixer from feeding out when idle. This allows USRPs to maintain a constant phase relationship between MIMO devices while operating.
 add gain to tx burst app
 added tx_bursts MIMO burst transmit test
 tx_waveforms: don't have to set time_spec for every pkt in the stream
 tx_timed_samples: fix so EOB isn't set on every pkt
 tx_waveform: no SOB for continuous streaming
 UHD: make tx_waveforms MIMO-capable
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv
 tvrx2: fix docs formatting typo
 Merge branch 'usrp_e100_clock_sync'
 Merge branch 'fpga_next' into uhd_master
 u1e: incremented compat # to 4 for vita length change
 usrp-e100: set_ignore_sync_fpga_plus_codec
 N210: how the heck did the PPS fix get dropped again
 uhd: picked some minor changes from super packet handler
 usrp2: turn on ups_per_sec to avoid timeout issues on low sample rates
 N210: changes for rev 4 support
 uhd: removed deprecated warning API, log+msg now in API
 Merge branch 'master' into release_work
 usrp2: moved register map into #defines, entries for new dsp frontend
 uhd: some build system tweaks
 USRP1: implement MBOARD_PROP_CLOCK_CONFIG, only accepts internal
 E100: fix aux codec ADC reads as per USRP1 in 6f70d1
 Merge branch 'master' into release_work
 Merge branch 'use_vita_length' into next
 usrp-e100: incremented compat # to 4 for vita length change
 Merge branch 'next' into use_vita_length
 u1e: incremented compat # to 4 for vita length change
 uhd: replace managed buffer shared pointer w/ intrusive pointer to reduce overhead
 usrp1: correct TX codec rate, it should also read 64e6 when probed
 usrp1: apply conditional disables/enables to rx and tx
 uhd: add gcc warning for sign comparison mismatch
 Merge branch 'tvrx2'
 uhd: init log file lock ptr to null
 uhd: work on logging and message facility initialization
 Added TVRX2 support
 usrp-e100: created device address arg for master clock rate, removed eeprom hack
 usrp2: device locking, use gpid so the process cant lock itself out
 Merge branch 'master' into next
 usrp-e100: use misc test32 register to store fpga hash
 Merge branch 'next' into use_vita_length
 u1e: get dsp_framer36 from u1p so it can skip the protocol header
 u1e: switch to vita_rx_chain module just like other toplevels
 usrp-e100: added soft sync for ad9522 clock control
 usrp_e100: work w/ ad9522 clock configuration
 Make log locking work with picky boost
 usrp1: overload read_eeprom to handle multi-byte reads
 usrp1: added more logging to usrp1 iface for debugging
 uhd: various tweaks to log and msg, replaced a few remaining stdio
 uhd: removed more iostream stuff from usrp* implementations
 usrp-e100: removed stdio prints from implementation
 uhd: replaced warning post with calls to UHD_MSG(warning)
 uhd: added interprocess file lock to the logger file
 uhd: replaced many conditional prints with UHD_LOG usage
 uhd: tweaks for logger file entries
 usrp: replaced conditional dboard debug prints w/ UHD_LOGV(often)
 uhd: moved the logger into the utils subdir
 uhd: added configurable default log level and thread safety
 uhd: work on the backend for a logging facility
 Merge branch 'master' into next
 usrp2: added REF_MIMO and PPS_MIMO for USRP2 clock config
 Merge branch 'rfx_rssi'
 Added docs for sbx
 Added RSSI sensor for RFX series (not rfx400)
 usrp1: toggle the FPGA reset and RX reset registers at init
 usrp2: added the concept of device locking to usrp2/nseries devices
 usrp2: combined peek and poke commands and added virtual firmware registers
 Merge branch 'master' into next
 usrp2: move card burner code out of get_options so get_options can be used by the gui without interference
 usrp2: allow devices to be discovered when usrp2_iface::make throws
 usrp2: added support for GPSDO configuration bits in EEPROM
 GPS parser fixes for get_time.
 USRP2/N210: firmware UART read no longer drops 20th char
 USRP2: enable GPS by default
 USRP2: Added GPS time support to the sensors interface. gps_time sensor returns epoch time as time_t. Untested.
 N210: implemented mboard sensors for ref lock and MIMO lock
 uhd: make benchmark example take a rate, and give special warning for usrp1
 usrp2: card burner protections when the user specifies a device not in the list
 usrp2: include dd.exe in windows installers
 dbsrx: implement SUBDEV_PROP_ANTENNA to give users a better error
 uhd: switch vita unpacker over to using proper vita length
 N210: Bootloader includes TXRX. No longer uses safe firmware as backup fw.
 N210 fw: Move spif_init into bootload_utils
 N210: Minor rearranging of bootloader impl in txrx
 N210: TXRX_UHD now has bootloader #ifdef'ed into it. Safe firmware now embedded into FPGA bootloader. Also did some cleanup of unused source files and consolidated bootloader stuff into bootloader_utils.
 N210: Moved u2p_init into main app and changed bootloader behavior to not load safe fw if safe mode button pressed
 N210: Make new bootloader ignore safe firmware when safe mode button is pushed.
 N210: bootram expanded to 16KB (8 BRAMs) and UDP bootloader added
 N210: UDP bootloader first stab (16K boot RAM)
 N210: UDP bootloader
 N210: Created UDP bootloader and modified RMI generation to 16K
 N210: Additional checks on both the host and firmware sides of the firmware updater.
 uhd: use int() casts on enum constants to help swig2 parse it as int
 Merge branch 'master' into next
 usrp-e100: shrink name field to git mcr into eeprom
 USRP1: added support for setting clock rate from EEPROM
 usrp-e100: add ability to set/get default master clock rate from EEPROM
 uhd: fixed typo in tune request/result inter_freq -> rf_freq
 usrp2: use default mtu as upper limit unless user specifies
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv
 uhd: removed constants.hpp.in, replaced w/ per source compile defines
 uhd: use UHD_PKG_DATA_PATH environment variable to override the one in constants
 Merge branch 'usrp2/discover_with_old_fw'
 Merge branch 'usrp2/discover_with_old_fw'
 Merge branch 'rfx_use_clock_divider'
 usrp2: improve the compatibility error messages
 uhd: use UHD_PKG_DATA_PATH environment variable to override the one in constants
 rfx: changes to pick from the dboard clock rates and use R=1
 uhd: added option for nsis installer to set PATH
 usrp_e100: added recv/send_frame_size xport args
 rfx: reverted change, now prefer R divider to clock divider
 usrp1: fix for tx under remainder conditions
 usrp1: the rx mux was reversed (fixed multi-channel rx)
 uhd: updated readme for WBX/SBX work
 Merge branch 'gdb_support'
 Merge branch 'sbx-adi'
 Enhance WBX IQ balance performance through LO drive
 wbx: split wbx into daughterboard and granddaughterboard implementation
 xcvr2450: initialize the max_power variable
 usrp: support for grand daughter board eeprom
 usrp: work on dboard_manager to register an ID for multiple xcvr combinations
 uhd: added scoped lock to device find and make (for thread safety)
 usrp1: rmmod usbtest because it interferes
 uhd: added more hw params to rx_ascii_art_dft
 Handle antenna switching and LEDs
 SBX enable LO LPF at 1.5GHz
 Makes 2nd SBX proto work
 Updating SBX to latest UHD
 Capture characterization changes
 Initial SBX-ADI driver
 uhd: move thread loop condition flag to before barrier (prevents race condition)
 N210: Additional checks on both the host and firmware sides of the firmware updater.
 uhd: use int() casts on enum constants to help swig2 parse it as int
 Updated documentation and improved XCVR RSSI calculation
 uhd: only set UHD_BUILD_INFO on successful return (also removed unused cruft)
 uhd: specify the UHD_PKG_DATA_PATH once (since images shipped w/ drivers)
 uhd: python messages more verbose + print boost configuration info
 Merge branch 'thread_prio_warning'
 Merge branch 'fix/usrp_e100_clock'
 usrp2: use the firmware's discovered compat number
 usrp2: add check for holler protocol, we can support backwards
 uhd: attempt to cleanup language in thread prio warning
 usrp2: support fw protos with older compats for various parts
 usrp-e100: reset dboard clocks on rate change, and dont cache in dboard iface
 usrp1: fix path to firmware files for fpga top level
 Merge branch 'mingw_cygwin'
 uhd: always link winsock2 on windows, disable pthread SCHED_RR for cygwin
 Merge branch 'python3_work'
 usrp2: restore executable permission on python scripts
 usrp2_card_burner: decode byte strings into ascii for parsing
 usb: mark libusb callbacks with LIBUSB_CALL to ensure correct calling convention
 usrp2_card_burner: change the padding string to bytes
 usrp_n2xx_net_burner: working on python3 (string is not the same as bytes)
 usrp_n2xx_net_burner: remove thread from gui
 usrp2: ran 2to3 on python apps and make corrections for old imports to work
 uhd: tweaks for cygwin/mingw, always link winsock2, findusb1, __USE_W32_SOCKETS
 uhd: replace <prefix> with <install-path> in docs for clarity
 uhd: a few minor changes to get uhd building under mingw or cygwin
 uhd: set CPACK_PACKAGE_INSTALL_DIRECTORY on NSIS so we dont get an inconsistent version suffix
 usb: newer libusb1 does not need to link with setupapi.lib
 uhd: specify msvc for implementations known only to work on msvc
 images: create a tag file to associate the version number w/ images
 uhd: define LINUX in build system to simplify some checks
 uhd: setup INSTALLER_PKG_DATA_DIR for windows systems
 uhd: added images and readme installer component
 uhd: increment patch number for next release
 Merge branch 'use_boost_barrier'
 Merge branch 'rfx400_tx'
 Merge branch 'images_install'
 Merge branch 'fix/usrp1_spi_read'
 uhd: disable visibility=hidden on non-dll platforms (cygwin)
 uhd: install dlls into runtime path, updated docs
 uhd: implemented boost barriers on all code that creates threads
 Correct RFX400 div2 logic, makes RFX400 TX work
 uhd: added UHD_IMAGES_DIR option to include images in the package
 usrp1: fixed codec ctrl aux adc read (didnt start conversions) + cleaned-up logic
 usrp1: reverted spi transaction changes to the usrp1 firmware (broken and not needed)
 usrp1: switch usrp1 iface to use spi read (transact never worked)
 usrp1: ignore claimed interfaces, avoids the problem of discovery when one device is claimed
 uhd: remove build information in the version string (just major.minor.patch)
 usrp-e100: set the ticks-per-second every time we change clock rate
 usb: tweaks to the build guide (libusb + windows)
 usb: changes to allow for static linking of libusb on windows
 uhd: revert VERSION setting for libuhd, macosx does not like patch level
 uhd: set LIB_SUFFIX automatically (all 64-bit redhats)
 uhd: expand UHD_RELEASE_MODE setup to all debian and redhats
 uhd: various packing fixes (lib suffix, and library components)
 Merge branch 'master' into next
 uhd: swapped UHD_PACKAGE_MODE with UHD_RELEASE_MODE (boolean)
 uhd: work on versioning technique for the releases
 Merge branch 'usrp_n2xx_net_burner_gui'
 Merge branch 'mac_packaging'
 Merge branch 'fix/usrp_n2xx_serial_bootloader'
 usrp2: added usrp_n2xx_net_burner_gui to build system installation
 usrp2: created net burner gui wrapper for N series
 usrp2: fixed serial bootloader for N series
 usrp2: fix typo, now building n200 fpga images
 uhd: work on mac osx packaging
 usrp2: modified firmware build rules to chain the dependencies (better for make -j4)
 uhd: added USRP-N200 build support to images Makefile
 Merge branch 'fpga_master' into n200_support
 u2p: N200 Makefile
 u2p: N200 Makefile
 uhd: update copyright headers with automated script
 uhd: try to be smart when setting up cpack when UHD_PACKAGE_MODE=AUTO
 uhd: added libusb1 to CPACK_RPM_PACKAGE_REQUIRES
 uhd: work on debian package requirements in cpack setup
 uhd: setup UHD_VERSION and CPACK_PACKAGE_FILE_NAME
 uhd: setup cpack components for component based installers
 usrp2: use the discovered mtu to clip the user specified mtu
 uhd: added comments/documentation to clock_config
 usb: fix callback cast in libusb zero copy under msvc
 Merge branch 'fpga_memory_reorg' into usrp2/new_reg_map
 reverted zpu stack pointer change, incremented fpga compat number
 usrp2: increment fpga and fw compat numbers
 usrp2: use new and common slave base map for usrp2/n210
 memory_reorg: new bootloader.rmi for n210
 u1e: use icarus verilog for lint
 clean up a bunch of warnings and incorrect bus widths
 u2p: fixed bootloader remapping
 u2/u2p: reorganized memory map
 u2/u2p: fixed instance name
 udp: alternate udp ports
 usrp2: cleanup checksum code and fix precompute checksum bug
 udp: look for checksum in the right place
 udp: fix precomputation of ip header checksum
 simple_gemac: fixed typo for tx_clk and tweaked ethtx_realign.v
 eth:  the danger of cut and paste
 moved the eth realignment stuff into the simple_gemac
 eth: add padding on incoming packets, remove on outgoing packets
 udp: speed up checksum calculation to meet timing
 u2/u2p: reworked settings bus addresses
 udp: short fifos on prot_eng in and out
 udp: new 32 bit wide udp state machine seems to work
 udp: this one removes half a line, used on transmit side
 udp: this one adds a half line, useful on receive side
 udp: checkpoint
 prot eng should work, ethtx is a skeleton
 usrp2: use the proper lwip macros to set the ip header
 usrp2: moved sregs in host code, simplfy reg struct a little
 usrp2: moved sregs in fw memory map, new framer register table
 u1e: removed old directory from make
 u1e: keep up with fixes made for u2/u2p, make it compile again
 usrp2: common memory map, define slave bases in different headers
 usrp2: fixed mtu discovery bug, was using the last failed value
 usrp_e1xx : Remove reset offset from register map.
 Merge branch 'windows_fix' into next
 usrp2: minor fix to use more ntohl
 usrp_e : Remove commented out FPGA reset code.
 usrp2: clip the mtu discovery if its within default MTU + a few
 uhd: make CMAKE_BUILD_TYPE a visible variable in the gui
 usrp2: also store expected_time in-between states
 uhd: created rx_multi_samples for multi-channel example
 uhd: cleanup/tweaks on timed samples examples
 uhd: offer alternative named for python binary (seen on ubuntu server)
 uhd: added continuous streaming and new options to tx_waveforms
 uhd: a lot of tweaking, new parameters, and sig handler for to/from file examples
 uhd: created tx_samples_from_file.cpp and added to rx_samples_to_file.cpp
 usrp2: bump up timeout on mtu discovery (seen to be a bit too small on windows vbox)
 uhd: only specify BOOST_SP_USE_QUICK_ALLOCATOR for the lib, apps can be built without it
 usrp-e100: added module compat num check, made fpga compat constant more obvious
 uhd-images: specify CPACK_PACKAGE_FILE_NAME so files names are platform independent
 usrp-e100: fpga fix removed missing directory from include
 Merge branch 'packet_router_2nd_dsp' into next
 uhd: revert changes to rx_timed_samples
 uhd: fix safe call header cuz it was moved on the next branch
 Merge branch 'master' into next
 uhd: fixed include in safe call, added quotes for SET_SOURCE_FILES_PROPERTIES
 usrp1: safe destruction for usrp1 device
 usrp1: also replaced control error prints w/ throws
 Merge branch 'master' into next
 usrp1: throw in control calls that fail rather than print the error
 usrp2: created safe call macro and handle usrp2 ~mboard throwing
 usrp2: created safe call macro and handle usrp2 ~mboard throwing
 usrp: moved wrapper utils into multi-usrp
 usrp2: save alignment indexes between state to fix the lost packet problem
 usrp2: save alignment indexes between state to fix the lost packet problem
 TVRX: no longer muxing in noise on Q channel
 usrp: fix for mux calculation when using real q
 usrp2: comments for buffer size setting
 fix: vita_rx_chain1 should use unit2 (since err0 uses unit1)
 packet_router: created packet dispatcher component to replace packet inspector in router
 uhd: thread safety notes and moved some docs to general
 first cut at 36:72 and 72:36 for extra wide fifos.  untested
 u2/u2p:  proper connections for dsp_framer
 u2/u2p: fix off-by-one error in dsp_framer
 usrp-e100: reinstate the VCO calibration timeout message
 usrp: dboard iface can inherit from i2c iface
 uhd: whoops, spi convenience functions have 32 bit data
 u2/u2p: enlarge dsp rx fifos to handle jumbo frames, enable in u2plus as well
 u2/u2p: removed redundant shortfifos from udp path (they are in the size adapters now)
 u2/u2p: moved dsp framer into vita_rx_chain
 usrp-e100: disabling VCO cal check, its not right, and the warning alarms people
 Merge branch 'usb-cancel' into next
 Merge branch 'boost_fs_string' into next
 Merge branch 'master' into next
 Merge branch 'fpga_master' into next
 usrp_e : Check packet length received from FPGA in case of corruption.
 usrp_e : Add usrp e1xx gpio test program the usrp e100 utils directory.
 E100: fix test clock output enable
 USB zero copy impl: proper cleanup for canceled transfers -- wait for cancel before freeing
 usrp_e100: Move gpio test program to utils.
 usrp_e100: Delete old test scripts.
 uhd: replace file_string() with string() for deprecation reasons
 uhd: copied examples changes from next onto master branch
 uhd: added missing set_tx_antenna() in tx waveforms
 usrp2: tweak the mtu discovery logic
 usrp2: firmware can send jumbo dummy packets (only writes up to 2048)
 u2/u2p: rework ports again
 u2/u2p: reworked port names on packet_router
 u2/u2p: reworked dsp framer to work more like a fifo, and do vita length correction
 u2/u2p: allow cpu to receive or send packets longer than the buffer size. on reception, the rest is dropped.  On sending, the rest is a repeat of the buffer.
 make fifo36_to_ll8 properly handle partial end lines. I could swear I've fixed this before...
 usrp2: work on mtu discovery
 Merge branch 'gpmc_testing' into ethfifo_reorg
 remove references to old directory
 all: removed old unused fifos
 all: short fifos on front and back of fifo36_to_fifo19
 u2plus:  catch up with ethfifo changes which were on u2
 Merge branch 'master' into next
 u2/u2p: remove duplicated short fifo
 u2/u2p: shortfifos in fifo36_to_ll8, no more _n junk
 uhd: removed mb_eeprom from mboard iface (already exposed in property)
 make big tx fifo the one doing the clock crossing
 Merge branch 'mb_iface' into next
 u2/u2p: rxdsp/cpu/err muxing now prioritizes cpu and err over rxdsp
 u2/u2p: removed unneeded eth rx fifo
 Update USRP1 External Clocking docs for set_master_clock()
 Fixes inverted logic in sensors bool interface
 u2/u2p: switch over to 36 bit wide ethernet wrapper
 Merge branch 'ethfifo_reorg' of ettus.sourcerepo.com:ettus/fpgapriv into ethfifo_reorg
 ethfifo_reorg: switch buffer int2 lastline to work as a length parameter
 u2/u2p: packet realignment moved into the simple_gemac_wrapper19
 Merge branch 'master' into next
 u2/u2p: get rid of redeclaration
 u2/u2p: ll8 now all active high, removed extra shortfifo from eth wrapper
 u2/u2p: short fifos put on both sides of ll8_to_fifo19
 Generalized mboard_iface and added a SPI convenience class a la I2C
 usrp1: check for fw images only for uninitialized devices
 usrp2: only include fw_common when needed, remove virtual send/recv, not exposed
 Generalized the mboard_iface into mboard_iface.hpp and made each of the USRP devices inherit from it.
 udp: return the managed recv buffer to the buffer queue on timeout
 usrp2: minor optimization, only disable interruption when we need to wait()
 Hopefully the last typo in external clock mod for usrp1
 Fix typo in usrp1 external clock modification docs
 usrp-e100: disable the global reset for now
 uhd: make ic reg maps depend on common.py
 udp: return the managed recv buffer to the buffer queue on timeout
 usrp2: minor optimization, only disable interruption when we need to wait()
 Hopefully the last typo in external clock mod for usrp1
 Fix typo in usrp1 external clock modification docs
 timed packet generator : Temporarily use a checksum rather than a crc to validate packet integrity.
 correct port names
 usrp-e100: disable the global reset for now
 uhd: make ic reg maps depend on common.py
 fifo36_mux now has shortfifos on the input ports as well as output
 uhd: sensors header fix to make swig happy
 uhd: sensors header fix to make swig happy
 timed tester : Bring out src/dst flags for rx chain for testing.
 usrp_e : Prevent people from typing in large numbers that crash the test.
 usrp-e100: conditional code for when fpga downloader is externally included
 uhd: exception code gen simplification
 uhd: switch algorithm namespace to uhd
 uhd: replaced instanced of std::exception with the uhd exceptions
 uhd: renamed the assert header to assert has
 uhd: moved exception to top level include
 uhd: added a bunch of custom exceptions, not used yet
 Merge branch 'usrp2_dual_dsp' into next
 Merge branch 'packet_router_2nd_dsp' into usrp2_dual_dsp
 usrp2: move buffer resize code and add rule for bsd/mac
 usrp2: fixed flow control monitors indexing, fixed multi-usrp send bug
 usrp2: div->ldiv fix for overloaded types w/ msvc
 Merge branch 'usrp2_fw_clock_cleanup' into usrp2_dual_dsp
 uhd: switch dboard id prop to whole eeprom struct
 Merge branch 'sensors' into dboard_serial
 uhd: simplify dboard eeprom code by passing iface into load/store
 uhd: added 9 byte serial to dboard eeprom class
 usrp2: cleanup clocks firmware stuff, removed unused code
 uhd: replace header checks in cmake files with more robust compile checks for features
 usrp2: 2nd dsp working, tweaks regs map and other bugs
 uhd: moved indexed device addr routines into api
 u2/u2p: shrunk ETH TX FIFO, further u2/u2p harmonization
 usrp-e-utils : Delete more old files.
 usrp-e-utils : Remove old files.
 usrp-e-utils : Move loopback and timed test programs into utils directory for e100.
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 usrp-e-crc-rw : Work with GU fpga image. Cleaned up warnings.
 usrp-e-mm-loopback : Works with GU fpga image. Cleaned up warnings.
 usrp2: code working again in a completed form but did not test dual dsp
 udp: try non-blocking recv first for performance
 udp: update docs for transport, create common header for wait implementation
 Merge branch 'master' into next
 usrp-n2xx: checkout burner into next branch
 usrp-n2xx: reimplemented nicks image readback ontop of changes
 usrp-n2xx: reimplemented the net burner to use one socket per session
 usrp2: lot of work on dual dsp, grep for TODOs before continuing
 usrp2: moved all dsp related code into dsp_impl and split for multiple dsps
 usrp2: added indexed regs for rx dsp and ctrl
 uhd: got all compiling w/ changes, changes to channel calculation in multi usrp
 u2/u2p: inserted short fifo into the packet inspector path to help routing and timing
 usrp: support for multiple dsps in props and implemented in usrp1
 Merge branch 'sensors' into usrp2_dual_dsp
 uhd: work on multiple dsp in host wrapper
 u1e: hook up tester controls
 usrp2: prefix the dsp and ctrl registers with 0 in preparation for 2nd dsp
 increase compat number for double dsp change
 usrp2: added 2nd dsp support to firmware for 2 and N series
 u2/u2p: reduce unneeded RX DSP buffering
 u2p: 2nd DSP now in u2p as well
 uspr2: memory map tweak for dual dsp
 added port_sel param to dsp framer
 u2/u2p: added 2nd DSP unit
 u2/u2p: renamed and split some rx signals to prepare for 2nd DSP
 uhd: use source properties to set flags and defs not globally, but only for the source
 u2/u2p: proper hookup of vita_rx_chain
 move declarations to before use
 hook up under/overruns for debug purposes
 uhd: boost linking + msvc configurable, defaults to static
 Merge branch 'master' into next
 uhd: tweaks for windows msvc compiler warnings and errors
 uhd: optional variable to specify a non-default name for uhd library
 uhd: added arch flags for sse2 (was not implicit on x32)
 e100: integrate loopback and timed testing into main image
 Fix endianess for packet length and sequence number for e100 timed image.
 put these files in the right place.  newfifo is long gone.
 uhd: work on identification docs, moved duplicated notes in general
 clean up rx dsp and some other nets in prep for dual dsp
 Make RFX400 work in UHD
 Add back line that mysteriously disappeared. I blame the cat.
 usrp-e-timed test program. Add checks for packet length and sequence number.
 register map changes to fit in the 2nd rx dsp
 packet_router: added support for two dsps into router
 uhd: added to_<type> calls to sensors to make it easy
 usrp: implement sensors in all the dboards, deprecated read rssi and get lo locked
 usrp: added get sensors api to multi usrp for rx/tx subdevs and mboard
 usrp: added sensors props to mboard and subdev (removed stupid = 'char' thing)
 usrp2: speed up for alignment logic, replace std::list with some bit shifts
 uhd: third iteration of the reference vector
 usrp: added mboard param to get time now and last pps
 uhd: tweak for io type size table code
 uhd: misc speedups w/ look up tables
 uhd: set BOOST_SP_USE_QUICK_ALLOCATOR for managed buffer overhead, hope this doesnt cause trouble later
 uhd: reference vector fix revealed when building w/ debug
 udp: udp_zero_copy_asio comments and tweaks
 uhd: simplified converter calls in vrt pkt handler with ref vector changes
 uhd: use ref vector class for the conversion routines I/O
 uhd: tweaks to bounded buffer
 uhd: increment api compat number for changes in next branch
 Merge branch 'usrp_e100_devel' into next
 udp: comments and minor code tweaks for udp zero copy impl
 Merge branch 'master' into next
 uhd: tweaks to vrt pkt handler and usrp2 fc monitor
 uhd: tweaks for windows warnings and errors
 uhd: replaced std::vector<type> for buffer arguments in send/recv
 udp: removed asio implementation, created custom managed buffer classes to re-use
 usrp2: initialize _ctrl_seq_num to remove many valgrind warnings
 uhd: potential fix for macos asio recv issue (just disable it)
 usrp2: fix for lingering packet problem
 Fix typo in usage message.
 Merge branch 'fpga_next' into usrp_e100_devel
 usrp-e100: notes on unbricking/clock reovery
 uhd: replace asio buffer in make safe w/ memory and length, makes things simpler
 usrp2: pre-bind the get buffers methods on init so its not in fast-path
 usrp2: fix for icmp echo reply checksum (data was not included in checksum)
 uhd: removed instances of shared_from_this() in transports
 uhd: change bounded_buffer implementation and code using it
 uhd: work to remove dynamic allocations of std::vector in vrt_packet_handler calls
 udp: simplfy zero copy asio overhead with less shared_from_this, and timed waits when not needed
 uhd: various performance tweaks
 Merge branch 'latency_test'
 Merge branch 'convert_fc64'
 uhd: cleanup for latency test
 Merge branch 'multi_usrp_only' into latency_test
 uhd: added io type and conversion for complex64 (its not really useful)
 successful latency test.  About 500 us on my laptop.
 getting usable data
 N210: initialize codec gains so it doesn't barf if you call get_rx_gain before set_rx_gain.
 sort of working latency tester
 Merge branch 'multi_usrp_only' into convert_fc64
 usrp-e100: use pre-bound get send/recv buffers in io impl
 usrp-e100: replaced safe managed buffers in usrp-e100 mmap with custom ones
 uhd: fix typo in ref vector docs
 uhd: reusable buffers for libusb zero copy implementation
 usrp-e-crc-rw: Fix data rate calculation.
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 usrp-e100: Check in wip for timed image test program.
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 Modified net burner to allow reading of images from N2XX.
 usrp1: removed binds and sptr allocs in usrp1 io impl
 uhd: added some minor images docs for E and N series
 separate clear for tx and rx, and add a global reset from the host
 usrp1: added to emulated features docs Transmitting a specific number of samples
 usrp1: fix for tx disable on EOB
 uhd: replaced sdev and single usrp in examples with usrp and multi usrp
 usrp: added set and get master clock rates to usrp API
 uhd: simplify the mach time usage based on example from web
 uhd: use time spec get_system_time to simplify soft time control
 uhd: implemented high-res get time in time_spec_t
 Modified the net burner util to perform size and content checks on images.
 uhd: remove single usrp (leave a typedef), multi-usrp is a superset now
 usrp2: dont set the time for slave devices, they always take from mimo cable
 usrp-e100: revert compat number until its ready
 usrp-e100: tweak for clock control register calculation, works better
 usrp-e100: reverted clockgen config + tweaks, its working
 usrp-e100: added passthrough to images makefile, tweaks to usrp-e-utility
 usrp-e100: added missing newfifo files to list, added missing signals for timed
 Merge branch 'udp_xport_work'
 udp_zero_copy_asio: removed the #ifdefed num frames and min buff size stuff
 uhd: if_addrs check that iter->ifa_addr is NULL before continuing
 uhd: added missing API export for special props
 Merge branch 'iface_swig'
 Merge branch 'macos'
 uhd: use boost typedef for scoped_lock
 usrp: rename special_props to have a unique prefix, and typedef it in dboard iface
 uhd: fixed maxosx bug, was resizing the transport buffer
 usrp-e100: added 32bit test read/write register, fixes to get building
 N210: longer GPS timeout, removed try/catch in safe_recv loop (since it can't throw any more)
 Added first pass a swigging dboard iface
 reorganized u1e register space to make room for 64 settingregs
 usrp2: added to the doc notes on communication problems
 usrp1: changes that make benchmark rx work
 uhd: added docs on usrp2/n, removed empty n2xx doc page, misc
 usrp-e100: changes for global reset and non-zero sids on rx
 usrp-e100: combined clkconfig and fpga downloader into usrp-e-utility, simplified code
 usrp-e100: work on clock control
 usrp-e100: tweaks to clock control and setting from api
 usrp-e100: added app notes for fpga loading and reclocking
 Fixes for timed fpga interface test program. Still need to solve the CRC calculation failures.
 Merge branch 'usrp_e100_devel' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e100_devel
 Merge branch 'multi_usrp_only' into usrp_e100_devel
 usrp-e100: remove unused clock control constants, enb test clock
 usrp-e100: work on clock control
 usrp-e100: clock control use boost math gcd for divider calculation
 usrp-e100: working clock control 61.44, 52mhz
 usrp-e100: so far internal vco code works w/ 64mhz
 Merge branch 'usrp_e100_devel' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e100_devel
 Local changes for wishbone tests, PLease review carefully.
 Start converting the timed test program to work with mmap interface.
 Update header from in e100 test programs from main uhd.
 Mark received block as accepted by user space.
 Update timed crc test program to use mmap's interface. Needs testing.
 Merge branch 'clkgen_config' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e100_devel
 E100: rewrote clkgen-config so it's less incredibly opaque
 usrp-e100: created component for stand-alone usrp-e utils and added wb test util
 usrp-e100: added misc test register 32 bits
 usrp-e100: changes to regs map for re-mapping of address space
 udp: revert depadding hack for recv_frame_size
 Merge branch 'fpga_fix'
 believed to fix fifo swizzling with partially empty lines
 usb: restored disable_interruption on get_lut_with_wait (gets called externally)
 udp: shrink default recv_frame_size by 4 bytes until FPGA handles 2 byte pad correctly (1516)
 TVRX: forgot to disable debug messages
 TVRX: fixed spectrum inversion on USRP1, hopefully for the last $%^&* time.
 uhd: added error code print to benchmark
 uhd: use doubles as the theta when calculating the sine table
 uhd: change constants to doubles for BOOST_CHECK_CLOSE
 uhd: correct msvc terminal commands for building
 Merge branch 'next'
 uhd: fix CPACK_DEBIAN_PACKAGE_ARCHITECTURE
 uhd: removed deleted fpga files removed from fpga repo
 uhd: limit the git log to 1 entry when extracting version info
 Merge branch 'fpga_next' into uhd_with_fpga_next
 master: fixed N210 analog ADC gain to "on" to fix RFX noise issue
 usrp1: set eob on md when shutting off receiver, because we can
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 next: generalized the GPS interface to any USRP device. just give it a function to write/read strings to UART. not sure if i'm happy with the interface; maybe inheriting is cleaner. this works though. gps interface for usrp2 is disabled right now in mboard_impl.
 uhd: added set debian arch when building images, may remove warnings on dpkg install
 Merge branch 'usrp1' into next
 usrp1: work on usrp1 hardware compat with the api
 next: fngets() fixed for GPS driver. polling/timeout moved to host side. small changes to GPS output text.
 examples: init metadata with time before loop begins
 usb: use thread interruption in usb zero copy on deconstruction
 usrp-e100: added readback mux 32 as slave 7 for time readback
 usrp-e100: added readbacks for time now and time pps
 uhd: drop a digit from the api compat number (1000 is plenty)
 uhd: renamed test directory to tests to be consitent
 uhd: tweaks that make macos happy
 uhd: make static block safe with a try,catch,print
 uhd: more useful prints for component macro
 uhd: tweak component macro for build system
 usrp1: added docs on missing and emulated features
 usrp2: update copyright dates on firmware code
 uhd: update copyright dates on host code
 uhd: moved fix-co-years and added path option
 usrp2: use the mac address to determine serial# for older usrp
 usrp2: different clock delays for usrp2 and usrp-n210
 usrp2: calibrated mimo clock delay for n210 (same as usrp2 classic)
 usrp1: implement soft time ctrl for send at, recv at
 usrp2: clock_sync_delay_cycles adjustment for the image size
 uhd: fix size param error when getting a convert routine in pkt handler
 uhd: changed convert routines to return the function pointer
 uhd: use double for seconds in example apps so we can do partial seconds
 uhd: removed unused/forgotten file
 uhd: replace all the instances of float not pertaining to io types with double, simplifies life
 uhd: add msvc stdint.h so we can use stdints typedefs normally like, fix in fw_common.h
 uhd: use internal() to default clock configs, dont use PPS_INT, theres no such thing
 uhd: added findgit to the repo in case older cmakes dont have it
 xbar and valve: fix switching delayed by active signal
 usrp2: restart read before mode switch, added comments
 usrp-n210: added power-on-reset controller, reset all wb perifs
 usrp: removed old includes that didnt need to be there
 usrp-n210: uploaded most recent bootloader rmi
 usrp2: fw print addrs fast path fix
 usrp2: replaced pad argument to gen bins macro with a setting variable, simplifies code
 usrp2: removed cruft and bitrot apps from fw
 usrp2: firmware pad bins to zero to deal with optimizing out the static vars that init to zero
 usrp2: eth addrs, wrong type, should be bool
 usrp-n210: use cpu rst on the wb+icap, uploaded latest bootloader rmi
 usrp-n210: firmware changes related to init and bootloader
 usrp-n2xx: remapped the front panel LEDs for firmware
 usrp: change wording on pps error message in multi usrp
 usrp2: tweaking firmware
 packet_router: tweak mode SR (its only 1 bit)
 uhd: create sensor value from string
 uhd: integrated boost split or tokenizer into source files, remove string split from algorithms header
 uhd: fix copyright years on new files
 uhd: split types into multiple files as it was getting unwieldy
 uhd: created sensors value, made lib/types and moved files
 uhd: added python program to fix copyright years from git logs
 uhd: update copyright dates
 uhd: added convenience factory functions for clock config (external/internal)
 usrp: fix multi_usrp address documentation
 uhd: added get and set methods to dictionary to make swigging it easier
 uhd: increment api compat number
 uhd: replaced templated ranges with one range thing using doubles only to avoid trouble with compiler portability
 uhd: renamed and tweaked some of the convert files
 uhd: removed convert types, replaced by convert
 Merge branch 'convert' into next
 uhd: switched the unit test to the new convert API, implemented in vrt pkt handler
 uhd: removed REQUIRED from find package calls to libusb and docutils
 uhd: added new convert directory with type conversion registry (needs testing)
 Merge branch 'buffer_pool' into next
 Merge branch 'cordic_policy' into next
 Merge branch 'cordic_policy' into next
 uhd: some tweaks to buffer pool
 uhd: created buffer pool to allocate aligned memory, and implemented in transports
 uhd: try to neaten up the attribute macros in config.hpp
 fu_ranges: dict's keys()/vals() now return non-const to make BOOST_FOREACH happy on Clang
 uhd: potential fix for explicit template + llvm
 uhd: create a find packages module for docutils, cleaned up some of the other find package stuff
 usrp2: fixed mdelay (used ticks rb register), cool led blink in u2init, removed unused files
 usrp-n2xx: use init non zero constant (see fixme), also simplified spi flash read size functions
 usrp-n210: checked in updated bootloader (from next with fixes)
 USRP1: REALLY fix the full-duplex case.
 xcvr2450: update comment for full duplex case
 usrp: xcvr dboards should also register their default subdev name as 0
 usrp2: zpu compile flags use -phi, -abel is obsolete
 USRP1: Fix ATR for TX/full duplex
 uhd: removed SOB always from tx examples,
 usrp2: what the hell, why does that make a difference
 usrp2: implemented get time last pps
 ZPU: bootloader only checks first 4 bytes of program flash image for validity
 hook up sampled pps in u2plus, remove unused priority encoder,  minor cleanups
 usrp2: remove temp power up state hack, it seems to be fixed
 processor can read back vita_time at last pps
 udp: tweak warning on socket resize
 run should actually turn on now any time in the IBS_RUN state
 uhd: use -B option on python to prevent generation of bytecode files
 gyrations to get it to meet timing
 Merge branch 'fpga_next' into next
 usrp2: removed unused changed signal for mode selection
 usrp2: removed extra print ip functions
 usrp2: remove ram macros from memory map, conditionally load fw update
 packet_router: change router control for buffer_int2
 packet_router: replace buffers interfaced in packet router with buffer_int2
 TVRX: fix bug in rf_gain_to_voltage -- we're hi-side mixing, not lo-side
 now uses 2 rams, one for read, one for write
 reformatting
 first cut at new buffer interface for CPU.  Like old buffer_int plus a single buffer.
 unused line
 should keep cordic spinning and the rest of the tx going through underruns.  There is a timeout so it won't go forever.
 Merge branch 'master' into next
 image: make the build rules depend on deps so they ensure the directory exists
 cmake: fix typo in setup python interp
 Merge branch 'uhd_master' into uhd_next
 Merge branch 'fpga_next' into uhd_next
 packet_router: code tweaks, renamed instances of buffer pool, removed unused ctrl reg
 packet_router: use the mode register to reset hs control and cpu sms
 cmake: disable the in-tree build prevention
 cmake: moved module files into modules directory, set modules path
 cmake: changes to finding python interp, some other tweaks
 usrp-e100: added check for linux when configuring
 usrp2: print mimo master/slave mode on init
 Merge branch 'fpga_next' into uhd_next
 fw: edit readme, removed old files
 zpu: renamed the directory for the usrp2 fw to zpu to reflect the cpu type
 usrp2: got fw working on usrp2+nseries (crosses fingers)
 Merge branch 'udp_ports' into next
 Merge branch 'master' into next
 Merge branch 'udp_ports' into next
 uhd: fixed component registry function
 udp_ports: enable async recv in xport, set performance params in top level, things working
 usrp-n2xx: corrected memory map weirdness, disable verbose in net common
 udp_ports: added message handling to alignment code
 usrp-n210: add missing wires, incr compat, use boot ram as stack space
 udp_ports: fixed address comparison B+14 is comparison
 don't overwrite checksum values
 uhd: use the include subdir macro to simplify the lib subdirs cmakelists
 uhd: implemented top-level component registry
 dbsrx: increase setup time for dbsrx band select
 usrp-n210: removed fw warnings, bootloader does full size 16k load
 usrp-n210: delay reset for boot loader stack pointer to init, copied bl.rmi without debug
 usrp-n210: almost working w/ packet router + zpu
 udp_ports: host code tweaks, seems to be closer to working
 udp_ports: set the source and destination ports
 udp_ports: set the source port and destination port from table
 N210: Host memory map changes for ZPU
 N210: ZPU firmware bootloader changes
 usrp1: negate the rx cordic reg word because things were inverted and nobody noticed
 usrp2: removed alignment buffer and implemented event based recv + alignment, TODO test me
 usrp2: brought err0 transports into device and mboard constructors
 usrp2: pulled some changes from the next branch to make merging easier
 usrp2: added support in fw for setting dsp0 and err0 ports with protocol framer changes
 generate port number headers in the dsp error units
 now supports up to 4 different udp ports
 ZPU: bootloader for 210 mods
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 usrp-n2xx: moved perifs out of 0-16k to +20k to not intersect with a virtual cpu address space
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 usrp-n210: integrate zpu and packet router, builds but untested
 usrp2: removed mb linker stuff, added bootloader + rmi gen
 uhd: use the option function for the components
 Merge branch 'zpu' of ettus.sourcerepo.com:ettus/uhdpriv into next
 ZPU: bootloader changes for new ZPU
 Merge branch 'dsp_tune'
 usrp2: updated images Makefile for the zpu gcc compiler
 usrp2: removed auto* stuff (except usrp2p) and added to readme and authors
 usrp2: replaced hal interrupt with NOPS, removes warnings
 Merge branch 'zpu' into next
 Merge branch 'packet_router' into next
 Merge branch 'zpu' into next
 zpu: working, modified top level sizes, disable interrupt
 zpu: working txrx, modified blink lights to look better, no interrupt (poll handler)
 usrp2: added mimo_mode address arg and documented it
 usrp2: update images makefile for moved fpga top level code
 Merge branch 'fpga_ise12'
 usrp2: added clocking notes to mimo cable docs
 packet_router: reject icmp dest unreachable when port does not match
 packet_router: all non ip/udp should also go to both
 zpu: added blink lights to usrp2
 ZPU: -ffunction-sections
 usrp-n: created cmake/zpu build for firmware
 Merge branch 'packet_router' into zpu
 zpu: moved top level file in hopes for easy merge
 packet_router: harmless logic tweaks
 packet_router: reverted enable change to dsp framer, it was already correct
 packet_router: added control register to set the udp control port
 added docs for mimo cable usage
 usrp2: set time over serdes when slave, added constants to top of cpp file
 usrp2: configured clock delay over mimo cable
 packet_router: added set_mimo_clock_delay to clock_ctrl.
 usrp-n: configure clocking over the serdes cable
 packet_router: incremented fpga and fw compat numbers
 packet_router: added cpu input and output control registers, modified control code
 usrp-n: removed serdes control, its not needed, fw must set this up
 packet_router: added sregs for ip addr and ports
 packet_router: dont register mac, also reorganized some tidbits
 packet_router: implemented code to program the addresses into the router
 packet_router: split control transaction for commit into two lines
 packet_router: added helper functions to packet router, added clear, fixed handshake, garp at start
 packet_router: take that back and only garp when link is up (FIXME initial state before garp call)
 packet_router: enable the serdes and always send GARP
 packet_router: filter on dest ip addr and bcast mac addr
 usrp2: implement routing mode calls, and prefix pkt ctrl calls
 usrp2: remove non-relevant buffer pool things from memory map
 usrp2: replaced spi and i2c async stuff with sync (since were out of the fast-path)
 usrp2: removed buffer pool macros and constants from memory map
 usrp2: implemented packet ctrl to read and write slow path packets from the new interface
 usrp2: pretty much gutted the buffer pool stuff with other misc changes, not in working shape
 usrp2: provided way to disable flow control updates by setting to zero
 packet_router: raise enable for bram reads the cycle before as well
 packet_router: added fifo before cpu_out, tweaked inspection logic
 packet_router: gave the inspector a 4th output which is CPU only
 Merge branch 'ise12' into packet_router
 packet_router: renamed top level files in an attempt to merge cleanly
 time sync on usrp2 as well, added debug pins to time sync.
 slave side can now sync
 Only do udp now, renamed old ports to exp_time_*
 udp is now the default
 remove old raw ethernet version
 reimplemented mimo time transfer to handle 64 bits.  Still needs to sync on the received side.
 renamed exp_pps_* to be exp_time_*, which is the mimo synchronization signal
 Merge branch 'fpga_ise12'
 usrp2: polished the multi-device addressing scheme and updated docs
 Merge branch 'time_compare_speedup' into ise12
 usrp-n: simplify ctrl response error so it cant throw, also increase timeout while we are at it
 zpu: set all the address widths to 16, grumble
 zpu: moved stack pointer and made connection for status
 u2plus: clock lock pin capitalization fail
 zpu: brought status signal out to top level
 zpu: shrank the ram size and address bus to 16k
 zpu: added a zpu + wishbone opencore and integrated into top level
 should safely delay the late signal which was causing timing problems
 uhd: only install usrp2 apps when the component is enabled
 uhd: only enable C when we are building the USRP-E100 utilty apps
 usrp-n: set ad9777 mod mode to transmit above nyquist of DSP
 usrp: move dsp tuning wrap-around into the dsp utils (allows the dsp handler to get the full value)
 uhd: added template macro to ddl import as well (macos)
 uhd: tweaking the explicit instantiation stuff, just aesthetic
 uhd: tweak configuring usb messages
 uhd: set the HAVE_USB_SUPPORT FALSE when not found (fixes error)
 uhd: added macro to enable/disable components
 Merge branch 'dboard_iface_gpio'
 usrp-n: some rx path fixes
 usrp2: added docs page for usrp2 that points to nxxx page
 uhd: added read-back calls to dboard iface gpio settings, and optional mask
 packet_router: added status readback for mode, incremented compat number
 packet_router: split the control register into misc, cpu hs out, cpu hs inp
 usrp2: cover both rev3 cases for usrp2 revision numbers
 packet_router: modification for sequence number and vrt header offset
 usrp: replace struct member sizeof with this macro so it compiles on mac
 packet_router: it makes more sense to connect the control flags this way now
 packet_router: program the dsp udp port and ip addr through setting registers
 reduce warnings, modernize testbench
 packet_router: mux the crossbar input after the protocol framer
 allow any unicast packet through.
 packet_router: moved udp tx proto machine into packet router, replaced udp_wrapper in top level with some fifo conversion stuff
 packet_router: moved dsp framer into a module, added clr to splitter and renamed
 packet_router: implemented crossbar and valve module, moved sreg into router module
 packet valve.  will drop incoming data if shut off.
 abstract out the crossbar functionality
 packet_router: transplanted the async error interface, its now sent into the packet router to be muxed to com out
 packet_router: added a way to program in the ip and mac addrs, and added inspector check
 packet_router: fixed sof bug for cpu (== 1), some logic tweaks, added debug
 packet_router: registered control flags, added clear to all state machines
 packet_router: added splitter and mux for slow path stuff (also fixed typo in crossbar input)
 packet_router: renamed inspector output signals and connected (for now) to cpu, dsp, crs
 packet_router: use BRAM enables to perform pipelined reads
 packet_router: use control register bit for master mode flag
 packet_router: removed unused status words from readback mux
 packet_router: swapped comm mux for a crossbar, serdes crossbar out now muxed into the comm output
 packet_router: used registered valid signal for BRAM read cycle delay
 packet_router: created dsp framer for rx path
 packet_router: added lines for com crossbar and com output mux
 packet_router: fixed swapped connection typo, dsp tx routing works
 packet_router: collapsed inspector states, fixed terminology for cpu inp vs out
 packet_router: some tweaks, dsp output routing seems to work but has wrong offset
 packet_router: added all input/output signals to module, created the comm muxes (in and out)
 packet_router: created com signals (device IO lines that may be ethernet or serdes)
 packet_router: created inspector and added dsp output (however inspection logic does not enable it yet)
 packet_router: connected and created CPU read from interface (slow path in place)
 packet_router: created nearly empty router with eth in attached to mapped memory
 Merge branch 'refclock_docs'
 Merge branch 'fpga_flow_control' into next
 packets are shorter now, so we need to tell the udp state machine that...
 Updated refclock docs for USRP1, USRP2 and N2XX
 E100: internal ref fix switch statement
 usrp-e100: updated for building with next
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into next
 uhd: added new hardware to readme
 usrp-n2xx: modified fw build name in makefile
 usrp-n210: added fpga build entry to images makefile
 Merge branch 'fpga_next' into next
 Merge branch 'usrp_e100' into next
 Merge branch 'fpga_ise12' into fpga_next
 fpga: performed a forceful checkout of fpga to overwrite with current fpga code
 usrp_nxxx: software workarounds for weird power up state
 Merge branch 'flow_ctrl' into next
 usrp: removed deprecated interfaces simple and mimo
 uhd: new versioning scheme with API compat number
 uhd: added printable to string methods to ranges
 E100: clock sync implemented.
 N200 comes up with default IP and MAC when booted in safe mode (button pushed).
 usrp2: ms didnt seem to like unlocking an unlocked mutex
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv
 no need for second sequence number anymore.  Each dsp tx chain generates its own flow control packets now.
 shouldn't be executable
 modernize the testbench
 usrp: removed deprecated interfaces simple and mimo
 uhd: new versioning scheme with API compat number
 get rid of extraneous U messages when we actually had an ACK
 fix problem with consecutive timed packets on tx
 Merge branches 'master' and 'master' of ettus.sourcerepo.com:ettus/uhdpriv
 Firmware mem map changes for flow ctrl somehow didn't get propagated.
 Updated fw rev number in N2XX burner.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into flow_ctrl
 usrp e100 : Add sleep after loading module.
 usrp e100 : Add i2c header back.
 Merge branch 'mac_fixes' into ranges_fix
 uhd: tweaking the export template instance macro
 uhd: added to printable string methods for ranges
 uhd: git diff
 udp: added polling alternative to select for mac
 uhd: ranges symbol fix, try extern macro
 uhd: added printable to string methods to ranges
 usrp: use a spawn thread to ensure that a pirate is spawned before continuing (fixes lockup issue)
 Merge branch 'public_master'
 usrp2: fix ip addr eeprom offset in motherboard eeprom parser
 simplify time comparison to speed up logic and meet fpga timing
 we're still on version 12.1
 while this was legal C++, SWIG hates it
 usrp-n: renamed docs and burner app, added burner app documentation
 Add flow control and other small vrt fixes to u2p, minor cleanups
 uhd: removed windows warnings, added string formatting in usrp-n
 uhd: fixed ranges stuff, export symbols and use doubles not iterators...
 reset properly
 compiles with new file locations
 handle zero-length packets properly
 clear out the vita tx chain and the tx fifo.  need to check the fifo reset to make sure it is in the correct clock domain.
 added ability to truly clear out the entire rx chain.  also removed old style fifo in rx.
 gray code address for emi
 fifo randomizer for emi
 now handles frames larger than the vita packet (i.e. with padding)
 don't clear out following packets on an eob ack
 don't flag an error on eob ack
 proper triggering for interrupts generated on the dsp_clk
 cleanup for 32 bit seqnum
 increase compatibility number for flow control
 switch to 32 bit sequence numbers.  Will wrap in ~15 hours at max rate
 send message on eob to ack the end of transmission
 typo which isn't caught by xilinx
 separated flow control and error reporting on tx path.  should work with and without flow control
 go to the correct state
 add a fifo to the end of the mux to help in timing.
  add trigger to makefile
 assign setting reg addresses
 declarations
 checkpoint in flow control packet generation
 usrp-n: populated name properties to use the generated cname from iface
 usrp2: made enums for the rev types and implemented in code
 Merge branch 'master' into usrp2p
 usrp2: fix discovery timeout, use default
 U2P: saner image burner output messages
 usrp_e : Add missing header file.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 these got dropped during the rebase
 Merge branch 'ranges'
 usrp2: switch the timeout to units of seconds
 uhd: pulled in some worthwhile changes from flow control branch
 Removed 'ifdef for second DCM that was a deign idea for external SRAM on u2plus. Hardcoded -90 degree clcok from first DCM as final solution
 1) Created new FIFO IP in Coregen. 512x36 dual clcok FIFO with programable full watermark
 1) u2p has added a new signal from the SRAM to the pinout, RAM_ZZ which allows the SRAM to be placed in a sleep mode. This pin was erroniously pulled high at the top level rendering the SRAM unusable.
 Defaulted all SRAM pins to LVCMOS25 8mA FAST
 Placed 2nd DCM into `ifdef DCM_FOR_RAMCLK which is dissabled by default
 Added external RAM FIFO to u2plus. Added code branch to ext_fifo.v using generate that instantiates different input and out fifo's and touched nobl_fifo code so that it works at 18 and 36bit widths. Added 2nd DCM to top level to generate off chip RAMCLK. Added explicit I/O instances to top level for tristate drivers and changed signals to core as needed. Creted new FIFO's in core gen to replace much larger FIFO's used on u2rev3
 revert unneeded changes and incorrect comments
 reconnect GPIOs, remove debug pins, meets timing now
 Modified phase shift of DCM1 to -64 which is intended to give more timing margin on reads from the SRAM at the expense of Writes to the SRAM. Tested to be at least as stable as a phase shift of 12 and beter looking timing on the logic analyzer. Signals driven by the FPGA are observed changing on the SRAM pins about 4 nS after the rising edge of the RAM clock.
 Enabled phase offset adjustment on DCM_INST1 which drives the external Fast SRAM clock. Set phase shift to -12 after experimentation using logic analyzer to see results. This value gives near optimum 1.5nS setup times on the source sync signals FPGA -> SRAM under lab conditions.
 Added to DCM's and some BUFG's to align the internal 125MHz clock edge with its presentation externally at the NoBL SRAM. Since we don't have a board level trace to use to estimate clock propigation delay we just loop through the I/O on the FPGA. This hasn't been verified as working on a USRP2 yet.
 Enhanced test bench to be more like real world application
 hangedddddddextrnal fifo size to use full NoBL SRAM
 Corrected extfifo code so that all registers that are on SRAM signals are packed into IOBs
 capacity logic fix
 Added capacity to the module pinout
 Added a bunch of debug signals.
 Regenerated FIFO with lower trigger level for almost full flag to reflect logic removed from nobl_fifo.
 Regenerated FIFO's for extfifo. There are problems with certain configurations it seems. It is important that the fifo_xlnx_512x36_2clk_18to36 is generated with the "almost_full" pin even though it is not used in the application. if this pin is omitted the FPGA image doesn't work correctly
 Edited FIFO instance to delete port that was not regenerated after reconfiguration
 Adding in files that probably didn;t exist in the ISE10.1 version of coregen
 Bringing all coregen files checked in into sync
 Found bug due to not accounting for the correct number of possible in flight READ operations that can be in the extfifo pipeline. Regenerated fifo_xlnx_512x36_2clk_18to36 to include prog_full output triggered at 1017 so that there are 6 empty spaces to accept in flight read data upon completion. Had to generate the FIFO using Coregen  from ISE12.1 due to 10.1 verion not working correctly in FPGA Still have to tackle making this simulate in Icarus
 checkin of generated coregen files
 External FIFO tested in simulation and on USRP2 from decimation 64->8 with current head UHD code. Apparently operation is "flawless" but more regression and corner case regression could and should be done. Tristate drivers have been added at the top level of the hierarchy for the SRAM databus as is considered good practice for both Xilinx and ASIC design flows and so both top level and core fils have been touched.
 Checkpoint checkin. Loopback is running via the external ZBT SRAM...HOWEVER, its not running well, its stable but the data is corrupted sometimes. Not clear if its a logic or AC timing/SI issue yet.
 get it to build
 moved forward from the old branch
 usrp-e100: add serial and name checks to the usrp-e100 discovery routine
 usrp_e100: added byteswapping calls to vendor and device (its NBO)
 Merge branch 'usrp_e100_i2c' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e100_i2c
 usrp-e100: split vendor/device field for eeprom, rename fab rev to model, fixed char cast (to treat like integer)
 usrp_eXXX: Only include i2c-dev.h due to struct definition conflicts.
 uhd: made unit test for meta range and fixed bug
 dbsrx2: updated code for ranges use
 uhd: added meta-range clip and implemented in dboards, fixed step calculation
 uhd: created a meta range that is a range of ranges for gains and freqs
 usrpbbbbbbbbbbbeeeeeeeeeeee fix typo
 U2P: i can't spell
 U2P: Added U2P stuff to images/ Makefile
 reverting part of the reversion of the spi settings.
 usrp-e100: implemented wrapper for i2c device node + ioctls, implemented e100 eeprom map
 u2p needs the bigger regs for some reason
 U2P: Ripped out the mboard_rev_t structure in favor of an enum in usrp2_regs.hpp and some logic.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p-next
 2+: moved mboard_rev to usrp2/ in preparation for merging upstream
 need to enable both 16 and 32 bit spi interfaces -- 16 used in u1e, 32 in u2 and u2p
 occ needs to be 2 bits wide on a 36 bit fifo interface.
 Merge branch 'u1e' into merge_u1e
 Merge branch 'master' into usrp_e100_i2c
 uhd: renamed enums to reflect new convention
 usrp1: usrp1 util is conditionally enabled
 Merge branch 'master' into usrp_e100
 usrp-e100: added empty eeprom for eeprom get property
 uhd: reorganized utils cmakefile to use list of sources
 fixed string constants find and replace typo
 usrp-e100: add header path for the utils directory as well
 usrp-e100: moved kernel header to lib dir, remove the header check, default enable to false
 remove old commented out code
 usrp-e100: renamed files and classes in usrp-e100 to e100 name
 fix timing problem on DAC output bus
 usrp_e: renamed directory to usrp_e100 to reflect product name
 usrp-e: check the return code on system call, also removes warnings
 Merge branch 'master' into usrp_e_next
 usrp_e: use the transport to calculate the max spp (with a fix to init the xport first)
 invert led signals because they are active low
 usrp_e : Unload the module before loading the FPGA. Reload after the fpga is loaded.
 added warning about rfx classic boards and dboard notes
 usrp2: implemented clear state for RX and TX control, and zero sample command support
 Merge branch 'master' into flow_ctrl
 usrp2: led F documentation fix
 dbsrx2: removed windows warnings, made bandwidth param a double
 Merge branch 'dbsrx2'
 usrp2: added notes about 3rd party sd cards to docs
 Added mangling for DBSRX2 i2c addresses on USRP
 Adjusting rx_get and rx_set for newer keys
 Working DBSRX2 daughterboard code
 Working DBSRX2 daughterboard code
 Merge branch 'mb_eeprom'
 uhd: created docs for the device naming, command usage in usrp2 docs, removed redundant docs in usrp1
 uhd: for eeprom writeback, write and set only those values changed
 uhd: rename identifier for usrp1 eeprom, and fix offsets, add serial support to usrp2
 uhd: dont check for python interp if PYTHON_EXECUTABLE specified
 Merge branch 'good_stuff' into mb_eeprom
 usrp1: pulled in cmake build system for usrp1 firmware
 usrp: implement name checking on dicovery (all platforms), separate usb serial from serial (for now)
 usrp: replaced device specific burner apps with one generic one for mboard eeproms
 usrp: print eeprom key/value pairs in the probe app, fixed mac addr size
 usrp2: move mboard eeprom instance into iface to the clock control can access it
 Merge branch 'good_stuff' into mb_eeprom
 usrp2: implemented mboard eeprom into usrp2 mboard
 Merge branch 'ovfl' into good_stuff
 Merge branch 'garp' into good_stuff
 images: remove exe bit left by some build processes
 usrp: created mboard eeprom map class, implemented for usrp2
 usrp_e : Fix register definitions for COMPAT and others.
 usrp_e: Comment out fpga loading until we unload module during load.
 duh
 Merge remote branch 'origin/usrp_e_next' into usrp_e_next
 uhd: fixed typo - removed export for templated class
 uhd: added dict get method, used in usrp1 image loading
 Merge branch 'master' into flow_ctrl
 Merge branch 'next'
 Fix Bandwidth for IQ subdevs on Basic/LF
 usrp2: documented LED E
 uhd: change python module check descriptions to use words
 uhd: added to python module check macro, move check to lib dir
 Merge branch 'next' into usrp_e_next
 uhd: removed dilv in rx files examples
 uhd: added rx samples to udp example, cleaned up other examples, added gain options
 uhd: added rx to file example, simplified cmake file for examples
 Merge branch 'next' into flow_ctrl
 usrp-e: use clock control to get clock rate, removed temporary constant
 usrp-e: implemented fpga loading and compat checking
 usrp_e: added support for building fpga image into images Makefile
 Merge branch 'ue1_rev2' into usrp_e_next
 Merge branch 'usrp_e' into usrp_e_next
 usrp: added to subdev spec comments/docs
 usrp: added a time sync check for multi usrp
 usrp_e: fix to get compiling with next branch
 Merge branch 'next' into usrp_e
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: moved templated dict implementation into ipp file
 uhd: replaced print warning with a post warning call and registry
 usrp: fixed validate subdev spec typo for empty string cases
 usrp: rework lo offset logic to use bandwidth, add test case
 uhd: doxygen comments, moved enum comments, added to metadata for all entities
 uhd: tune helper + request, forgot to use and set target freq
 Updated bandwidths in daughterboard docs
 Added bandwidth property to all daughterboards
 fix copy/paste typo piroundable
 uhd: created tune request struct and implemented more fine grained tuning calls
 created ascii art dft plotter in uhd
 dbsrx: allow for setup time after changing the vco selection
 BasicRX: GPIOs now output 0 to decrease noise pickup.
 Merge branch 'master' into flow_ctrl
 dbsrx: reject asymmetric clocks (odd divisors)
 images: remove exe bit left by some build processes
 Merge branch 'flow_control_fpga' into flow_ctrl
 Merge branch 'garp' into flow_ctrl
 usrp2: fw sends gratuitous arp on link-up
 the width of the address bus is called DEPTH, not WIDTH...
 usrp_e: Add driver compatibility ioctl to header file.
 Merge branch 'usrp2_overflow' into flow_ctrl
 Merge branch 'master' into flow_ctrl
 address gray coding
 slow slew rate and lower drive to 8ma on RAM_XX signals to reduce emi
 should combine the randomizer with flow_control
 usrp2: handle real overflow packets in host, reload continuous stream cmd, remove firmware handling
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp-e: Add example that reads data from uhd and sends it over a udp socket.
 Merge branch 'usrp_e_mmap_b2' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp_e: Do not install main_test anymore.
 usrp: remove irrelevant copied comment from single usrp
 usrp: use a dash as the gain name prefix separator, removed RX/TX auto suffix for XCVR board cnames
 Moved mboard rev detection to iface.cpp.
 usrp: convenience wrappers for dealing with overall gains
 usrp: use the dboard id to prefix the subdev gain group names
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_mmap_b2
 usrp: added gain element access by gain name to multi and single wrappers
 uhd: added name parameter to gain group, get range, set/get value by name
 usrp: added docstrings to single and multi usrp for undocumented methods
 usrp: updated docs to reflect switch to multi-usrp interface
 uhd: remove some warnings in MSVC and with typo in xcvr2450
 usrp: change the bandwidth param to a double (its a frequency), add set and gets for BW in the wrappers
 Merge branch 'multi_usrp'
 multi-usrp: fixed num channel calculation, moved logic to cpm functions
 uhd: split unit tests into individual tests by file + they get installed
 uhd: made ticks signed in time spec, fixed full secs implementation, added unit tests
 multi-usrp: corrected calculations for channel and mboard indexes
 usrp: deleted deprecated simple and mimo wrappers, moved implementations into headers
 Merge branch 'master' into flow_ctrl
 usrp: moved warnings logic into wrappers
 usrp: created multi-usrp (multi chan, multi board), and deprecated mimo-usrp
 usrp2: make the booty smaller than the number of recv frames
 usrp2: dont need to start streaming for this hack
 usrp2: temp fix to send dummy packets and flush so FPGA vita machine are in known state
 Merge branch 'flow_ctrl_with_fpga'
 usrp_e: Disable debug.
 usrp_e: back out dynamic send/recv samples calculation.
 Merge branch 'flow_control' into flow_ctrl
 uhd: removed 1 sample buffers in test async messages
 usrp2: move udp port initialization into mboard impl so its done before async registers are setup
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 uhd: fix docs on boost version, also add additional version string for 1.44
 USRP-E: brought loopback test updates in from usrp_e branch.
 usrp2: handle destination port unreachable icmp in fw (kills streaming and update packets)
 USRP-E: updated the loopback tester for length checking.
 udp: fix to use concurrency hint, default hint is zero when no async enabled
 usrp2: added docs on flow control ricer args and using usrp2 with a switch
 usrp: test async messages app randomly runs tests
 usrp2: increment tx sequence after commit
 now handles frames larger than the vita packet (i.e. with padding)
 don't clear out following packets on an eob ack
 don't flag an error on eob ack
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 USRP2P: mboard rev works through props interface.
 usrp2: register overflow, underflow, and pps level for pic
 USRP2P: This is surprisingly involved. Adding a consistent interface to deal with hardware revisions.
 Added documentation of daughterboard filter bandwidths
 proper triggering for interrupts generated on the dsp_clk
 Enhance XCVR2450 to clip for high/low band tuning and add bandwidth property
 uhd: test eob ack message, usrp2: remove rx drain on init with the promise of a reset register
 Merge branch 'set_bandwidth'
 Merge branch 'dbsrx_clock_div'
 usrp2: enable the cycles per ack, and drain recv without the timeout (fixes previous conflict)
 UHD: reordered MIMO set_rx_bandwidth arg order
 UHD: Brought out set_rx_bandwidth for dboards with programmable rx filters.
 usrp2: use select rather than manually polling the simple udp socket
 usrp2: use 32-bit flow control sequence numbers
 cleanup for 32 bit seqnum
 increase compatibility number for flow control
 switch to 32 bit sequence numbers.  Will wrap in ~15 hours at max rate
 usrp2: implemented flow control monitor
 DBSRX: Fixed some ASSERT statements.
 send message on eob to ack the end of transmission
 typo which isn't caught by xilinx
 usrp2: add fc control registers, use small timeout for control packets again
 usrp2: implement fc seq number on tx header packing
 separated flow control and error reporting on tx path.  should work with and without flow control
 uhd: fix async msg test to reflect new timeout api
 go to the correct state
 TVRX documentation and a bugfix in the cal table. Named the antenna "RX".
 Fixed Assertions to better document tuning failures
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 usrp: comments for set subdev spec in single usrp
 uhd: better warning message for failing to set rt priority
 add a fifo to the end of the mux to help in timing.
 usrp: added calls to get subdev and mboard canonical names
  add trigger to makefile
 assign setting reg addresses
 declarations
 checkpoint in flow control packet generation
 tvrx: added enabled prop to set and get
 Merge branch 'subdev_enable' into next
 udp: add docs note about the udp transport
 USRP2P: Little bit of commonality in the include files. No functional change.
 U2P: Working ICAP bootloader. Should be ready for release.
 U2P: Bootloader works, successfully loads production image.
 udp: worked blocking send back into udp transport, enable async with #define
 U2P: Whoops.
 U2P: Bootloader/ICAP updates. 2-stage bootloader works. Uses EEPROM for state info.
 udp: fix msvc errors for udp transport
 udp: implementation for blocking recv w/ timeout, switch async implementation w/ #define
 U2P: remember your semicolons.
 U2P: modified ICAP. turns out ICAP needs clock disabled while CE is not asserted. which is the point of a CE, but... it works.
 tvrx: converted floats to doubles to avoid msvc warnings
 uhd: tweaked docs/notes on transports
 revert unneeded changes and incorrect comments
 usrp1: ensure that the current buffer was committed before getting a new one
 separate the bootloader image into another file
 usrp2: moved samples per packet calculation into io_impl
 usrp-e: use frame size to calculate the max samples per packet
 Merge branch 'next' into usrp_e_mmap_b2
 usrp1: use the transport frame sizes to calculate the max spp
 reconnect GPIOs, remove debug pins, meets timing now
 usrp-e: implemented the USER_PROCESS flag and CTM poll technique
 Merge branch 'ise12' into efifo_merge_dcm
 Add flag that indicates userspace has started processing a frame.
 udp: fixed boost format syntax for warning message
 U2P: newest bootloader with support for 32Mbit flash
 USRP2P: internal reference selected by default.
 Merge branch 'master' into next
 usb: moved event handler thread into the zero copy interface
 uhd: transport docs for UDP and USB (moved from usrp docs)
 U2P: 32/64Mbit FLASH support, internal reference support for U2P r2
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 uhd: replaced frame params for the zero copy interfaces with a device address
 usb: added dummy usb implementation for building without usb (throw, not segfault)
 timeout: proper way to check for timeout in full buff mode
 usrp-e: check if flags are ready after poll
 Merge branch 'timeout' into usrp_e_mmap
 uhd: bounded buffer pop sets back element to empty to decrement references
 uhd: added include for enable_shared_from_this when used
 Merge branch 'usrp_e_mmap' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_mmap
 usrp-e: implemented mmap with new zero_copy timeout work, added much debug verbosity
 Merge branch 'timeout' into usrp_e_mmap
 uhd: modified tx timed samples to deal with timeout
 usrp2: removed extra print-outs in init
 udp: added io service work to keep service running
 uhd: changed buffer allocations to be in a single chunk, udp: pass frame sizes into the impl constructor
 uhd: implemented udp zero copy asio with async calls
 uhd: reworked the zero copy interface
 uhd: implemented a double timeout (in seconds) for send and recv chains
 UHD: added mutex to fix race condition in device enumeration.
 fix timing problem on DAC output bus
 Merge branch 'next'
 uhd: print system info on library load
 usb: catch open errors and print message, device: catch exceptions at discovery time
 TVRX: fixed antenna prop enumeration
 Ignore direction for GPIO 114 since it is always an input.
 usrp-e: untested attempt at zero copy iface for mmap
 Made usb_device_handle UHD_API.
 Modified phase shift of DCM1 to -64 which is intended to give more timing margin on reads from the SRAM at the expense of Writes to the SRAM. Tested to be at least as stable as a phase shift of 12 and beter looking timing on the logic analyzer. Signals driven by the FPGA are observed changing on the SRAM pins about 4 nS after the rising edge of the RAM clock.
 usrp-e: update to build with the master
 Merge branch 'master' into usrp_e_next
 uhd: updated AUTHORS and README for tvrx and usrp1
 Merge branch 'tvrx_uhd'
 uhd: implemented recv timeout for zero copy interface
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into tvrx_uhd
 TVRX: Fixed to properly calculate alias frequencies.
 Ignore direction for GPIO 114 since it is always an input.
 usb: set rt thread priority for the libusb event loop
 Ignore direction for GPIO 114 since it is always an input.
 usrp: added subdev enabled property
 usrp1: replace byteswap with htonx (it was wrong to just swap)
 TVRX: works for USRP and USRP2.
 Merge branch 'get_codec_rate' of ettus.sourcerepo.com:ettus/uhdpriv into tvrx_uhd
 usrp: added get codec rate to dboard iface
 usb: added libusb docs to build guide, usrp1: moved transfer param docs
 usrp: transfer resize options and documentation
 usrp1: fixed compile time warning, tweaked fw load message
 Merge branch 'libusb'
 TVRX: Mixed up DAC channels. Gain is much more linear now.
 TVRX: Fixed spectrum inversion (derp derp derp). Removed debug printing.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into tvrx_uhd
 TVRX: First version that works. The gain linearity is still borked.
 usb: submit should return ssize_t, usrp1: set hash before reset after fw load
 wbx: fix for id swap typo
 TVRX: Don't have mboard impl modified for ADC buffer disable. The rest of TVRX should be in there. Not debugged.
 Merge branch 'master' into libusb
 usrp1: move the get handles call into the for loop scope to facilitate decontruction
 usrp1: modify fpga file load to use read (readsome seems to not work here in windows land)
 dboard: better warnings for invalid IDs and invalid ID combinations
 TVRX: not done yet but getting there. gain linearization framework in place.
 usrp2: application notes for the LEDs
 usrp1: filter the discovery routine on the serial
 uhd: fix warning by adding brackets for while(cond){};
 usb: use the proper libusb include (in path set by pkgconfig)
 usb: added some documentation to wrapper base
 usrp1: add print out messages when loading images
 usb: disable thread interruption on wait calls
 usb: zero copy work, multiple endpoints with single context, async io
 Really enable usrp_e support. Previous commit commented out the ansi flag so C++ comments in C compile.
 Remove BIT macro
 Add define so uusrp_e support is enabled.
 usb: work on libusb code to use a single context across all calls
 Add more NEON for type conversion.
 usb: tweaks to usb code to cleanup properly and/or in error conditions
 usrp-e: updated dsp for multiple shift properties
 Merge branch 'master' into usrp_e
 allow for CS to rise before, at the same time, or after OE
 usb: moved msvc stdint file and changed cmake conditional for msvc
 Merge branch 'libusb_win'
 Merge branch 'xusrp'
 usrp: modified pps input tester to use double with real value for seconds
 usrp1: removed msvc warnings for usrp1 impl code
 usrp1: modified control to use the c++ ifstream over fopen
 Merge branch 'xusrp' into libusb_win
 usrp1: fixes to remove warnings and errors for usrp1 + libusb windows
 libusb: various minor code tweaks
 better debug pins
 libusb: various minor code tweaks
 basic: added the 4th BA subdevice to basic and lf dboard code
 usrp1: sanity check, only 1 channel per tx slot
 usrp1: multi-channel tx working, modified vrt handler to interleave
 watch the ethernet chip select on our debug bus
 usrp1: multi-channel rx working, modified vrt handler to deinterleave
 usrp1: reworked the io_impl for usrp1 to use the vrt packet handler
 uhd: honor the LIB_SUFFIX option, added docs for LIB_SUFFIX and tweaked other docs
 fix timing issue on DAC outputs with rev 2.  This puts the whole system on a 90 degree phase shift
 Use a dummy write to start DMA transfers when sending data to the FPGA. Poll will also start data transfers.
 Use the ring buffer sizes read from the kernel.
 Convert write to use the mmap interface.
 Read the ring buffer size from the kernel and use that to set up the structures that read and write the ring buffer.
 added db_tvrx, regmap gen_dtt75403_regs.py
 Fix ring buffer size calculation.
 usrp2: make usrp2 dsp multi-channel compatible
 usrp1: implemented multi-channel dsp control of shift freq
 uhd: added single usrp interface, added usrp1 properties to prop names
 Fix really dumb mistake in rad ring buffer code. Add/comment debug lines.
 usrp2: provide clock over mimo connector so usrp2 can share refs
 send all gpmc signals to mictor
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Enabled phase offset adjustment on DCM_INST1 which drives the external Fast SRAM clock. Set phase shift to -12 after experimentation using logic analyzer to see results. This value gives near optimum 1.5nS setup times on the source sync signals FPGA -> SRAM under lab conditions.
 Reverse I and Q on the wire.
 Install main_test so we can test cross compiled uhd.
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Fix errors.
 Allow programs to find usrp_e.h header, even if it is not installed in /usr/include/linux.
 Restore tx and rx timed smaple programs to the versions in master. They use floating point.
 usrp-e: configure flag option for usrp-e support
 usrp-e: typo fix for ad9522 regs size
 Merge branch 'master' into usrp_e
 uhd: added enable flags for usrp1 and usrp2
 updated pins to match rev2, removed dip switch, etc.  seems to compile ok.
 Convert fc32_to_item32_nswap to use ARM NEON if available.
 usrp2: added some pps docs using the test example app
 usrp: test for async messages, also renamed pps test
 pins are different on rev2
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp: dboard eeprom burner app takes slot param (fixed for automatic)
 Add clkgen-config, usrp-e-i2c and usrp-e-spi to the installed utils.
 fixed makefile to compile with our new system
 Added to DCM's and some BUFG's to align the internal 125MHz clock edge with its presentation externally at the NoBL SRAM. Since we don't have a board level trace to use to estimate clock propigation delay we just loop through the I/O on the FPGA. This hasn't been verified as working on a USRP2 yet.
 Merge branch 'efifo_merge' of git@ettus.sourcerepo.com:ettus/fpgapriv into efifo_merge
 Enhanced test bench to be more like real world application
 usrp1: added docs and author
 Merge branch 'usrp1' into next
 Removed USRP1 firmware path debug messages
 Added serial number read. Renamed the usrp1-specific utilities.
 Merge branch 'usrp1' into next
 Added usrp_serial_burner.cpp and capabilities for setting serial number in mboard_impl. Have not yet added read support.
 Merge branch 'usrp1' into next
 Merge branch 'usrp1' of ettus.sourcerepo.com:ettus/uhdpriv into usrp1
 EEPROM burning in UHD. Changed some USB device handle stuff. Added usrp_init_eeprom.cpp. Hacked up the firmware makefile to behave and to generate .bin EEPROM images instead of IHX.
 Merge branch 'ise12' into next
 usrp1: tested dbsrx, works with lower divider
 usrp1: Fedora sdcc note and change fw error to warning (find should not error)
 usrp1: flush for flow error messages
 Merge branch 'next' into usrp1
 uhd: sine table for tx waveforms
 usrp2: flush the error flow messages, issue the stop before register configure to align count
 usrp1: init the subdev specs so they will be non-empty
 usrp1: work on gpio clock divider for dbsrx, still not locking
 usrp1: subdev spec tweaks and docs
 Merge branch 'convert_types' into usrp1
 uhd: added interleave/de-interleave type conversion routines
 add register to tell host about compatibility level and which image we are using
 uhd: fixed short conversion (IQ swap) and added test between short/float
 Merge branch 'next' into usrp1
 Merge branch 'pps_test' into next
 Add usrp-e-debug-pins to utils. This is the wrong place for the regs header file.
 Test if usrp_e kernel module is loaded before trying to load the FPGA. Do not load the the fpga if the kernel module is loaded.
 Move fpga-downloader and usrp-e-loopback into utils so they get packaged for installation on the USRP Embedded.
 Add support for building c programs. Remove -pedantic and -ansi flags.
 usrp1: Additional comments on libusb transport implemenation
 usrp1: Read capabilities register
 usrp1: Don't flush the stream buffer after every overrun/underrun
 usrp1: Remove unused funtions libusb transport
 usrp1: Additional comments to libusb transport implementation
 Merge branch 'usrp1' of ettus.sourcerepo.com:ettus/uhdpriv into usrp1
 usrp1: add the 4rx image to the installed usrp1 fpga images
 usrp1: Wait for USB device renumeration only when necessary
 Fixed PPS. Instantiation was miscapitalized.
 usrp1: Handle degenerate managed send buffer cases
 usrp1: some app notes
 Created pps_test example and docs
 move declaration to make loopback compile
 usrp1: Disable default debug output for libusb implementations
 usrp1: Cleanup libusb device handling
 usrp1: Disable i2c error messages unless debug is enabled
 usrp1: Disable default codec debug output
 Merge branch 'usrp1_cleanup' into usrp1
 usrp1: Add missing include for fpga registers
 usrp1: Only return a list of FSF devices
 usrp1: Fix DDC rate storage value and comments for multiple channel support
 usrp1: Clean up initialization sequence of fpga registers
 usrp1: Fix fpga load issue by increasing delay after firmware load
 usrp1: Add TODO comments
 usrp1: handle special dbsrx clocking case
 Removing the GPS search stuff until I have time to figure out why the firmware side keeps timing out.
 usrp1: cast enum to char before printing as %c
 usrp1: swapped the mux values to account for the convert types routines
 usrp1: codec pga gain control fix
 Merge branch 'next' into usrp1
 basic-tx: added docs for new subdevices
 basic-tx: mirror the rx subdevices for basic tx boards as well
 usrp1: Fill in missing dboard interface with an empty call
 Merge branch 'convert_types' into usrp1
 Merge branch 'usrp1_next' into usrp1
 usrp1: Modifiy USB transport implementations to use new interface
 usrp1: Modifiy USB interfaces to use new device handle
 Merge branch 'mux'
 uhd: switched the IQ order interpretation for convert types
 invert adc_a because it is inverted on schematic.  Also clean up extraneous adc signals from old adc on U2
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 SWAP DAC A and B, invert B to match schematics
 Change to get codec_impl to compile, dur.
 hangedddddddextrnal fifo size to use full NoBL SRAM
 Merge branch 'tx_policy' into u1e
 Merge branch 'u1e_merge' into u1e
 Use new tx_policy stuff, reassigned leds to be just like U2
 Merge branch 'tx_policy' into u2p_txpolicy
 Merge branch 'convert_types' into mux
 usrp2: changes to mux calculation routine and usrp2 fpga compat number
 clean up DAC inversion and swapping to match schematics
 Clean up iq swapping on RX.  It is now swapped in the top level. widened muxes to 4 bits to match tx side and handle more ADCs in future
 Corrected extfifo code so that all registers that are on SRAM signals are packed into IOBs
 usrp-e: implemented tx policy and handling of async messages
 uhd: convert types corrected for little endian, created SSE2 float/short conversion for no-swap case
 usrp1: Remove unused overrun/underrun poll variable
 usrp1: Cleanup unnecessary state variables
 usrp1: Improve debug output readability
 Added a sanity checker Python script.
 Ensure ethernet LED pin has 12mA output
 usrp-e: fixed codec control gain calculation error, added tx policy registers, set to next packet
 no need for protocol headers since we're not doing ethernet
 usrp-e: added dboard iface set gpio debug call
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 match the signal names in this design
 usrp: added get dboard iface to simple wrapper, and set gpio debug to dboard iface
 debug pins cleanup
 basic: better errors for invalid antenna selection
 usrp1: Fix assertion that prevents 32-bit SPI transactions
 usrp1: Remove hard coded value in clock rate property
 usrp1: Refactor I/O implementation
 usrp1: Fix bug in calculating transmit mux
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: removed msvc warnings and errors (no M_PI)
 uhd: tx waveform generates on the fly now
 Added 12mA current spec to eth phy LED pin.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 uhd: tx waveform change how error is measured
 capacity logic fix
 uhd: work on tx waveforms to make it more accurate
 usrp1: Change codec transmit gain scaling
 usrp1: Make underrun/overrun checking rate dependent
 usrp1: images for usrp1, makefile checks for image generation dependencies
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Added capacity to the module pinout
 Added a bunch of debug signals.
 Merge branch 'master' into usrp1
 uhd: added image utils code to search the images paths for image files
 Merge branch 'ise12_efifo_work' into efifo_merge
 uhd: replaced tx continuous app with tx waveform app (siggen example app)
 properly integrate the new tx chain
 catch up with tx_policy
 Regenerated FIFO with lower trigger level for almost full flag to reflect logic removed from nobl_fifo.
 usrp1: Remove codec gain TODO comments
 usrp1: Return proper mboard proxy
 usrp1: Refactor mboard tuning code
 usrp: rethrow validate subdev spec errors with additional info
 Change TX PGA gain scaling to match gnuradio scaling
 Change clock dividers so DBSRX board locks.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Add gain command line parameter.
 Add gain setting to tx_timed_samples program.
 Add get setting to the rx_to_file program.
 Add program to transmit samples from a file.
 Build rx_to_file example.
 Merge branch 'usrp2p_udpfw' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Moved UDP firmware update stuff out of fw_common.h into udp_fw_update.h.
 uhd: docs on building and installing images
 usrp2: template pick rate to avoid compile errors
 uhd: windows path escape fix
 Merge branch 'next'
 usrp1: added firmware to images makefile and prebuilt fpga images
 Removed debugging print from usrp2p_fw_update.py
 UDP firmware update support for USRP2P.
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp-e: added gain group property
 Merge branch 'master' into usrp1
 usrp1: Return unknown (0xff) on invalid I2C read
 Really fix TX IQ phase offset.
 Merge branch 'next'
 Merge branch 'next' into usrp1
 attach run_tx and run_rx to leds
 Merge branch 'features' into tx_policy
 Fix to create 90 phase shift on TX.
 Merging my work back to usrp_e branch.
 connect atr
 delay the q channel to make the channels line up on the AD9862
 usrp-e: building off of next branch
 uhd: add space to multiline string so quotes in the string cant disturb the multiline quotes
 Merge branch 'next' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_merge
 usrp-e: misc code tweaks
 uhd: added the concept of installer path (along with local path) for package data
 Merge branch 'premerge'
 Merge branch 'usrp1_next' of ettus.sourcerepo.com:ettus/uhdpriv into usrp1_next
 usrp1: Remove hard coded clock values
 usrp1: Remove error message for unsupported ATR registers
 usrp1: Setup dboard interface duality
 Rev firmware compatibility number to 6
 usrp1: rx and tx mux calculation
 usrp2: don't forward dbsm errors
 Merge branch 'tx_policy' of ettus.sourcerepo.com:ettus/fpgapriv into premerge
 IRQ-based SPI works. Don't try to do multiple transactions without waiting for results first. In fact, don't try to do an I2C transaction while an SPI transaction is pending.
 syntax
 first stab at irq'ed spi
 Removed NACK checking so things don't barf when daughterboards aren't connected.
 Fix warnings related to const-ness and volatile-ness.
 Brought in changes to SPI to match up with parallel branch so they share a common protocol.
 uhd: created floor_step to handle floating-point errors in gain group
 uhd: avoid segfaults - use CPP macros for paths and dont split empty string
 usrp: needed default constructor for MSVC, fixed gain group float warnings
 Finished GPS driver, more or less.
 Merge branch 'features' into ise12_efifo_merge
 Matt's attempt at merging Merge branch 'tx_policy' into ise12_efifo_work
 Merge branch 'ise12' into ise12_efifo_work
 usrp1: compiling with the latest next
 Merge branch 'next' into usrp1_next
 usrp2: fix missing include
 usrp: use different priority policies for gain group (rx vs tx)
 usrp: moved usrp utils into public include space
 usrp1: add skeleton code for setting subdev spec
 usrp1: created daughterboard duality
 usrp1: compiling off next branch
 Merge branch 'next' into usrp1
 uhd: use cmake to convert the pkg data dir to native system format
 Merge branch 'next' into usrp1
 uhd: extract named prop returns a named prop (not a tuple)
 usrp: give dboards a name (not a blank string), do automatic selection when not provided
 usrp: replaced mboard name with special props for dboard iface
 usrp1: Add usrp1 implementation
 usrp1: Cmake changes to find libusb-1.0
 usrp1: Add libusb-1.0 implementations of USB interfaces
 usrp1: Add USB transport interfaces
 usrp1: Add SPI transaction command to FX2 firmware
 Fixed behavior when no GPS present.
 Small fix for fngets
 Support for NMEA reads. Uses NMEA parsing instead of Jackson Labs parsing.
 GPS interface works for Jackson Labs devices.
 Increased UART timeout for slow Jackson Labs GPSDO. Fixed up timeout code.
 usrp-e: clock settings, ref doubler, disable test clock, lower cp current
 usrp1: Add FX2 firmware files
 Merge branch 'split_string' into next
 Added timeout functionality for UART gets() calls. use fngets_timeout(). timeout defined in hal_uart.h.
 this is necessary for some reason
 first stab at a GPS driver in gps_ctrl.cpp. not the most expandable thing in the world but there's only so many GPS interfaces out there.
 Host-side fixes for GPS UART.
 Fixed GPS UART stuff. Works OK.
 usrp-e: codec gain control from properties interface
 Added host-side support for UART messaging.
 Added UART transactions to the DUDE/BRO protocol.
 Regenerated FIFO's for extfifo. There are problems with certain configurations it seems. It is important that the fifo_xlnx_512x36_2clk_18to36 is generated with the "almost_full" pin even though it is not used in the application. if this pin is omitted the FPGA image doesn't work correctly
 usrp-e: added codec impl, probe works
 Edited FIFO instance to delete port that was not regenerated after reconfiguration
 Adding in files that probably didn;t exist in the ISE10.1 version of coregen
 Bringing all coregen files checked in into sync
 Merge branch 'ise12_efifo_work' of git@ettus.sourcerepo.com:ettus/fpgapriv into ise12_efifo_work
 Found bug due to not accounting for the correct number of possible in flight READ operations that can be in the extfifo pipeline. Regenerated fifo_xlnx_512x36_2clk_18to36 to include prog_full output triggered at 1017 so that there are 6 empty spaces to accept in flight read data upon completion. Had to generate the FIFO using Coregen  from ISE12.1 due to 10.1 verion not working correctly in FPGA Still have to tackle making this simulate in Icarus
 Fixed u2plus_core.v to use quad_uart instead of simple_uart.
 Merge branch 'split_string' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_merge
 usrp-e: fix typo in verify subdev spec
 Merge branch 'subdev_spec'
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_merge
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Working support for multiple UARTs.
 uhd: made split string utility function
 uhd: created floor_step to handle floating-point errors in gain group
 uhd: avoid segfaults - use CPP macros for paths and dont split empty string
 uhd: avoid segfaults - use CPP macros for paths and dont split empty string
 rx error context packets should not be marked as errors in the fifo
 connect the setting reg to the real clock and reset
 Merge branch 'usrp_e_merge' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_merge
 usrp-e: removed transfer frameness
 Merge branch 'usrp_e' into usrp_e_merge
 Convert to use mmaped rx ring buffer.
 quad uart instead of single, for the extra on board serial ports
 Branch to make use of quad UART on USRP2P.
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 checkin of generated coregen files
 usrp-e: filled in properties and logic for subdev spec
 Merge branch 'subdev_spec' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp: added subdev spec verification functions
 Merge branch 'changes'
 usrp: needed default constructor for MSVC, fixed gain group float warnings
 Convert non-mmaped loopback test program to use new simple read/write api. Done by copying from the -mm version, which will be used to test mmaped ring buffer.
 Add usrp-e-mm-loopback to .gitignore.
 usrp-e: fixed warnings and errors, missing subdev spec stuff
 usrp-e: merged master, does not build
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Loopback test now supports variable size and works with mmapable ring buffer.
 Merge branch 'master' into usrp2p
 Bring in changes since last week.
 Interrupt-driven I2C. txrx_uhd uses async i2c for comms.
 uhd-images: do not require language check for images project
 usrp2: work on card burner to pad the image file before a write
 enlarge loopback fifo
 usrp2: added fpga compat number, renamed firmware proto version to compat
 Merge branch 'uhd_fpga_features'
 Merge branch 'features' into uhd_fpga_features
 added compat number to usrp2 readback mux
 makefile dependency fix for second expansion
 Merge branch 'images'
 Merge branch 'features' into uhd_fpga_features
 usrp: added api call to get the subdev spec
 uhd: created library code to handle paths for images and modules
 uhd: moved utils specific cmake stuff into utils cmake file
 uhd: fix device recv docs on timeout, also fix typo
 uhd-images: created makefile and cmake packager for the images
 Merge branch 'codec_gains'
 uhd: use int to round down for gain group
 dbsrx: added support note to README
 usrp: tweaks to subdev spec printing
 uhd: created subdevice pair struct for subdev spec (easier than first/second)
 uhd: implemented subdev spec in mimo and simple usrp wrappers.
 usrp: added subdev spec class with parser to specify subdevice specifications for channel config
 uhd: use constructor for impl class to avoid msvc warnings
 dbsrx: fix msvc warnings
 Fix DBSRX tuning and filter bandwidth
 dbsrx: modification docs
 DBSRX support in UHD
 Merge branch 'master' into codec_gains
 uhd: added warning printer utility function
 uhd: moved utils cpp files into lib/utils directory
 usrp2: added mboard name call to dboard iface
 Merge branch 'rfx'
 Merge branch 'fw_reorg'
 usrp-e: fixed clock div calculation bug
 Merge branch 'rfx' of ettus.sourcerepo.com:ettus/uhdpriv into rfx
 Propogate gain range into RX pga0 helper for RFX boards
 Fixes gain range for rfx400 vs other rfx
 Fixes gain range for rfx400 vs other rfx
 uhd: docs fix, its 3.3v level
 External FIFO tested in simulation and on USRP2 from decimation 64->8 with current head UHD code. Apparently operation is "flawless" but more regression and corner case regression could and should be done. Tristate drivers have been added at the top level of the hierarchy for the SRAM databus as is considered good practice for both Xilinx and ASIC design flows and so both top level and core fils have been touched.
 usrp2: reorganized firmware directory
 usrp2: stop streaming and drain buffer (if left running)
 Checkpoint checkin. Loopback is running via the external ZBT SRAM...HOWEVER, its not running well, its stable but the data is corrupted sometimes. Not clear if its a logic or AC timing/SI issue yet.
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp2p
 Merge branch 'tx_policy'
 usrp2: added tx policy register and changed fw to not handle error in buffer pool
 provide a way to get out of the error state without processor intervention
 Added DCM reset line to sr.
 Clock bugs, LED order. Figured out cold-start problem with Matt's help -- the DCM wasn't being reset. This also explains why USRP2 didn't like it when clocks_mimo_config was omitted -- it was sneakily resetting the DCM while enabling/disabling ref outputs.
 uhd: made tx continuous samples example app
 sequence number reset upon programming streamid
 attempt at avoiding infinite error messages
 Added back in clock_mimo_enable stuff since USRP2 breaks without it.
 uhd: alignment buffer timeout abs time fix
 Stripped out all the clock functionality except for init'ing the FPGA. Clock smarts have been host-side for a while, so this is redundant code.
 use int not rint.
 Fix for SPI SS > 8 bits wide
 ADC gain control works.
 ADC SPI works. ADC gain interface "works".
 usrp: codec gains, don't bind functio npointers, also add priorities
 Widened SPI slave select bus to 16 bits in host and firmware.
 usrp: codec gains, dont bind function pointers, also add priorities
 Added gain range property to rx_codec_get.
 usrp: gain group should not try to set gain elements if there are none
 implemented "next packet" and "next burst" policies
 sequence errors can happen on start of burst as well.
 more informative error codes
 cleaner error handling
 introduce new error types
 test mux and gen_context_pkt
 this is an output file, it shouldn't be checked in
 insert protocol engine flags when requested
 move the streamid so it isn't at the same address as clear_state
 connect the demux
 fix a typo
 tx error packets now muxed into the ethernet stream back to the host
 checkpoint.  New context packet generator to report underruns and other errors
 Ethernet blinky light changes. Link LED works. D201 (next to PHY) blinks on TX. Yellow LED on connector blinks on TX/RX.
 latest bootloader in core, fixed eth_led to be active high, connected eth clk
 Merge branch 'usrp2p2' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp2py
 Ethernet mods for activity LED.
 Ethernet PHY re-do.
 usrp: gain group should not try to set gain elements if there are none
 Interface access methods for users to access dboards.
 Added one more file from codec_gains2...
 This is a manual merge of codec_gains2 into usrp2py.
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp2px
 fixed template problems in gain_group_test
 usrp: removed gain handler code (replaced by gain group)
 usrp: added gain group support usrp2 dboard and to wrapper implementations
 usrp2: added codec impl for codec properties to usrp2
 uhd: added gain group and unit testing for it
 usrp: added codec gains props
 Added gain support for USRP2+ ADC.
 Merge branch 'u2p' of ettus.sourcerepo.com:ettus/fpgapriv into u2p
 fix timing races on ADC and DAC pins
 uhd: fix find-replace accident asize_t
 Merge branch 'codec_gains' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp2p2
 Host-side changes to work with the USRP2+.
 Deleted manually those files to correspond with USRP2P branch.
 usrp2: use default sized buffer on transmit (or reasonably smaller)
 Firmware compiles.
 New branch with firmware dir from USRP2P branch.
 Merge branch 'tx_report'
 fixed template problems in gain_group_test
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into codec_gains
 uhd: removed remaining template stuff from vrt packet handler, also tweaked format in rx timed samples
 usrp: removed gain handler code (replaced by gain group)
 usrp: added gain group support usrp2 dboard and to wrapper implementations
 usrp2: added codec impl for codec properties to usrp2
 uhd: added gain group and unit testing for it
 usrp: fix the N/2 cordic tune issue, use boost math sign inplace of my signum
 uhd: moved version extraction code into version.cmake
 usrp: added codec gains props
 uhd: get the version string from the api
 usrp2: moved timeout into bound callback in io_impl
 uhd: get time stamp from git log
 usrp: changed opaque pointer implementation for dboard contructor args
 uhd: added better throw warning to dict key not found
 usrp2: added async event types, and common code for handling context words
 capitalization matching
 uhd: added async recv message call to device api
 Merge branch 'master' into tx_report
 reconnect the serial clock
 connect SPI to adc, correct capitalization of SEN pins
 Fixed Makefile.common to correctly generate .mcs files.
 uhd: bring timeout parameter to the device::recv call, implement in usrp2
 uhd: typedefed vrt pack/unpack so the vrt packet handler need not be templated
 usrp2: added registers and handling for tx async reports
 Merge branch 'u2p' of ettus.sourcerepo.com:ettus/fpgapriv into u2p
 pushbutton now goes into interrupt controller, can be read from software.  Normally high, goes low when pushed
 Merge branch 'ise12' into u1e
 Merge branch 'ise12' into u2p
 move declaration ahead of use
 put run_tx and run_rx on the displayed LEDs
 Merge branch 'u2p' of ettus.sourcerepo.com:ettus/fpgapriv into u2p
 proper selection of bank of ram for instruction, since the address has already incremented by the time the data is returned
 usrp2: add a timeout to udp control and make it large for usrp2 control transactions
 usrp2: installed a simple dbsm_rx_inspector, it wont work without it...
 Merge branch 'package'
 uhd: fix unit test to compile over here
 uhd: work on tune logic, and subdev connection logic
 usrp: removed spectrum inverted property from subdev code and tune helper (it wasnt used)
 uhd: added test to check derive_freq_from_xx_subdev_and_dsp
 usrp: added functions to derive tuned frequency, tweaked logic, added unit test
 remove warnings
 wbx: removed print after freq clip
 Change WBX frequency range to match actual VCO/divider possibles
 uhd: include code_rate/2 as part of the tunable frequency range
 uhd: fix quotes for boost additional versions, restrict lib64 check to unix platforms
 usrp-e: removed vrt header rewrite in io impl, its not in vrt packet parser stuff
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp2: remove mb intervention on outgoing packets
 add mux and demux to build
 mux multiple fifo streams into one.  Allows priority or round robin
 split fifo into 2 streams based on first line in each packet
 Merge branch 'reload' into ise12
 uhd: fix for vrt packet handler commit size
 make loopback compile
 get it to build
 moved forward from the old branch
 uhd: bug in dsp freq word return calculation (signedness)
 Use largest possible packets for transfers.
 Convert basic test programs to use shorts in the GPP to avoid using short to float code in uhd.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: disable cid testing in vrt unit test (not supported)
 usrp2: disable buffer resize on platforms that cry about it
 uhd: platform define macros
 Merge branch 'u2p' of ettus.sourcerepo.com:ettus/fpgapriv into u2p
 just local commit before updating w/matt's fix
 reset the ack signal
 uhd: time for version minor, path tweaks, notes on windows command line compilation
 attach the correct data port
 uhd: moved cpack stuff into config dir (work on cpack)
 includes led blinker in bootram
 uhd: benchmark app, stop if left running initially
 uhd: add lib64 to boost library path when it exists (helps fedora 64)
 separate boot ram, redone memory map, connected uart
 uhd: switch statements to handle error code, default md to error code none
 usrp2: forward errors in the dbsm to communicate them up to the host
 uhd: support for deb and rpm packages, added dependency requirements
 further cleanup
 ram_harvard2 is a workaround for a Xilinx bug that gets confused by an unused write port on a ram
 very slight mods from v5 version
 copied from quad radio
 remove ram loader
 uhd: added checking for time deviation after sync. Prints error.
 updated to ise12 fixes from main development line
 Merge branch 'ise12' into u2p
 Merge branch 'ise12' of ettus.sourcerepo.com:ettus/fpgapriv into ise12
 Merge branch 'master' into ise12
 Merge branch 'ise12' into u2p
 Merge branch 'master' into u2p
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: setup metadata for fragment case (not in general case)
 Merge branch 'error_handling' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp2: removed SX packet count stuff from vrt packet handler, moved to usrp2 io impl and replaced with Os
 usrp-e: added io_impl handle overrun
 Merge branch 'error_handling' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: define ssize_t for msvc, fixed warning as well
 Merge branch 'error_handling' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: ssize_t for phony zero copy return types, null sptr for timeout/error with get managed buffers
 Merge branch 'error_handling' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: benchmark app, overruns are ok to get
 Merge branch 'error_handling' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: added error codes to rx metadata, switched examples to use
 Merge branch 'reload' into u1e
 fix to stop endless error packets
 updated tests to match new features
 point to new location for fifos
 Merge branch 'error_handling' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: callback in vrt packet handler to handle overrun
 uhd: added packet type to vrt if info struct, added burst flags to rx metadata, fixed vrt if packet parsing bugs
 Merge branch 'reload' into u1e
 error packets are now valid Extension Context packets error packets don't have a trailer any more streamid is now optional on data packets, set by header register trailer now has a bit to indicate successful End-of-burst hard-coded some header bits to correct values to ensure valid packets
 usrp2: added notes on multiple device network setup, improved warnings for buff size stuff
 uhd: moved assert implementation into ipp file, fixed potential bug with assert throw macro
 usrp2: clean up fw common with nicer looking macro for stdint namespace
 usrp2: moved common defined for udp mtu and implemented change.
 usrp2: use the actual pointer in bind so the sptr is not copied
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_wip
 uhd: change pack/unpack for 64-bit numbers to reflect hardware implementation
 usrp-e: fixed send and recv logic in io impl to deal with frame length correctly
 Merge branch 'reload' into u1e
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_wip
 uhd: added dilv option for timed examples, also made tx timed example fragment
 usrp-e: replaced stream cmd logic with common dsp type1 logic
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_wip
 uhd: added single rate option to benchmark example
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e_wip
 usrp: moved stream cmd word calculation into common dsp utils
 uhd: updated code to build with latest api, not tested
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp-e: removed top level header for usrp-e and fpga burner app, were not going to do it that way...
 usrp-e: tweaks to clock control logic
 uhd: renamed prefix on usrp burn eeprom utility
 uhd: removed some errors and warnings under macosx gcc build
 Merge branch 'usrp2_mimo'
 Merge branch 'uhd_fpga_merge'
 uhd: mimo usrp replace sleep with boost thread sleep (windows fix)
 uhd: added back into old send/recv but with deprecation attributes, moved inline device stuff into device.ipp
 uhd: added set time w/ unknown pps to mimo usrp, get tx rate bug fix
 Merge branch 'master' into u1e
 uhd: remove windows warnings (minor tweaks)
 uhd: moved header file implementation code into ipp files
 usrp2: Added a peek64 to read pairs of 32 bit numbers such as time64
 uhd: code tweaks, extra error condition for vrt unpack
 uhd: added clear capability to alignment buffer (fixes case when next seq is less than prev)
 uhd: added get time now call to simple and mimo usrp
 usrp2: bug fix for readback registers
 uhd: replaced old send and recv with inline wrappers that take a single buffer and look more like the vectored send/recv
 uhd: added mimo notes, misc spellcheck and tweaks
 mimo: added call to set time to zero at next pps on init
 uhd: filled in mimo usrp rx and tx methods
 uhd: filling in mimo usrp implementation, renamed get_name to get_pp_string for simple and mimo usrp
 usrp2: removed usrp2.hpp header, its not needed, just use the discovery/factory system
 usrp2: some cleanup and tweaks in io impl
 uhd: renamed the vrt header to vrt_if_packet header
 usrp2: moved calculations for max packet size and otw types into shared object between device and mboards
 usrp2: split mboard impl into its own class, usrp2 device can instantiate N mboard impls for mimo setup (works with 1 for now)
 uhd: vrt packet handler fix and tweaks
 uhd: forgot burst flags, tweaks to vrt info -> metadata
 uhd: work vectorizing the vrt packet handler, reworked vrt packet stuff, needs testing
 usrp2: increased transport buffer minimum size, and added warning
 Merge branch 'master' into ise12
 reload bit for vita rx ctrl
 Merge branch 'master' of ettus.sourcerepo.com:ettus/fpga into uhd_fpga_merge
 fix bug which caused serdes fifo to disappear
 uhd: added build notes for fedora 64 boost not found
 uhd: moron alert, used incorrect bounds in simd loop, the remainder loop was doing 3/4 the work
 uhd: convert types simd, unpack with zero constant for lower half
 uhd: moved convert routines into implementation header file (out of python gen file)
 uhd: implemented complex float <-> item32 conversion with sse2
 uhd: replaced single sample converters with vector converters
 uhd: removed hackery to set performance flags, use release mode.
 uhd: fix for windows warning, tweaks for msvc optimization flags
 uhd: reworked time_spec_t to be more flexible: arithmetic, comparison operators...
 uhd: created benchmark rx example app
 Merge branch 'master' of ettus.sourcerepo.com:ettus/fpga into uhd_fpga_merge
 uhd: tweaks to ic regs maps common generator code
 usrp-e: clock control constants to easily change dividers and counters, tweaks to ic reg maps common
 usrp-e: clock divider calculation fix
 usrp-e: added clock rate control to dboard iface and clock control impl
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp2: init clock rate shadows for dboard iface, uhd: pthread sched fix error condition check
 Merge branch 'burn_dbid' into pre_merge
 uhd: added checking for xcvr dbids, added unknown dboard rx and tx constructors (for bad dbids or combinations)
 uhd: added dboard manager call to register xcvr board, implemented in xcvr dboard code
 Merge branch 'master' into u2p
 usrp2: updated fpga build notes
 Merge branch 'uhd_fpga_merge' into pre_merge
 Merge branch 'i2c_resize' into pre_merge
 Merge branch 'master' into u1e
 Merge branch 'master' into ise12
 proper dependency tracking for the makefile
 usrp2 mb: replace hard coded constants with macros for rx offset
 usrp2: enlarged the i2c transaction size, rev-ed the firmware protocol number, added constants for packet sizes
 usrp2: code and comment tweak for aux dac call
 uhd: added enums for aux adc and dac, usrp2: implemented enums in db iface
 usrp-e: added verbose for bad poll and read values
 added ability to clear out fifos of tx and rx.
 usrp2: implemented dboard clock divider control in usrp2 clock control
 added set clock rate, and get clock rates to dboard iface, usrp2 needs clock ctrl implementation...
 uhd: check priority range
 uhd: working windows implementation of thread priority setting, added called to example apps
 uhd: work on thread priority scheduling
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 usrp-e: added type device address argument to usrp-e
 Merge branch 'master' of ettus.sourcerepo.com:ettus/fpga into uhd_master
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'sched'
 usrp2: added a type to the address args to filter based on type usrp2
 Merge branch 'sched' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 uhd: added ability to boost rt priority, added general app notes
 Add gitignore file.
 precompute udp checksums
 barely fails timing on gigE/10 and gigE/12, larger fail on udp/10, but all seem to work ok
 Merge branch 'work'
 Merge branch 'aux_dac'
 usrp2: dboard iface: switched to nested dictionary for dac regs
 usrp2: improved print-out for socket buffer sizing
 usrp-e: added poll(...) call before read(...) call
 fix type, it was supposed to be complex float
 file option for rx timed samples, misc fixes
 Merge branch 'master' into u1e_newbuild
 Merge branch 'master' into u2p
 new make works on ise12
 new core for u2p, based on u2_core
 build using new build system
 Merge branch 'master' into u2p
 work on algorithms and documentation
 Rename loopback of random length packets test program so we know it needs loopback fpga image. Needs debug.
 Exit on errors. Run until an error occurs. Alloq for up to 2 sequence number errors so program can start with "dirty" fpga contents.
 Update usrp_e.h file. Change programs to use struct element status instead of flags.
 Fixed USRP2 aux_dac numbering convention
 produces good bin files
 debug pins
 much bigger fifos
 left something out of the sensitivity list.
 proper overrun, underrun connections, debug pins.
 first attempt at cleaning up the build system
 installed mux setting and initing the duc and ddc
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'probe' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Moved mux calculations into dsp type1 utils.
 created uhd usrp probe
 actually generates an image
 Merge branch 'master' into u2p
 created capability for meta-registers
 usrp-e: switched otw type to little endian (works now)
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 fix for ad9862 regs map
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 fixed converter logic in convert types
 get rid of debug stuff to help timing
 move u2_core into u2_rev3 directory to simplify directory structure and save headaches
 extend byteswap routines for macosx, and added case for unknown
 float casts to remove msvc warnings
 ignores
 debug pins
 Merge branch 'wip' into work
 fix to ensure 32 bit swap is called on a 64 bit machine
 Merge branch 'master' into u2p
 Merge branch 'master' into u1e
 allow other clock rates in vita time
 Replaced convert types with generated convert types that handles more cases.
 usrp-e: working vrt recv, implemented dsp utils in usrp-e dsp
 report ise version in build
 proper name for directory
 name build directory with ISE version name
 Merge branch 'work' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Created a common usrp dsp utils to handle register word calculations.
 compiles now, added clock constraints
 Merge branch 'work' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Replaced the vrt pack and unpack with a pack and unpack for big endian and a pack and unpack for little endian.
 works, leds on front count up.
 skeleton files copied over from a dead branch
 Merge branch 'byteswap' into work
 added byteswap routine to utils
 remove double declaration
 use fifo19 not fifo18 in makefile
 added little endian capability for gpmc to fifo and fifo to gpmc, since ARM is LE.
 get rid of redundant fifo18, since we can just use fifo19 and ignore the occ bit
 recv giving me something, bad vrt headers though...
 moved dsp update logic into prop setter, added code to init dsp rates and freqs
 usrp2 regs naming convention
 usrp-e more implementation, rx timed samples runs w/o error (no workie though)
 implemented dsp and rx control
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 prefixed helper classes with usrp_e to avoid collision
 move get clock rate into clock control
 also use an mtu size recv buffer for the control packet recv
 Prepend usrp2 onto the helper classes in usrp2 impl to avoid symbol conflicts.
 recv discovery packets with max size buffer (we dont know what to expect)
 io impl tweaks, renamed clock control and codec control implementation to avoid collision with usrp2 (those need to be renamed as well)
 work on io impl for usrp-e using read/write
 added headers to cmakelists for completeness
 Phil wants gpio #145
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Created macros for dealing with pimpls and implemented in code.
 replaced the assert falses with an invalid code path exception
 use smart pointer for io impl, simplify send buffer callback
 disable boost thread interrupt when doing pop with timed wait, fixed error on exit
 removed some windows warnings
 use select for socket timeout, works windows and linux
 Merge branch 'refactor_db'
 use polling for socket recv, timeout socket option not portable
 use same version as usrp2-udp, so regs are same place in memory map
 Merge branch 'ise12_exp' into u1e
 added sr registers to u1e
 connect the rx run lines so it doesn't get optimized out
 use DDR regs instead of a 2nd clock
 Implemented pirate thread, moved io impl details into io impl cpp file. Fixed bug in bounded buffer push with pop on full.
 Updated documentation
 Refactor WBX and RFX to use conventions more like XCVR
 assign addresses for the settings regs
 vita49 tx and rx added in, all sample rates now at main system clock rate.
 Merge branch 'buffer' of ettus.sourcerepo.com:ettus/uhdpriv into buffer
 Moved the packet handler state stuff into a separate header (so we dont pull in all the includes). Use callback for getting buffers rather than zc interface pointer so its more modular.
 zero out debug pins.  helps timing a little bit.
 added frame count call to zero-copy iface, tweaks for udp asio impl
 Merge branch 'new_ramloader' into nocache_plus_newramloader, plus manual merge into udp version.
 work on alignment buffer, got unit test working
 work on bounded and alignment buffer with unit testing
 work on buffers for recv
 Made a phony zero-copy interface for those interfaces that are actual copy-interfaces.
 Merge branch 'master_nocache' into master_nocache_post_merge
 fix for msvc warning
 fix: wrong size for buffer in recv
 reverted usrp-e-led sorry
 non-udp uses a different address for the tx dsp core
 manual merge to use localparams from udp version
 from UDP branch, changed names because I want these separate from the non-udp versions
 ignore output files
 new files from udp branch added to main Makefile
 Merge branch 'udp' into master_merge_take2
 Merge branch 'udp' into u1e_merge_with_udp
 Merge branch 'master' into u1e_merge_with_master
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Tweak with the udp and zero-copy transport. Eventually, the caller will hang onto a ring of managed buffers.
 change the debug pins, which makes it more reliable.  This is unnerving.
 experimental mods to make ram loader fully synchronous.  Based on IJB's work
 Added support to set GPIO pins from dboard interface:
 Added timeout error message to timed samples example. Added try catch to recv helper because vrt unpack can throw.
 fixes from IJB from 5/24.  Basically connect unconnected wires.
 fix for time64 register write order
 test full width packets
 Divide by 4 to convert byts/sec to samples/sec. Multiply by 4 is right out.
 mac os x card burner support and documentation notes
 fifo36_to_ll8 and fifo pacer need a real fifo between them or they deadlock (by design)
 fix double declaration
 clean up parsing of dd.exe --list for windows usrp2 card burner
 Work on crc testing program. Currently dumps first received packet to the screen. Started to reduce teh number of warnings.
 OK, now crc uses the timed interface to set the data rate.
 use only procfs /proc/partitions for discovering raw devices on linux
 send bigger packets to reduce cpu load
 some wbx series notes
 split the card burner into two python apps, one command line app with implementation, and the other a gui only app, updated docs as well
 removes the icache and pipelines the reads
 Rename loopback test program to match bin file name.
 Enable realtime scheduling in loopback test to prevent overruns.
 put over/underrun on debug bus, remove high order address bits
 Merge branch 'u1e' of ettus.sourcerepo.com:ettus/fpgapriv into u1e
 combined timed and crc cases.  fifo pacer produces/consumes at a fixed rate
 better test program for just the tx side
 fix typo, no functionality difference
 Merge branch 'work'
 rfx dboard code minor refactor to look more like xcvr2450 code
 Display data rate in samples/second and fix typo.
 Calculate received sample rate for loopback test.
 Use better optimization settings.
 Fixed some bugs in the send and recv full buffer modes.
 break recv loop on timeout
 dont default the mode parameter, that is only asking for trouble
 Fix initialization bug.
 Rename test program to match FPGA bin file name and add data rate calculation.
 Keep repo in sync with my churn ...
 init values in dboards to remove gcc warnings
 Merge branch 'udp' of git@ettus.sourcerepo.com:ettus/fpga into work
 tweaks to remove warning is msvc
 Merge branch 'work'
 clock bypass divider fixes, forgot to move this part into the host
 Merge branch 'master' into udp
 get rid of some warnings by declaring setting reg width
 Added tx timed samples example. Added called to device to get max samples per packet. Removed device props that gave max samples per packet.
 added width parameter to avoid warnings (thanks IJB) and default value parameter
 Added send and recv modes to the device class and packet handler implementation.
 added pragmas suggested by Ian Buckley to help ISE12 synthesis
 get rid of old CVS linkage
 Comment out progress indicators.
 Revert "Revert "Update test program to reflect what is in the FPGA image.""
 burn sd card fix, units for seek and skip in blocks not bytes
 Remove rand for now. Fix bug in data rate calculation.
 Revert "Update test program to reflect what is in the FPGA image."
 ignores
 use static init lists for the types, some speedup for the fast path related ones, other changes are pointless
 Created config macro to force inline.
 better debug pins
 Created inline send vrt packer function that also handles fragmentation.
 work on generic packet handler (got rx working)
 automatic resize for small udp buffers
 windows fix for setsockopt
 simplification of udp asio socket stuff
 calculate max samples per packet using otw type
 settings bus to dsp_clk now uses clock crossing fifo
 added set freq with lo offset to simple usrp wrapper
 card burner notes
 Update test program to reflect what is in the FPGA image.
 memcpy data when in custom io type
 fix to ad9777 dac control
 got clock gen config working and tested
 Connect enable to the correct gpio.
 Merge branch 'master' into udp, removes u2_rev1, rev2
 card burner: added --list option, added warning, added sync on linux
 remove files for old prototypes, they were confusing people
 revert commit 9899b81f920 which should have improved timing but didn't
 Change to 24 bit transfers.
 work on usrp2 card burner, uses blockdev and /proc/paritions to check for devices, windows tweaks as well
 Print a . for every packet received.
 notes on usrp2 card burner
 Added card burner python app with gui and windows support.
 moved fifos into gpmc_async, reorganized top level a bit, added in crc packet gen and test
 add missing signal from sensitivity list
 Merge branch 'master' into u1e
 packet generator and verifier, to test gpmc and other data transfer stuff
 move dsp settings regs to reclocked setting bus.  Works, gets us to within 18ps of passing timing
 Add calculation for data trasnfer rates.
 reverting logic clean up which should have made timing better, but made it worse instead
 Moved usrp2 eeprom addr read/write to host control over i2c/eeprom interface calls. No longer part of the dude/bro protocol.
 Merge branch 'master' into udp
 remove port which is no longer there
 cleaned up the logic, this is copied over from quad radio
 allow settings bus to cross to a new clock domain, should help timing, but not attached yet
 Add program to do initial configuration of the clkgen chip.
 Added a place for serdes control on the host.
 Moved adc and dac control into codec control source file. The codec control powers down the chips on destruction.
 switched passthru of cgen_sen_b to gpio127, made a note of it.  No more safe_u1e necessary.
 Merge branch 'shrinkfw' into usrp2
 added save state for ic regs map common
 Merge branch 'udp' of git@ettus.sourcerepo.com:ettus/fpgapriv
 proper signal level for 24 bit data
 ad9862 transmit working
 moved open/close into iface, work on codec tx
 filled in dboard interface with codec and clock control
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Update usrp_e.h file from kernel header.
 First pass at data transfer program that uses CRC.
 Print an error and exit if open fails for some programs.
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 fix for first seqno on rx, init the variable
 SPI passthru for programming clock gen chip on brand new boards
 work on codec control, writing aux dacs, read aux adc
 moved usrp_e specific build stuff into its own cmake file
 Merge branch 'master' of ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 moved uhd lib cmake contents into respective subdirectories
 fixed exception case
 Removed the boost exception stuff, replaced it with macro that formats the throw site information.
 code tweaks to get wbx compiling with master
 Merge branch 'wbx' of git@ettus.sourcerepo.com:ettus/uhdpriv
 Inverted logic in halfband selection
 Fixed unguarded debug message
 added hb filter calculation on usrp2 dsp impl
 added DAC output pins, and a sine wave generator to test them
 First working RX/TX WBX in UHD
 Merge branch 'u1e' of ettus.sourcerepo.com:ettus/fpgapriv into u1e
 add timing constraints.  Just have main clock signal at 64 MHz for now.
 Fixed SPI register length
 changed comment
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 fix files before pull
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Remove workaround for driver hang.
 created codec control for ad9862, wip
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 notes about ping and firewall
 added icmp echo reply to usrp2
 Fixed casts in set_freq and attenuator bit mask
 Spi data returned in struct now.
 Update path to put module in.
 have_space and have_packet now stay high even while busy, as long as there really is more data/space.  This should allow bursting without having additional interrupts.
 windows tweaks to config
 minor fix to pass dboard ctor args with correct dbids
 Merge branch 'work' of git@ettus.sourcerepo.com:ettus/uhdpriv
 minor regs fix
 First pass WBX code, it compiles
 Add hack to work around driver race.
 Add a hack to work around a driver race. Remove when teh driver is fixed.
 spi working, talked to ad9522
 Expanded the dboard id API to create dboard id types from strings and ints. And created utility functions to go between representations. Created to_pp_string for pretty print strings for dboard ids and device addrs. Minor changes to the various classes that call these utilities.
 Replaced the dboard base constructor args with an opaque type.
 Cleaned up some dboard manager construction logic. Moved the dboard base private stuff into a forward declaration.
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Change overrun indication. New progress indicator. Turn on RT scheduler for user space.
 Update IP address for my home desktop. Change module version to 2.6.33.
 Code tweaks and added unit test for dict and error message.
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 added enums to register map
 Merge branch 'socket' of git@ettus.sourcerepo.com:ettus/uhdpriv
 made buffer size args part of constructor
 Merge branch 'reg_maps'
 Merge branch 'env' of git@ettus.sourcerepo.com:ettus/uhdpriv
 added ad9522 reg map, minor fixes
 Moved a bunch of register map code into common.
 added reg map for ad9862
 use boost program options for env variables
 work on clock control init, added dummy spi slaves: must fix
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Add script to setup board id info in eeprom.
 Moved some misc setting registers into host.
 removed some unused things like gpio from microblaze code
 separate timed tx and rx instead of loopback
 Added reload flag to the stream cmd.
 Various updates to test programs.
 setting size of buffers from device args
 work on controlling the socket buffer sizes from the front end api
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 moved i2c into usrp-e interface, used by dboard interface and eeprom
 usrp-e branch compiling with recent master pulled in
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 Add program to exercise interface using internal fpga data source and data sink.
 Send only required number of bytes. Do it for longer.
 added to the time spec documentation
 fixed windows warnings
 added simple usrp api to read rssi and get LO lock status
 Added first wbx dboard code
 First pass register map complete
 send bus error to debug pins
 Added RSSI readback to XCVR2450.
 Merge branch 'corgan_fixes' into udp_corgan
 Renamed the prop set/get error macros so they make sense for not-implemented properties.
 added lock detect status to dboards
 prefixed the ASSERT_THROW macro with UHD for the sake of namespace
 Merge branch 'eeprom' of git@ettus.sourcerepo.com:ettus/uhdpriv
 Got eeprom read/write dboard ids working.
 Added i2c interface to serial.hpp, using in usrp2_iface for i2c and eeprom.
 renamed the firmware main image to txrx_uhd.bin
 Work on exceptions.
 Pass previously unused GPIOs to debug pins to help debug interrupts
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 removed boost exception stuff that makes it incompadible with 1.36, remember this diff
 added dboard id burner app
 set dboard eeprom from dboard properties
 Moved reading the eeprom (dboard ids) onto the host.
 Only allow new packets if we can fit the largest possible packet (2KB)
 Merge branch 'xcvr' of git@ettus.sourcerepo.com:ettus/uhdpriv
 XCVR seems to be working, fixed the spi reset routine.
 whoops, copied wrong license
 XCVR tweaks, working in highband and lowband.
 Register outputs to omap to prevent runt pulses from falsely triggering interrupts
 Updates to test programs.
 xcvr tweaks and fixes, needs real testing
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into xcvr
 filled in xcvr tuning, set gain, spi reset
 added regs for max2829
 toggle led a for continuous streaming
 pulled in some dboard docs and fixes
 added dboard app notes
 Update transfer test program to use usrp_transfer_frame struct.
 work on atr registers and filling in functions
 Added protocol version number to usrp2 common header and data struct.
 xcvr work, skeleton layout
 Add register definitions for new transfer scheme.
 Merge branch 'win' of git@ettus.sourcerepo.com:ettus/uhdpriv into work
 added coding docs
 windows warning fix
 Created args string contructor for device address. Using the args string for the find devices app. Added documentation to simple usrp.
 find time_64bit
 Add program to setup debug pins. Add script to reload fpga and module.
 Initialize data array to help show when reads fail. Report return value from ioctl
 usrp-e-spi: change active edges around.
 usrp-e-i2c always uses hex arguments.
 Always put new bin file in /home/root.
 Fix silly typo in script.
 Fix script to write board id eeprom.
 Add scripts to read and write board id info into usrp e id eeprom
 added comments to cmakelists, makedir in file generation script so python doesnt have to
 documentation notes in readme
 pulled aux dac and adc support from microblaze, its in the host now
 added support for aux dac and adc control in host
 Merge branch 'docs' into work
 added some documentation and links to the index
 added usrp2 networking notes, tweaked style and build
 Created a docs directory to house restructured text documentation.
 moved come common register generation code into common.py
 moved spi and i2c api into serial.hpp, its used for more than the dboard interfacing
 updated readme
 added automatic ref source enum
 forgot an include
 RFX seems to be tuning. Added some code to dsp to check for valid range.
 pulled in master and got usrp-e code compiling
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhdpriv into usrp_e
 added pps and time capability
 access frame length regs from wishbone
 async seems to work with packet lengths now.  Still need to do wishbone regs for gpmc
 async gpmc progress
 change time parameters because Xilinx IP has a 1ps timescale
 add bus error reporting
 correct name of module
 work on rfx registers
 progress on synchronous gpmc, but it may not be possible due to the limited number of clock edges
 synchronous and asynchronous gpmc models
 handle all tri-state in the top level of gpmc
 Merge branch 'udp'
 moved usrp1 and usrp2 fpga dirs into fpga subdirectory
 more sync progress.  This is just a skeleton for now, with junk content
 work on tuning rfx tx and rx LOs
 more progress on synchronous interface
 renamed to async.  Will be building a sync version for GPMC_CLK
 make timing diagrams for bus transactions.  Still need to do reads
 added in a loopback fifo
 probably won't be using this, and it hasn't been tested
 removed some windows warnings
 Added gain control to rfx. Switched string constants to caps (gains, antennas, subdevs). Made dboard interface for aux dac and adc use volts.
 work on atr bits in rfx board
 removed clock rate prop, we dont need to expose that since ticks are in nsecs
 renamed dxc to dsp for tune result
 renamed dboard interface to dboard iface, the lengthy name was getting to be a burden
 work on rfx atr regs
 Created a usrp2 interface class with the control, spi, peek/poke functionality. Its used in all the implementation level code
 minor changes to get it to synthesize
 added adc and dac clock enables
 removed unused firmware code
 Moved ad9777 control 100% on to the host
 added ad9777 register map
 added more clock config, takes care of external reference
 Moved clock control into abstraction clock control class.
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into usrp2
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd
 added reqs and build instructions to readme
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhd into usrp_e
 Fix typo.
 Merge branch 'master' into usrp_e
 merge reverse diff
 forgot dangling file
 controlling dboard clock enables from host
 lengthened delay between cycles, added more transactions on the data bus
 replaced ram interface with a fifo interface.  still need to do rx side
 split out gpmc to wishbone interface to make gpmc top level cleaner
 reg map for ad9510
 merged unit type and gpio bank for dboard interface into one type, expanded dboard clock config api
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into usrp2
 moved spi transact to usrp2 impl, and removed spi read
 removed dummy placeholder
 Merge branch 'rfx' of git@ettus.sourcerepo.com:ettus/uhd into io
 store the mtu and hdr len stuff only in the usrp2 impl
 Added data type conversion routines to transport api.
 Created zero copy interface/framework, made use of it in usrp2 udp transport stuff.
 Merge branch 'master' into usrp_e
 put the dummy package back in
 moved regs generator to ic reg maps folder, others will go there as well
 Test program to verify GPIO on daughterboards. For success, connect gpios on TX to corresponding ones on RX.
 generate the register file, added lib include dir
 added python+cheetah build requirement, generating vrt.cpp
 converted timespec to use nanoseconds for fractional part
 Reworked the spi part of the dboard interface.
 added code for adf4360 chip
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into rfx
 GPIO tested working on usrp.
 handle tx fragment eob flag case
 renamed dict get key and value methods
 some doxygen fixes after merge
 Merge branch 'rework' of git@ettus.sourcerepo.com:ettus/uhd
 simplified the usage of dboard, dsp, and mboard proxies.
 paradigm shift for the dsp abstraction
 added 16 bit peek and poke, 16 bit register defs for gpios and atrs
 Added doxygen support.
 extended stream cmd with mode enum, and extended fragment flags in metadata
 Attempt to make scripts run inside and outside GHQ.
 Add program to read from serial port and print to screen. (works)
 Add ability to change uart baud rate. (works)
 Yes, I am an idiot.
 some work on rfx board code
 Update to use register definitions from header file.
 Don't need to use malloc to get the correct sized struct anymore.
 env path separator for windows
 Convert to use register include file. Fix peek/poke16 program. Add program to cycle through LED's and test buttons. Only pushbuttons tested at the moment.
 Handle 32 bit data to spi controller.
 windows fix, forgot boost namespace for stdint
 added 16-bit wide atr controller settings_bus_16 now handles variable address window sizes split ctrl of nsgpio into ctrl (selector) and debug bits
 hardcoded values for enum props, added clock get/set for simple usrp
 Moved usrp specific things into usrp directories and namespaces.
 moved props into usrp and multiple hpp files
 use defined constants for the register addresses
 added peek and poke, using in dboard interface
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into usrp_e
 Merge branch 'usrp_e' of ettus.sourcerepo.com:ettus/uhd into usrp_e
 preliminary registers definition
 Allow variable length spi messages.
 Spi word length is in bits, not bytes.
 Merge branch 'usrp_e' of git@ettus.sourcerepo.com:ettus/uhd into usrp_e
 added spi slaves to regs, use std copy for buffs
 Moved dsp (rx and tx), time config, and clock config (mostly) into the host.
 Refactor ATR part of dboard interface (and some constants).
 removed masks for ddr and gpio write in dboard interface
 use find to discover devices
 Added io type and otw type for describing types.
 filled in some gpio handling code, some mboard impl, added usrp_e_regs (like memory map)
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into usrp_e
 tweak usrp-e cmake config
 compiling with master merge, renamed usrp1e to usrp_e
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into usrp_e
 Update config to all eight clock buffers to be used.
 Added timing constraint for Wishbone clock/dsp_clock skew
 unit test for device addr
 Added utility methods to device addr and mac addr to make them more usable.
 use bb_rate and if_rate to handle dxc io rates
 Minor fixes.
 Added tune helper to utils.
 added some msvc notes, fixed line endings
 minor fix to wax test to get unit testing working on windows, added missing config include to static.hpp to compile under windows
 refactored types.hpp into types directory
 16 bit wide spi core
 Split utils.hpp into subdir with multiple files.
 tweak the ifaddrs address discovery
 get interface addresses on windows
 connect up the 16 bit spi core
 library loading on windows, status message tweaks, warning tweaks
 made python app to generate vrt jump tables, seems to run faster...
 remove timescale junk
 removed that fw sets seq stuff, not applicable
 insert correct control word and vrt len into the buffer
 Working version.
 Merge branch 'addrs' of git@ettus.sourcerepo.com:ettus/uhd into timing
 added interface address discovery
 connect 2 clock gen controls and 3 status pins to the wishbone so they can be read/controlled from SW
 Add test program to send characters to the wishbone uart.
 Merge branch 'udp' into u1e
 Overhaullllllled the way we do streaming. There is an odd bug where a zero length command (now, no chain) used to stop the streaming. Now it seems to do the reverse... must investigate.
 Merge branch 'master' into udp
 connected spi pins, but the spi core still needs to be redone for 16 bit interfaces
 moved fifos around, now easier to see where they are and how big
 Update read/write test program to new header name and add to Makefile.
 Merge branch 'mbdebug' of git@ettus.sourcerepo.com:ettus/uhd into timing
 Updates for header file change from usrp1_e.h to usrp_e.h.
 mess with that usrp2 io loop unroll, also py app gets installed executable
 added easy way to compile firmware for debug mode
 bigger fifo on UDP TX path, to possibly fix overruns on decim=4
 Xilinx ISE is incorrectly parsing the verilog case statement, this is a workaround
 Makefile and usrp-e-spi edits, add i2c test program.
 Merge branch 'u1e_uhd' of git@ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 Merge branch 'u1e_uhd' of git@ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 Update usrp1_e.h header file to match kernel driver.
 Start applying order through Makefile.
 Start renaming stuff in line with product name USRP Embedded.
 Reorganized apps dir into utils and examples dir. The files get installed into the pkg data directory.
 Added example app to receive timed samples. Added useful calls to simple device. Fixed vrt frac time usage (wrong word).
 pps and vita time debug pins
 ignore emacs backup files
 Commit random test code.
 Merge branch 'u1e_uhd' of git@ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 merged usrp2 stuff from u1e branch (without merging the u1e stuff)
 massaged some of the dboard calls
 bit of io work
 filled in more skeleton code, filled in dboard interface spi and i2c with ioctls, added file descriptor opening, and checking for usrp1 kernel header
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 Added ability to load modules at runtime (specified by environment variable path). Added a demo test module as well.
 Moved typedefs from props.hpp into new file types.hpp. Created structs to replace range tuples, and clock config struct. Merged clock config props into one property using config struct. Added templated dict construction to use the assign::map_list_of. Added gcc flag to set visibility to hidden and use the api macro.
 added install path for dll, fixed idiotic msvc error where making a vector with proxies crashes the app, seems to be ok with the sptr fix, in other good news, discover usrps works in my vm for the usrp2
 compiling under msvc (no idea if it works)
 created config.hpp to handle export macros, added exports to public api stuff
 fixed linking and warnings on msvs
 added usrp1e implementation skeleton, began filling it in...
 define namespace hack when in c compiling
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 got uhd almost compiling in windowze. figured out special flags. also had to use boost stdint because its missing in visual c++, added a bunch of numeric casts to reduce warnings
 changes to get tuning working
 added more help and verbose on recovery app
 Added recovery app to use raw socket to burn known ip addr. Fixed up fw so the device can reply after new addrs are set.
 reimplemented dict to preserve order of insertion
 Added ability to set the subdevices in use for rx and tx dboards. This is used to calculate and set the ddc and duc muxes. Also, minor fix for burning addrs (wrong pointer....)
 Replaced uses of wax:cast with the templated as method (like in boost program options).
 Ability to burn mac addr and ip addr to usrp2 (over ip/udp for now). Added firmware support and usrp2 burner host app.
 Device sub classes can register themselves. Simplifies device.cpp internals. Added static instance macro for lazy instantiation of static variables.
 Merge branch 'u1e_uhd' of git@ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 handle getting and setting mac and ip addr from the host
 Removed freq min and max and gain min, max, and step... replaced it with gain and freq range tuples. This simplifies the api calls and subdev properties.
 Cleaned up the gain handler (thing that gets and sets wildcard gains) and made use of it in the dboard manager so it intercepts the sets and gets. While doing this, fixed something with nested links in wax obj. Added some useful macros and templates to the utils.
 Filled in dboard code for basics and lf type boards. The dboard is now just a uint16 (dont bother with the enums). The dboard manager now registers subdevs with a name. The basic board code uses a static block to register itself.
 more debug for fixing E's
 better debug pins for going after cascading E's
 Added simple device to handle wrapping general properties up into simple api. Added setting time capability to the usrp2 impl. Messing with props and time specs...
 copy in wrong place
 Merge commit 'upstream/master'
 Merge branch 'u1e_uhd' of ettus.sourcerepo.com:ettus/uhd into u1e_uhd
 proper flags bits
 Moved timeouts into the udp transports. Simplified the fast path checking in the fw, but it turns out this was not the issue. Fixed some bad bit operations with the 16sc words (dont forget sign extension). Added some more documentation to the headers....
 Some tweaks and changes to io impl that fix segfaults. Seems to work now!
 Split metadata into rx and tx specific metadata. The rx metadata has fragment flags and the tx metatdata has burst flags. Made the io impl for usrp2 rx routine fill in the rx metatdata fragment flag. Added device documentation for send and recv in regards to fragmentation.
 memcpy size fix, change to some send logic
 Making use of vrt lib in the usrp2 io_impl. Added a packet size param to the vrt pack and unpack.
 Added a vrt library to pack and unpack from metadata. Added a vrt test app that packs and unpacks the data.
 Expanded the UDP api: We can make simple udp transports for discovery and control. We can support a udp zero copy transport (currently just asio). Reworked the io_impl for usrp2 to work with the zero copy api. So far, all of this untested other than compiling. A cut-down vrt library is in the works to simplify the io impl.
 The net common is too slow in usrp2 firmware to figure out if its vrt data. Added a custom function to tell if a packet is vrt data, seems to be feeding fast enough at this rate... Fixed some buffer size calculation logic.
 Send the number of samples per datagram over the control. Worked on the io impl for usrp2 (added loop unrolls and 32 bit buffers). Added some vrt rx constants to the fw common used by host and fw. Removed the MTU prop and added a general device prop for num samples.
 Recv noise with uhd.
 fix for io types
 removed empty uhd.hpp and cpp files
 made app to load usrp1e fpga images, and tested it to be working
 debug pins
 enable was on the wrong address pin, needs to be the highest order one
 invert the pushbuttons since they are active low
 gpmc debug pins
 point to the new files
 fix syntax error which icarus allowed (filed a bug with them)
 loopback and test
 corrected logic
 edge sync on done signals so we only fill/empty one buffer
 Switched xilinx primitives because they order the bits funny in the other one
 Created empty usrp1e cpp file for the case when headers are not found. Worked on the device make and discovery to fix certain problems. Added node param to discover usrps for usrp1e, made addr optional.
 ISE chokes on the pure verilog version so we use the macro
 First cut at passing data buffers around on GPMC bus
 use a single addr param for the usrp2
 added usrp1e fpga loader
 added usrp1e conditional compilation, and checking of device node (aka file for now)
 Merge branch 'master' into u1e_uhd
 Cut debug bus connection to etherenet MAC to make closing timing easier
 Merge branch 'master' into u1e
 proper initialization of the ram
 first cut at making a bidirectional 2 port ram for the gpmc data interface
 Commit wip. Programs that fetch OS code sync now.
 vrt packet count fix
 Put fast path code (rx setup) back into txrx.c. Store the fast path addrs in the udp data handler.
 use our fancy new debug ports
 Added IF data io handing within the usrp2 impl. It packs and unpacks vrt headers/metadata. NOT YET TESTED IN ANY WAY...
 Remove some warnings in dsp_core_rx
 Fix missing item on sensitivity list
 Change bit width of CORDIC constants to remove meaningless warning
 Manually assign clk_fpga to BUFG to improve timing
 Work on the io interface for a device (and some implementation work in usrp2). Modified the udp transport to reflect some of these changes. Got the fw compiling again, and it will not set data to true for small payloads (configuration ones).
 full neame
 first cut at automatically setting the debug pins
 Initial checkin of useful shell scripts.
 Initial checkin of u1e testing code. Some of these may not be really useful anymore.
 place to put omap tools
 settings bus with 16 bit wishbone interface, put on the main wishbone in u1e
 added set nice gpio pins to manager on init and deconstruct
 remove the #1 delay in all the regs.  They just slow down sims.
 Modified nsgpio.v to support 16 bit little endian bus interface.
 GPIOs now on the wishbone interface
 Moved the udp implementation guts into the cpp file
 Made implementation class for the dboard manager.
 Made the usrp2 impl into a device. Removed the usrp device wrapper and usrp2 cpp file outside of the usrp2 lib dir. Also removed the mboard base files since we wont be needing them.
 Moved lib and include contents of dboard and mboard one directory up and prefixed them with dboard_ and mboard_. And yes, the code is compiling.
 DDC enable with stream at control OTW
 DUC and DDC control packets OTW
 added support for the duc (no control yet though)
 added gpio control to the wishbone
 Added I2C, UART, debug pins, misc wishbone stuff
 allow default uart clock divider
 Fixed paths to help icarus find opencores and xilinx models.  Added Xilinx global set and reset module.
 Added special case for empty dboard slot (none id 0xffff) Added error handling in the dboard base classes for mishandling the none id. Added better to string function for the dboard ids. Added get methods for dboard classes to get their ids.
 Flattened the usrp2 impl properties guts. Created init methods for various sub-parts. Added the ddc control (still needs update transaction).
 Added control for usrp2 aux dac and adc control.
 Added i2c control transactions in fw and host
 Worked out spi api for the dboard interface. Created usrp2 spi transaction control on host and fw
 speed up the presentation of registered wb data to the gpmc
 moved host code into host directory for clean (unambiguous) top level
 wishbone bridge now with minimal functionality.  Need to check timing and handle wait states.
 Added control code in the txrx.c and dboard interface for usrp2 to handle gpio and atr
 first cut at gpmc <-> wb bridge, split u1e into core, top, and tb
 Setting the clock config over control
 Moved the usrp2 implementation files into a usrp2 dir within mboard. Filled in many of the properties for the mboard (including clock config).
 copied over from safe_u1e
 block ram interface to GPMC
 Restored microblaze build (accidentally removed makefile ams and gitignores when doing cmake for host)
 Created dboard wrapper in the usrp2 impl
 Added usrp2 impl for the guts of the usrp2 handling. The top level usrp2 will contain an impl and forward calls to it.
 added uninstall target
 basic read support for the GPMC, responds with 16'hBEEF
 CMake does not have convenience libraries like automake. Removed the nested lib CMakeLists.txt in favor of a single top level lib/CMakeLists.txt for building the shared library.
 Removed Autotools stuff and the git ignore files. Feeding cpack a readme and license file. Added readme contents.
 Added CMakeLists.txt for the include dir. Setting up the pkg config file through cmake. Added stuff to cmake to add optional flags.
 Created CMakeLists.txt for a CMake build. Only created the files for building, install part missing.
 reorg pin defs
 connect GPMC pins to debug bus
 Compiling under old fedora8 with boost 1.37. Fixed somethings that caused errors and warnings. Cannot get rid of all warnings on this system.
 Reading the dboard ids from the usrp2.
 Made use of templated dict to replace used of map and to get rid of utility call.
 Added a templated dictionary class because its more useful than map. Made the device addrs into a string:string dict. If its all strings we dont have to change the top level caller for new product. Created shared_iovec class to manage memory for device recvs. Work on the bro/dude control protocol for usrp2.
 Getting hello packets from the usrp2 with ip and mac addrs. Cleaned up the mb build system a bit.
 removed unwanted/broken files
 net_common working in this state with control udp packets
 removed dboard files
 Copied a snapshot of the usrp2 firmware into the microblaze firmware directory in the uhd repo. Added erllc copyrights to the files created and modified at erllc.
 organized the pins in the ucf by function
 builds a successful led blinker
 first cut at blinking leds
 skeletons that don't work yet
 added transport directory and udp transport
 renamed usrp_uhd to uhd
 work on link and proxy args
 ignore emacs cruft
 copied over from quad radio
 Made get_link the only way to create nested props. Removed the obj::ptr and sptr typedefs. The dboard manager now must store not the subdevs, but their proxies.
 comments
 Work on the properties framwork with wax::obj. Now the obj handles all 3 things in 1, properties, polymorphic container, proxy.
 Minimal framework in place to handle udp discovery. Added usrp2 stuff, udp wrapper, discovery function. Added app called discover usrps (usrp2 only for now).
 added gpl license v3
 added utility convenience tune function (wip)
 Added dboard id enum. Moved timespec into its own header.
 Added gain handler class to manage wildcard gain settings. Gets overall gains and sets overall gains when used. Wild card gain will be a gain with an empty string name.
 Added boost system (needed with asio) and date time (will need for threading/sleeping). Added to dboard interface to get clock rates. Added OTHERS properties and some documentation type notes. Added more TODOs to the utils.
 Switched from indexed properties to named properties. Added some new properties for getting a list of antenna names, pps sources, ref sources...
 Various tweaks, switched to boost unit testing.
 Merge commit '8d19387a8642caf74179bdcb7eddf1936f473e53' into udp
 just debug pin changes
 typo caused the tx udp chain to be disconnected
 moved into subdir
 Merge branch 'usrp1' into usrp2
 Moved usrp2 fpga files into usrp2 subdir.
 Moved usrp1 fpga files into usrp1 subdir.
 Added more to the mboard test and the usrp device.
 Added a usrp device abstration that creates usrp mboards. Added a usrp mboard named test, its empty for now.
 speed up timing by ignoring the too_early error.  We'll need to FIXME this later
 Added set time and set time at next pps. Removed the old sync pps commands, they dont make sense to use anymore.
 moved around regs, added a bit to allow for alternate PPS source
 remove time_sync and master_timer.
 allow setting time immediately in cases where there is no external pps input
 allow processor to read back vrt time over readback mux
 proper time sync to pps
 should fix the endless packet bug
 Created device interface for discovery, access, configuration...
 Integrated cppunit into the build system. Added new test for the usrp dboard stuff.
 Dboard base class that is no longer also the xcvr. The xcvr base inherits from this (as does rx and tx base).
 yet another typo
 yet more debug lines
 typo
 add debug pins to find the problem with lost eof in the udp core
 Switched dboard ctor arguments with a tuple. Sub-classes only need to pass the single argument, makes implementation cleaner.
 try a width that works...
 try proper reset
 forgot to declare wire
 debug state
 empty file, it is actually located in the control directory
 make it match the 36 bit wide version
 Added strict compiler flags. Made changes to meet compilation. Added test to verify ip and mac addr code.
 Added the basic rx and tx skeleton wrapper. Made autotools mods so it passes distcheck.
 Added base classes for the usrp dboards to inherit. Added a manager class for the subdevs that will create devices, and give out proxies to handle them.
 added interface for usrp dboards to communicate to mboards
 Reorganized structure into include, lib, test, firmware, fpga. The fpga and firmware are empty placeholders for now.
 Created subcomponent for usrp dboards. Only populated the interface though.
 removed test file
 Merge branch 'master' of git@ettus.sourcerepo.com:ettus/uhd
 Added stuff for usrp addresses, wax framework, build structure.
 empty commit
 skeleton autotools system for uhd
 better debug pins
 more typo fixes.
 typo fix
 actually connect the ports -- why this isn't flagged as an error I'll never know
 place udp core in the memory space
 Merge branch 'wip/usrp2' of http://gnuradio.org/git/matt into wip/usrp2
 Merge branch 'udp' of http://gnuradio.org/git/matt into wip/usrp2
 proper time sync to pps
 never should have checked in this generated binary file
 barebones udp support.  Compiles, but untested.
 19-bit fifo handling for receive side of eth/udp system
 19 bit wide interface in prep for connection to UDP/IP state machines.
 cleaned up the main ibs state machine
 dsp_core_tx now has setting reg base settable from u2_core.  underrun bug in vrt fixed
 changed debug pins to see incoming data
 reorder the memory map
 put new setting reg into the address space in the right place
 only pull from input fifo when really consuming or pushing into the next fifo
 Add ability to clear state out when there is an underrun
 fixed typo in u2_core.v resulting in unconnected net.  added debug pins
 ignore save files
 First cut at vita tx, whole thing compiles
 flag packets which arrive way too early so the device doesn't sit there forever.
 very basic packet sending works
 seems to correctly deframe packets.  now need to consume them.
 progress on vita_tx.  it compiles now, need to work on vita_tx_control.
 make the testbench work in this environment, without the crossclock settings bus
 be a little more PC about it
 mostly just copied over from the rx side.  Still needs a lot of work.
 forgot to declare wires
 moved regs around for vita49
 vita rx instead of rx_control.  Ready for firmware testing.  Misses timing by a little bit, will worry later.
 put 64 bit timer for vita49 on the settings bus
 VITA49 rx (and tx skeleton) copied over from quad radio
 This branch is for porting from the quad radio, and minor text cleanups
 earliest beta files renamed to avoid confusion
 Properly reset the fifos.  We didn't connect before.
 Merge branch 'new_eth' of http://gnuradio.org/git/matt into master
 Fix warnings, mostly from implicitly defined wires or unspecified widths
 fullchip sim now compiles again, after moving eth and models over to new simple_gemac
 remove unused opencores
 Merge branch 'new_wb_intercon' into new_eth
 no idea where this came from, it shouldn't be here
 Copied wb_1master back from quad radio
 Enable pps interrupts.  Not sure why they were disabled in the first place.
 Merge commit 'origin' into new_eth
 Synchronize the internal phase of the halfband filters to the start of the "run" signal.  This is important for MIMO.  Bug reported by Christoph Hein and Hanwen .
 Merge branch 'serdes_newfifo' into new_eth
 Remove old mac.  Good riddance.
 remove unused port
 More xilinx fifos, more clean up of our fifos
 might as well use a cascade fifo to help timing and give a little more capacity
 fix a typo which caused tx glitches
 Untested fixes for getting serdes onto the new fifo system.  Compiles, at least
 Implement Eth flow control using pause frames
 parameterized fifo sizes, some reformatting
 remove unused old style fifo
 allow control of whether or not to honor flow control, adds some debug lines
 debug the rx side
 no longer used, replaced by newfifo version
 seems to build a decent fpga, but still some issues with a full connection.
 MAC transmit seems to work now.  The root cause of the problem was accidentally using the rx_clk in one stage of the fifos on the tx side.
 set device to xc3s2000.  Shouldn't make any differences.
 misc ignores
 made a new block ram based fifo, 64 (65) elements long, all fifos now have "enhanced level logic" for accurate fullness.  Maybe this will help...
 bring the testbench files up to date
 major cleanup of 2 clock fifos
 cleaning up the new fifos
 cascadefifo.v wasn't used, only the double cascade version.  fifo_2clock.v and fifo_2clock.v are empty
 never used, not needed
 debug pins, cleaned ignores
 sort out active-low lines on locallink fifos, added debug pins
 Removed these files completely, they were for the old style of fifos
 fixed addressing of registers, and added write enables to those that were missing.  MDIO seems ok.
 Merged SVN matt/new_eth r10782:11633 into new_eth
 Added git ignore files auto created from svn:ignore properties.
 Added git ignore files auto created from svn:ignore properties.
 Add custom FPGA build.
 Revert erroneous file included in r11424
 Reorganization of debian package directory
 Built and checked in new rbfs that fix ticket:248 and ticket:290. The rbfs are built from r11012 and were compiled using Quartus II Version 7.1 build 178 06/25/2007 SP 1 SJ Web Edition.
 Fix swapped signals.
 Merged r10770:10887 from jcorgan/iad2 into trunk.  Adds alternative USRP2 FPGA build to use integrate-and-dump decimator instead of CIC/HB combination.  This provides a much shorter time duration impulse response for the same decimation rate, at the expense of worse stop-band rejection.
 mostly formatting and name changes.  commented out special purpose pins.
 from u2p2, autogenerated
 now handles odd length packets
 basic wrapper working
 Merged r10712:10765 from jcorgan/gpio into trunk.  Adds out-of-band and streaming GPIO functions for USRP2.
 first cut at a wishbone interface and wrapping the core
 copied over from other eth core
 reset synchronizer
 made pause enabling a pin so we can set it
 Properly signals an error and drops the remainder of the packet if there is an overrun.  ERROR_2 changed to ERROR2.
 more thorough tests, including overrun, underrun, crc err, etc.
 simulate a hiccup in the filling of the fifo.  If long enough, will cause a tx underrun.
 debug ports for fifo level testing.  Normally I wouldn't check this in, but adding these ports actually improves timing.  XST strikes again...
 Fix for fifo overruns on eth rx in full duplex.  Now send re-pause long before pause is done.  Reenabled RMON for the time being
 test multiple error types
 added a state to ensure the error signal propagates, and now we assert src_rdy if we have an error to propagate
 only write one error into fifo
 generate error signal
 added error output line, alternative to simultaneous sof/eof
 logic to interface locallink fifos to our mac
 add fifos to interface to the macs
 rx seems to work.  haven't test error frames
 address filtering
 only report result for 1 cycle
 variable length delay line, based on srl16
 now checks the crc as well for the received side
 checkpoint
 we now inhibit our own sending when a received pause frame comes.  _rx.v is currently only a skeleton for testing pause
 sample packet
 cleaned up a little
 tx should be fully working now
 everything but CRC
 nearly there
 work in progress on a simpler gigabit-only mac
 copied over from other project
 new fifos copied over from other project
 optional (but not used) additional buffering in eth rx path.
 comment out the RMON, which we don't use
 copied over old one which works with icarus
 Merged r10504:10528 from michaelld/fix_local_data_install into trunk.  Trunk passes distcheck.
 timing fix.  The line address in the buffers still updates now even if there is an error.  Doesn't matter, since the error means the buffer is useless anyway.  This makes meeting timing much easier since the address update does not depend on the error signal which comes late.
 timing fix, delays the ethernet flow control by a cycle to get it across the chip.  Seems ok in testing.
 remove support for unmodified dbsrx because there is way too much phase noise.  only modified dbsrx are supported
 set all debug stuff to zero
 support for unmodified dbsrx boards
 Merged r10418:10423 from jcorgan/pps into trunk.  Adds usrp2::sync_every_pps
 work in progress
 work in progress
 work in progress
 first cut at 64 bit time
 trial fix for problem when 3 loads with 1 wait state are followed by a barrel shift or multiply.  Shawn will let us know if this works.
 catching up with shawn.  these aren't used here anyway.
 detect loss of signal
 corrected link up detector
 new cordic
 widen cordic on tx side
 clarify comment
 24 bit wide z.  Can't do this parameterized, unfortunately.
 pps sync works, meets timing
 synchronized pps, lots of debug pins changed, works, meets timing
 reset the phase when we shut down.  Aids in sync
 implemented "reset master clock on next PPS" so we can easily sync multiple units without MIMO connections
 speed up the diagnostic signals, they were causing timing problems
 hardware control of leds
 u2_rev2 now works again
 make rev2 compile again
 added in mux for DACs
 Added firmware support for adc_mux to handle swapping I/Q, etc. Modified dsp_core_rx.v to swap A and B mapping so that the software thinks that the TVRX is connected to A/D A.
 New serdes status interrupt, clk_status interrupt.  New capability to flush the ICache.
 moved to appropriate places
 added the basic wb<-->extram interface and a serdes interrupt to tell link status
 catch up with latest pin defs of u2_core
 attach a 16 bit device to the bus and make it look like a 32 bit device
 wb_zbt16_b is a quick hack just to be able to safely check the sram.  it is not speed-optimized
 new directory for files
 zbt ram controller
 first cut
 better debug pins
 allow fpga to take over sd card interface from cpld
 allow fpga to take over SD card interface
 control CS line on SD card
 Merged r9505:9553 from old usrp2/trunk into trunk/usrp2
 Merged r9433:9527 from features/gr-usrp2 into trunk.  Adds usrp2 and gr-usrp2 top-level components.  Trunk passes distcheck with mb-gcc installed, but currently not without them.  The key issue is that when mb-gcc is not installed, the build system skips over the usrp2/firmware directory, and the firmware include files don't get put into the dist tarball.  But we can't do the usual DIST_SUBDIRS method as the firmware is a subpackage.
 Allows for changing the interpolation rate dynamically.  Stop the pipeline, set the rate, restart the pipeline.  Fixes bug #248.
 Merged features/inband-usb -r6431:8293 into trunk.
 Restores 8-bit sample format support to FPGA code.  Synthesized with 7.1SP1.
 Regenerated USRP Makefile.extra
 Merged r6766:6775 from jcorgan/t195.  Fixes ticket:195.  NOTE: this removes 8 bit sample width support on receive.  Synthesized with 7.1SP1.
 Merged r6749:6763 from jcorgan/t179.  Fixes ticket:179.  New RBFs synthesized with 7.1SP1.
 tool version changed
 New rbfs built from r6602 using Quartus II Web Edition version 7.1 SP1
 Merged r6329:6428 of features/inband-usb + distcheck fixes into trunk.
 Merged features/inband-usb r5224:6306 into trunk. This is work-in-progress on inband signaling for the USRP1.
 Updated license from GPL version 2 or later to GPL version 3 or later.
 Merged r5732:5941 from jcorgan/sar into trunk.  Adds start of gr-radar-mono component. Trunk passes distcheck.
 merge ordm/receiver branch -r5574:5659. Reworks OFDM receiver with refactored OFDM blocks. A few bug fixes for other blocks have also been slipped in.
 not used
 Merged r5203:5204 from developer branch jcorgan/atr. Fixed ATR delay enable and reduced delay width to 12 bits.
 Merged features/inband -r4812:5218 into trunk.  This group of changes includes:
 Adds capability to independently delay the Auto T/R switching signal by a configurable number of clock ticks, to allow users to precisely align their T/R output with the pipeline delays in the transmitter.
 New FPGA binaries (.rbfs).  These include fixes for the scaling in the CIC decimator so that signals are now roughly leveled, independent of the decimation rate.  Decimating by 44 now works too ;)
 registered to meet timing
 copied usrp_inband_usb from -r4809 features/inband-usb into trunk
 proper shifting for the cic decim now keeps signals roughly leveled
 if you ever tried to interpolate by 44 it didn't work.  now it does.
 removed a parameter
 allow for varying the bitwidth
 added comment
 added comments, removed dead code
 Refactored FPGA *.vh files.  Moved common pieces to toplevel/include.
 Add new standard configuration for 1 RX w/ half-band, 1 TX
 updated qsf file to Quartus 6.1.  No semantic changes
 fixed comment
 fixed comment
 Applied patch from Brett Trotter that stuffs zeros into the head of the tx signal processing pipeline when the Tx FIFO is empty.
 removed unused/out-of-date bus_interface.v
 latest version of quartus
 optimized halfband coefficients, courtesy of Larry Doolittle
 Partial fix for ticket:81
 New rbfs.  These were compiled using Quartus 6.0 sp1 and include the post-ADC / pre-DDC digital rssi measurement code.
 Updated FSF address in all files.  Fixes ticket:51
 Houston, we have a trunk.
 some typo fixes and suggested revisions
 fix(package): update @types/node to version 8.0.15 (#680)
 fix(package): update brolog to version 1.1.30 (#679)
 chore(package): update eslint to version 4.3.0 (#678)
 fix(package): update brolog to version 1.1.29 (#677)
 0.8.133
 enhance(docker): add curl package
 chore(package): update typescript to version 2.4.2 (#672)
 chore(package): update ts-node to version 3.2.1 (#676)
 chore(package): update @types/sinon to version 2.3.3 (#670)
 fix(package): update brolog to version 1.1.28 (#669)
 fix(package): update @types/node to version 8.0.14 (#666)
 chore(package): update @types/request to version 2.0.0 (#667)
 fix(package): update brolog to version 1.1.27 (#662)
 0.8.132
 fix(request): typing file bug, restore old version
 merge
 chore(package): add phantomjs dependence
 chore(package): update sinon to version 2.3.8 (#657)
 fix(package): update @types/node to version 8.0.13 (#660)
 chore(package): update @types/request to version 0.0.47 (#661)
 fix(package): update @types/node to version 8.0.12 (#659)
 chore(package): update ava to version 0.21.0 (#658)
 Merge branch 'master' of github.com:Chatie/wechaty
 fix(log): not show log string for winston
 chore(package): update @types/raven to version 1.2.4 (#654)
 fix(package): update @types/node to version 8.0.11 (#653)
 chore(package): update @types/request to version 0.0.46 (#655)
 room-join cannot detect inviteeList when people join in the room with qrcode (#651)
 0.8.131
 update package-lock
 0.8.130
 add loggable for brolog
 update(package-lock)
 fix(package): update brolog to version 1.1.24 (#652)
 chore(package): update @types/ws to version 3.0.2 (#648)
 chore(package): update apiai to version 4.0.3 (#649)
 fix(package): update @types/node to version 8.0.10 (#647)
 chore(package): update sinon to version 2.3.7 (#646)
 Create CODE_OF_CONDUCT.md (#644)
 fix(package): update brolog to version 1.1.23 (#643)
 fix(package): update brolog to version 1.1.21 (#642)
 chore(package): update eslint to version 4.2.0 (#641)
 update(doc): add TODOs (#640)
 chore(package): update @types/raven to version 1.2.3 (#639)
 fix(package): update @types/node to version 8.0.9 (#638)
 chore(package): update @types/ws to version 3.0.1 (#635)
 fix(package): update @types/node to version 8.0.8 (#634)
 chore(package): update ts-node to version 3.2.0 (#631)
 chore(package): update yarn to version 0.27.5 (#629)
 fix #623 (#627)
 0.8.129
 fix(name): short name to satisfy HeroKu app.json Schema (#628)
 0.8.128
 Merge branch 'master' of github.com:chatie/wechaty
 0.8.127
 update(doc): looking forward to a better documentation
 fix(package): update @types/node to version 8.0.7 (#626)
 fix(package): update @types/node to version 8.0.6 (#625)
 0.8.126
 layout(template)
 0.8.125
 chore(README): add TypeScript link
 0.8.124
 fix(test): skip phantomjs test
 0.8.123
 fix(test): await http request
 0.8.122
 Merge branch 'master' of github.com:chatie/wechaty
 throw(exception): loadCookie() should throw if there has any exception
 0.8.121
 fix(test): await http request
 chore(package): update sinon to version 2.3.6 (#624)
 0.8.120
 skip(mentioned): for temporary until all `setTimeout` have been fixed @lijiarui (#623)
 fix(stream): use await to confirm promise resolved before end of test
 fix(throws): use await to confirm promise resolved before end of test
 0.8.119
 fix(tslint): lock tslint to 5.3.2
 0.8.118
 fix(tslint): lock tslint to 5.3.2
 0.8.117
 fix(typescript): new typing check rules, fix CI
 chore(package-lock)
 fix(overload): typescript lint (#622)
 chore(package): update @types/request to version 0.0.45 (#615)
 chore(package): update typescript to version 2.4.1 (#614)
 add log detail tag (#619)
 chore(package): update ava to version 0.20.0 (#620)
 fix(package): update @types/node to version 8.0.4 (#613)
 chore(package): update @types/sinon to version 2.3.2 (#610)
 chore(package): update nyc to version 11.0.3 (#607)
 Create CODE_OF_CONDUCT.md (#608)
 fix(package): update @types/node to version 8.0.3 (#606)
 reset the unrelated changes (#605)
 change outdated qrcode (#604)
 chore(package): update eslint to version 4.1.1 (#602)
 0.8.116
 Merge branch 'master' of github.com:chatie/wechaty
 0.8.115
 fix(@types/express): req.headers[origin] as string
 chore(package): update eslint to version 4.1.0 (#600)
 0.8.114
 plainText(nick): to process emoji right? (#588)
 0.8.113
 fix(npm version patch): add package-lock back because its required by hardcode from npm
 disable(package-lock): it seems not so useful but generate more problems
 fix(types): change `Function` to `(args: any) => any`
 fix(package): update @types/node to version 8.0.2 (#599)
 chore(package): update @types/body-parser to version 1.16.4 (#598)
 chore(package): update ts-node to version 3.1.0 (#595)
 chore(package): update @types/mime to version 1.3.1 (#591)
 fix(package): update @types/node to version 8.0.1 (#592)
 fix(package): update raven to version 2.1.0 (#593)
 chore(package): update sinon to version 2.3.5 (#590)
 fix(package): update @types/node to version 7.0.32 (#589)
 chore(package): update eslint-plugin-ava to version 4.2.1 (#586)
 0.8.110
 fix(typescript): add dependencies for @types. https://github.com/Chatie/wechaty/issues/136#issuecomment-308929478 (#136)
 0.8.109
 Merge branch 'master' of github.com:chatie/wechaty
 0.8.108
 add(source): add TypeScript source to npm package for source map
 chore(package): update @types/express to version 4.0.36 (#583)
 chore(package): update @types/mime to version 1.3.0 (#584)
 chore(package): update @types/request to version 0.0.44 (#585)
 chore(package): remove unused dependiences: is-ci / is-docker
 0.8.107
 fix(process.env): should use `[` instead of `(`! (#582)
 0.8.106
 clean(code): rename `Config` to `config`, change `wechaty.version()` to static compitibal
 clean(code): identify Docker environment by ENV variable. (#84)
 0.8.105
 fix #581
 0.8.104
 fix(test): use stable domain to test cookie.(#579)
 update(hostname): get current domain from webdriver to make hostname always right.(#418)
 update(changelog)
 0.8.103
 Merge branch 'master' of github.com:chatie/wechaty
 0.8.102
 add(sentry.io): catch exception for analysize. (#580)
 add notice to readme (#578)
 0.8.101
 add(readme): explain all the usage of examples
 0.8.100
 clean(code): add await and move comments
 0.8.99
 fix(style): style code
 0.8.98
 update(license): for example/**/*.ts
 update(license): for **/*.ts
 update(license): for src/**/*.ts
 update(license): for test/**/*.ts
 update(license): for bin/*.ts
 add(tool): update license for all source files
 0.8.97
 fix(docker): back to node v7 from v8 due to buggy npm (#577)
 0.8.96
 fix(package-lock): strange behavior
 upgrade(docker): use node v8 by default
 0.8.95
 fix(tslint): keep to use v5.3.x instead of 5.4.3 because its still buggy. see: https://github.com/palantir/tslint/issues/2855
 merge
 Merge branch 'master' of github.com:chatie/wechaty
 upgrade(appveyor): test under node v8
 fix(travis): test under node v8
 fix(types): new ws typing fix
 fix(package): lock npm version
 chore(package): update sinon to version 2.3.3 (#576)
 fix(package): update chromedriver to version 2.29.2 (#575)
 chore(package): update cross-env to version 5.0.1 (#573)
 fix(package): update chromedriver to version 2.29.1 (#572)
 chore(package): update @types/node to version 7.0.29 (#571)
 chore(package): update ts-node to version 3.0.6 (#570)
 chore(package): update @types/node to version 7.0.28 (#569)
 chore(package): update ts-node to version 3.0.5 (#567)
 chore(package): update tslint to version 5.4.3 (#568)
 chore(package): update @types/sinon to version 2.3.1 (#565)
 0.8.94
 merge
 0.8.86
 clean(code)
 0.8.93
 Merge branch 'master' of github.com:Chatie/wechaty
 fix(user): replace user() by self() for its deprecated
 chore(package): update nyc to version 11.0.2 (#563)
 chore(package): update @types/sinon to version 2.3.0 (#562)
 0.8.92
 Merge branch 'master' of github.com:Chatie/wechaty
 update(package)
 chore(package): update @types/node to version 7.0.26 (#560)
 update(package)
 Merge branch 'master' of github.com:Chatie/wechaty
 doc(todo): use better git command
 chore(package): update @types/ws to version 3.0.0 (#559)
 chore(package): update @types/node to version 7.0.25 (#558)
 chore(package): update @types/ws to version 0.0.42 (#557)
 chore(package): update @types/node to version 7.0.24 (#556)
 chore(package): update @types/fluent-ffmpeg to version 2.1.1 (#554)
 chore(package): update @types/node to version 7.0.23 (#551)
 0.8.91
 chore(package): remove codelyzer dependencies
 0.8.90
 fix(driver): do not await quit
 0.8.89
 add(lock): lock npm version
 chore(package)
 ignore(npm): no lock file form npm v5 now
 0.8.86
 clean(log): more verbose log
 0.8.85
 Merge branch 'master' of github.com:Chatie/wechaty
 chore(package): update typescript to version 2.3.4 (#550)
 0.8.84
 fix(typo): smoking test -> smoke testing
 0.8.83
 fix(test): manage timeout better, call driver.quit() if driver fail
 fix(test): manage timeout better, call driver.quit() if driver fail
 fix(docker): name
 fix(test): serial for prevent race condition
 clean(BrowserDriver): clearTimeout
 fix(doc): style email
 chore(code): clean
 0.8.82
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.81
 chore(clean): message clean
 0.8.81
 merge
 0.8.72
 chore(doc): add voice from user
 0.8.80
 fix(spec): use high port instead of 8000
 0.8.79
 clean(test): move smoke testing to fixture
 0.8.78
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.77
 fix(example): add brackets
 chore(package): update tslint to version 5.3.2 (#542)
 0.8.76
 doc(import): notice how to import Wechaty (#544)
 0.8.75
 fix(webdriver): set timeout from 10s to 60s (#406)
 0.8.74
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.73
 update(changelog)
 Change license
 0.8.72
 fix(lint): disable tslint align-arguments
 chore(package): update yarn to version 0.24.5 (#541)
 chore(package): update sinon to version 2.3.1 (#539)
 0.8.71
 clean(code): format
 0.8.70
 fix(lint): tslint force aligned
 0.8.69
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.68
 clean(code): clean warnings
 chore(package): update @types/node to version 7.0.22 (#534)
 clean(config): hide package in vscode tree view
 fix(appveyor): limit concurrency to 5, to prevent reach the resource limit in appveyor?
 chore(package): update typescript to version 2.3.3 (#536)
 chore(package): update tslint to version 5.3.0 (#535)
 0.8.67
 fix(package): move request module from devDependience to Dependience
 0.8.66
 add(test): make sure npm pack is right for publish (#522)
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.65
 chore(package): update sinon to version 2.3.0 (#533)
 fix(test): clearTimeout for prevent race condition(?)
 clean(code): remove redundancy code from issue #70
 clean(code): keep unhandledRejection only in config.ts
 0.8.64
 chore(doc): move todo to wiki
 0.8.63
 clean(webdriver): clean code & test
 0.8.62
 fix(webdriver): add getWebDriver() for return WebDriver instance for testing
 clean(files): remove brolog-env.ts, move log to config.ts
 chore(package): update @types/node to version 7.0.19 (#527)
 fix #512 (#531)
 0.8.61
 fix(open): add finally block
 0.8.60
 chore(test): do not test phantomjs now
 0.8.59
 fix(jq): windows compible argument quota
 0.8.58
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.57
 fix(jq): install jq in CI test & Dockerfile
 fix(package): update body-parser to version 1.17.2 (#521)
 0.8.56
 fix(npm): publish dist files right by a dirty fix. (fix #522)
 add(author)
 0.8.55
 merge
 0.8.36
 chore(clean): code & doc
 fix(package): update ws to version 3.0.0 (#519)
 0.8.54
 chore(readme): move issue badge down to contributing
 chore(readme): move issue badge down to contributing
 0.8.53
 fix(package): increase test timeout from 3m to 5m
 0.8.52
 fix(example): keep the order of `say` by add `await`
 Merge branch 'master' of github.com:wechaty/wechaty
 chore(readme): doc clean
 make dingdong reply more beautiful (#515)
 fix(package): update @types/selenium-webdriver to version 3.0.4 (#516)
 chore(package): update @types/sinon to version 2.2.2 (#517)
 0.8.51
 clean(package): remove unused files
 0.8.50
 chore(name): code clean
 0.8.49
 chore(browser): code clean
 0.8.48
 chore(doc): re-structure
 0.8.47
 chore(doc): re-structure
 0.8.46
 chore(doc): re-structure
 0.8.45
 chore(doc): re-structure
 0.8.44
 chore(doc): re-structure
 0.8.43
 fix(tslint): clean before linting for output file write to dist/
 add(project): project using wechaty
 0.8.42
 fix(ci): close timeout browser for cleaning (#175)
 chore(doc)
 0.8.41
 fix(nick): rename to alias
 0.8.40
 fix(ci): increase timeout from 15 to 60 seconds (#175)
 0.8.39
 fix(package): down grade socket.io to 1.4.9
 0.8.38
 fix(ci): Exited because no new tests completed within the last 180000ms of inactivity (#175)
 0.8.37
 fix(msg): show a better message when method not work as expected
 0.8.36
 merge
 0.8.31
 fix(vulnerabilities) ms
 0.8.35
 fix(say): add return boolean to identify success/failure
 0.8.34
 enhance(docker): es6 support by babel-node when NODE_ENV is not production (#507)
 0.8.33
 fix(contact): return false instead of throw when contact is not friend (#509)
 0.8.32
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.31
 fix(contact): return false instead of throw when contact is not friend (#509)
 fix(package): update brolog to version 1.1.18 (#510)
 chore(package): update yarn to version 0.24.4 (#508)
 0.8.30
 fix(travis): test node v7 only
 0.8.29
 log(message): win32 ci fail becasue race condition of Puppet.contactGetter() (close #445)
 0.8.28
 log(message): try to find out why win32 can not get to() (#445)
 0.8.27
 code clean
 log(message): try to find out why win32 can not get to() (#445)
 0.8.26
 log(message): try to find out why win32 can not get to() (#445)
 fix(dry): MsgType enum can revert name by itself(thanks typescript!)
 0.8.25
 log(message): try to find out why win32 can not get to() (#445)
 0.8.24
 log(message): try to find out why win32 can not get to() (#445)
 0.8.23
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.22
 log(message): try to find out why win32 can not get to() (#445)
 log(message): try to find out why win32 can not get to() (#445)
 chore(package): update cross-env to version 5.0.0 (#506)
 0.8.21
 fix(doc): rename domain name to chatie.io
 0.8.20
 fix(user): provent null exception
 Merge branch 'master' of github.com:wechaty/wechaty
 fix(template): make more clear for how to enable debug log output
 0.8.19
 fix(io): use contact.obj to emit login event
 0.8.18
 merge
 0.8.9
 fix(name): rename wechaty to chatie
 0.8.17
 chore(rename) from wechaty to chatie
 0.8.16
 Merge branch 'master' of github.com:wechaty/wechaty
 fix(package): update socket.io to version 1.7.4 (#498)
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.15
 fix(package): fix version of brolog
 fix(package): update state-switch to version 0.1.13 (#497)
 fix(tslint) enable type-checking
 0.8.14
 fix(brolog) interface changed
 0.8.13
 Merge branch 'master' of github.com:wechaty/wechaty
 chore(package)
 chore(package): update @types/node to version 7.0.18 (#496)
 fix(package): update brolog to version 1.1.15 (#495)
 fix(package): update brolog to version 1.1.2 (#493)
 chore(package): update nyc to version 10.3.2 (#491)
 0.8.12
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.11
 fix(ts-node) add back to dev dependence (#492)
 add contributor lockon (#490)
 0.8.10
 update(vscode) add exclude directorys in setting (#489)
 chore(package): update @types/request to version 0.0.43 (#487)
 0.8.9
 merge
 chore(package): update @types/fluent-ffmpeg to version 2.1.0 (#488)
 chore(package): update @types/node to version 7.0.17 (#485)
 0.8.7
 fix(ci) only send email on stats change
 chore(package): update @types/sinon to version 2.2.1 (#483)
 chore(package): update @types/ws to version 0.0.41 (#484)
 0.8.8
 0.8.7
 Merge branch 'master' of github.com:wechaty/wechaty
 fix(package) rename wechaty to chatie for API
 chore(package): update @types/sinon to version 2.2.0 (#479)
 chore(package): update @types/node to version 7.0.16 (#480)
 chore(package): update tslint to version 5.2.0 (#481)
 chore(package): update ts-node to version 3.0.3 (#482)
 0.8.6
 fix(contact) better warn message if weixin() can not get id from a contact
 fix(room): better warn message for memberList() and call refresh() if needed (#477)
 0.8.5
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.4
 chore(doc) add comment from Uri Lee
 fix(package): update state-switch to version 0.1.11 (#475)
 0.8.3
 update(changelog) summary for v0.8
 0.8.2
 Merge branch 'master' of github.com:wechaty/wechaty
 0.8.1
 0.8.0
 change(license) from ISC to Apache-2.0 (#474)
 fix(package): update state-switch to version 0.1.10 (#473)
 chore(package): update yarn to version 0.23.4 (#472)
 0.7.95
 Merge branch 'master' of github.com:wechaty/wechaty
 0.7.94
 fix(hook) disable git rebase before push
 fix(package): update state-switch to version 0.1.8 (#471)
 Lazy to create a stream (#470)
 0.7.93
 merge
 chore(package): update state-switch to version 0.1.7 (#469)
 0.7.92
 replace StateMonitor by StateSwitch (#466)
 0.7.91
 0.7.90
 fix(filename) do not add debug information to filename (#465)
 chore(package): update sinon to version 2.2.0 (#464)
 chore(package): update bl to version 1.2.1 (#462)
 chore(package): update @types/node to version 7.0.15 (#461)
 chore(package): update check-node-version to version 2.1.0 (#458)
 0.7.89
 0.7.88
 fix(timeout) QRCode will be updated in 2 mins. we refresh browser after 4 mins in case of lost control. (#434)
 fix(package): update brolog to version 1.0.15 (#457)
 fix(package): update brolog to version 1.0.14 (#456)
 0.7.87
 update(api) set api host to api.chatie.io
 fix(package): update brolog to version 1.0.13 (#455)
 fix(package): update brolog to version 1.0.7 (#454)
 0.7.86
 fix(brolog) use lowercase
 0.7.85
 fix(brolog) use lowercase
 fix(brolog) follow Brolog v1.0
 update npm
 code clean
 code clean
 fix(package): update brolog to version 1.0.6 (#453)
 chore(package): update yarn to version 0.23.3 (#452)
 chore(package): update nyc to version 10.3.0 (#450)
 0.7.84
 code clean
 0.7.83
 strict(lint): new tslint runes and fixes
 chore(package): update fluent-ffmpeg to version 2.1.2 (#449)
 chore(package): update typescript to version 2.3.2 (#448)
 rename wechaty to chatie
 chore(package): update @types/ws to version 0.0.40 (#447)
 0.7.82
 clean(doc) remove ready() because it always already ready
 0.7.81
 0.7.80
 move image reply to ding and add invitation message
 move image reply to ding and add invitation message
 chore(package): update typescript to version 2.3.1 (#443)
 add room.say() magic code when try to mention someone (#440)
 chore(package): update coveralls to version 2.13.1 (#444)
 chore(package): update @types/node to version 7.0.14 (#441)
 0.7.79
 try to fix   × src » message » ready() contact ready for ToUserName
 add starter repository
 Add mention (#362 #287)
 support brand checking of contact  (#404)
 Fix chrome driver path problem in Windows (#416)
 #3 support send gif (#438)
 0.7.78
 fix(docker) create WORKDIR /app for some version of docker build
 0.7.77
 fix(docker) entrypoint show nodejs version with additional `v`
 0.7.76
 fix(docker) clean after onbuild
 fix(docker): add typescript to the new app directory /app
 0.7.75
 0.7.74
 fix(docker): it seems we can not reuse the VOLUME as workdir? (#147)
 fix(name) Huan
 fix(name) do not use the official docker image name in dev/test env
 chore(package): update @types/sinon to version 2.1.3 (#435)
 chore(package): update fluent-ffmpeg to version 2.1.1 (#433)
 0.7.73
 enhance(docker): add NODE_ENV to onbuild image (#147)
 0.7.72
 enhance(docker): add onbuild support to docker image (#147)
 0.7.71
 fix(changelog): rename Wechaty to Chatie, and update
 0.7.70
 0.7.69
 add deprecated notice for /doc
 fix(package): update selenium-webdriver to version 3.4.0 (#429)
 chore(package): update babel-eslint to version 7.2.3 (#430)
 fix(package): update @types/selenium-webdriver to version 3.0.3 (#428)
 0.7.68
 0.7.67
 add network information to issue
 fix(package): update ws to version 2.3.1 (#426)
 fix(package): update ws to version 2.3.0 (#425)
 Limit video file size (#421)
 0.7.66
 0.7.65
 merge
 add room.say(MediaMessage) (#420)
 update(module): add default export
 0.7.64
 fix(tslint): get rid of warnings
 0.7.63
 fix(tslint): noLib will cause error, disable it
 rename(chatie): code clean
 chore(config): skip lib check for typescript
 fix(docker): fix version display bug
 fix upload media url error (#415)
 chore(package): update @types/node to version 7.0.13 (#417)
 add room-leave event (#370) (fix #250)
 0.7.62
 fix(doc): add npm js hello world example
 chore(package): update babel-eslint to version 7.2.2 (#407)
 chore(package): update tslint to version 5.1.0 (#402)
 0.7.61
 0.7.60
 fix(npm): auto deploy to @latest version instead of @next
 0.7.59
 add(chromedriver): add diagnostic chromedriver version in doctor
 chore(package): update yarn to version 0.22.0 (#397)
 chore(package): update chromedriver to version 2.29.0 (#396)
 chore(package): update apiai to version 4.0.2 (#393)
 chore(package): update @types/sinon to version 2.1.2 (#390)
 room.memberAll() & change room.member() query to 3 types (#364)
 fix(package): update ws to version 2.2.3 (#389)
 Update firer.ts (#388)
 chore(package): update @types/sinon to version 2.1.1 (#386)
 chore(package): update @types/body-parser to version 1.16.3 (#387)
 fix jsdoc flush issue #378 and minor fix on the doc examples (#380)
 Limit the size of the sending file (#376)
 chore(package): update cross-env to version 4.0.0 (#379)
 chore(package): update coveralls to version 2.13.0 (#377)
 0.7.58
 fix(tslint): TS2304 rename object to Object
 fix #4 send image/video (#337)
 0.7.57
 0.7.56
 fix(lint): missing comma
 chore(package): update tslint to version 5.0.0 (#373)
 chore(package): update @types/sinon to version 2.1.0 (#372)
 fix(package): update @types/selenium-webdriver to version 3.0.1 (#374)
 chore(package): update @types/body-parser to version 1.16.2 (#367)
 chore(package): update typescript to version 2.2.2 (#366)
 chore(package): update @types/node to version 7.0.12 (#368)
 chore(package): update nyc to version 10.2.0 (#369)
 0.7.55
 fix(room): prepare a ready room for findAll() (#357)
 update(git): show beautify git commit message for hook
 fix(room): prepare a ready room for findAll() (#357)
 0.7.54
 fix(config): track unhandled rejection when in DEBUG mode #360
 fix(doc): space stop
 Printout entire error trace when unhandledRejection was caught (#361)
 chore(package): update @types/node to version 7.0.11 (#359)
 fix(package): update @types/socket.io to version 1.4.29 (#354)
 chore(package): update babel-eslint to version 7.2.1 (#355)
 chore(package): update @types/request to version 0.0.42 (#356)
 chore(package): update @types/node to version 7.0.9 (#353)
 1. in wxwebapp,first item in memberList is a random user from the room, 2. some times we can got owneruin or ChatRoomOwner . as those reason, first member from memberlist should not be  here any more (#358)
 chore(package): update ts-node to version 3.0.2 (#351)
 fix(package): update moment to version 2.18.1 (#350)
 chore(package): update @types/body-parser to version 1.16.1 (#347)
 fix(package): update ws to version 2.2.2 (#348)
 chore(package): update ts-node to version 3.0.1 (#349)
 chore(package): update ts-node to version 3.0.0 (#345)
 chore(package): update ts-node to version 2.1.2 (#344)
 chore(package): update ts-node to version 2.1.1 (#343)
 chore(package): update sinon to version 2.1.0 (#340)
 chore(package): update @types/sinon to version 1.16.36 (#341)
 chore(package): update babel-eslint to version 7.2.0 (#342)
 0.7.53
 0.7.52
 fix(ci): show circleci badge for master branch
 change(sleep): Wechaty.sleep() is a static method now.
 fix(package): update moment to version 2.18.0 (#335)
 remove m.send() fucntion (#323)
 Update README.md
 Update README.md
 Update README.md
 chore(doc): welcome developers
 chore(package): update eslint to version 3.18.0 (#332)
 0.7.51
 fix(doc): rename repository name right for CI & Coveralls
 0.7.50
 rebase before push by default
 0.7.49
 0.7.48
 rename Zhuohuan to Huan
 chore(package): update sinon to version 2.0.0 (#326)
 fix room test (#328)
 fix(package): update brolog to version 0.4.3 (#327)
 0.7.47
 chore(doc): move greenkeeper badge
 Merge branch 'master' of github.com:wechaty/wechaty
 chore(doc): rename title
 Update dependencies to enable Greenkeeper 🌴 (#325)
 remove blank (#324)
 fix(doc): rename appveyor name to Chatie
 Add JsDoc for Class Contact (#321)
 chore(doc): use lower case in url
 0.7.46
 fix(doc): correct link name for appveyor & coveralls
 0.7.45
 chore(doc): add VPS referrel which can solve the npm/docker netwrok problems
 0.7.44
 0.7.43
 fix(script): simplify parameters for npm script
 chore(doc): add voice of developer from @Gcaufy
 chore(doc): add voice from @Gcaufy and rename Wechaty to Chatie
 291 (#318)
 #291 change `throw error` to `return null` (#292)
 #283 (#303)
 0.7.42
 Merge branch 'master' of github.com:wechaty/wechaty
 0.7.41
 chore(doc): rename Wechaty to Chatie
 0.7.41
 Merge branch 'master' of github.com:wechaty/wechaty
 fix(package): resolve version conflict
 chore(package): update yarn to version 0.21.3 (#317)
 chore(package): update nyc to version 10.1.2 (#316)
 chore(package): update tslint to version 4.5.1 (#315)
 chore(package): update check-node-version to version 2.0.1 (#314)
 chore(package): update @types/ws to version 0.0.38 (#313)
 chore(package): update @types/node to version 7.0.7 (#312)
 fix(package): update @types/selenium-webdriver to version 3.0.0 (#311)
 chore(package): update @types/node to version 7.0.6 (#306)
 chore(package): update @types/ws to version 0.0.39 (#308)
 chore(package): update check-node-version to version 2.0.0 (#307)
 chore(package): update @types/body-parser to version 1.16.0 (#309)
 0.7.38
 chore(doc): add new contributor: Gcaufy
 added hot-load-demo (#310)
 fix(package): update @types/selenium-webdriver to version 2.53.42 (#305)
 fix(package): update @types/selenium-webdriver to version 2.53.41 (#304)
 fix(package): update express to version 5.0.0-alpha.5 (#300)
 fix(package): update selenium-webdriver to version 3.3.0 (#298)
 fix(package): update body-parser to version 1.17.1 (#299)
 chore(package): update @types/request to version 0.0.41 (#301)
 chore(package): update apiai to version 4.0.1 (#302)
 0.7.40
 fix(package): update cross-env from 3.2.0 to 3.2.3
 chore(package): update coveralls to version 2.12.0 (#297)
 chore(package): update cross-env to version 3.2.0 (#296)
 0.7.39
 Merge branch 'master' of github.com:wechaty/wechaty
 0.7.38
 fix(config): try to identify if wechaty is installed globally
 fix(docker): labels in Dockerfile must not contains space beside =
 chore(package): update request to version 2.80.0 (#294)
 chore(docker): add more label-schame
 fix(handler): do not handle global rejection, leave it to user (https://github.com/lijiarui/robot_ts/issues/5)
 0.7.37
 fix(travis): install phantomjs for all platform
 fix(package): update express to version 5.0.0-alpha.4 (#290)
 fix(package): update body-parser to version 1.17.0 (#289)
 chore(changelog) update
 fix(script): sed -i under ubuntu linux
 0.7.36
 chore(doc)
 clean(room): remove useless function (#273)
 fix(room): do not permit undefined param
 clean(doc): remove useless comments
 fix(room): do not permit undefined param (#273)
 chore(package): update tslint to version 4.5.0 (#286)
 chore(package): update sinon to version 2.0.0-pre.6 (#284)
 chore(package): update yarn to version 0.20.4 (#285)
 fix(package): update ws to version 2.2.0 (#288)
 load all memberList (#275)
 add contributor @xinbenlv
 fix(package): update @types/selenium-webdriver to version 2.53.40 (#279)
 Add print nodejs version (#280)
 chore(package): update typescript to version 2.2.1 (#276)
 chore(package): update eslint to version 3.16.1 (#277)
 fix(room): RawObj may absence of MemberList (#273)
 0.7.35
 (changelog) update & fix
 0.7.34
 set state right before wechaty quit (#271)
 chore(package): update eslint to version 3.16.0 (#270)
 add version requirement notice
 clear module message about yarn
 chore(package): update ava to version 0.18.2 (#269)
 fix(package): update ws to version 2.1.0 (#268)
 chore(package): update @types/body-parser to version 0.0.34 (#267)
 0.7.33
 doc
 fix(package): update socket.io to version 1.7.3 (#265)
 add-sys-message-in-friendrequest (#266)
 fix(package): update selenium-webdriver to version 3.1.0 (#256)
 (tslint) fix #264
 chore(package): update @types/request to version 0.0.40 (#257)
 fix(package): update @types/socket.io to version 1.4.28 (#258)
 warn user for a empty rawObj, In case of Contact.load() a wrong UserName
 Do not run `yarn` (npm install) inside docker. leave it to users
 add all main class to docs
 doc
 get rid of unnecessary `ready()` call
 chore(package): update yarn to version 0.20.3 (#253)
 dodc
 set multiline trailing comma true
 fix default value of param in jsdoc
 add starter project link #73
 chore(package): update eslint-plugin-ava to version 4.2.0 (#247)
 roomJoinFailed (#249)
 0.7.32
 add example to wechaty
 0.7.31
 jsdoc
 0.7.30
 use index.md
 0.7.29
 Merge branch 'master' of github.com:wechaty/wechaty
 0.7.28
 doc jsdoc
 Set theme jekyll-theme-cayman
 0.7.27
 doc(tslint): disable jsdoc linting for now #73
 doc(docs): init #73
 enable jsdoc-rules for tslint
 enable tslint for jsdoc
 fix(package): update body-parser to version 1.16.1 (#245)
 add typescript typedoc link
 0.7.26
 0.7.25
 better error message for chromedriver #164
 add voice from @ax4
 doc clean
 0.7.24
 Merge branch 'master' of github.com:wechaty/wechaty
 0.7.23
 0.7.22
 fix chromedriver typo
 chore(package): update typescript to version 2.1.6 (#243)
 chore(package): update @types/sinon to version 1.16.35 (#242)
 chore(package): update ts-node to version 2.1.0 (#244)
 fix(package): update ws to version 2.0.3 (#241)
 chore(package): update eslint-plugin-ava to version 4.1.0 (#240)
 add warn log when function Room&Contact.find() return more than one value (#239)
 Merge pull request #234 from lijiarui/217
 3
 2
 0.7.21
 changelog
 1
 0.7.20
 make tuling123-bot more easy & straight forward #236
 #217
 0.7.19
 fix 235
 add test data
 rename the nick/remark/display for contact/room #217
 Merge pull request #233 from wechaty/greenkeeper/coveralls-2.11.16
 chore(package): update coveralls to version 2.11.16
 Merge pull request #232 from wechaty/greenkeeper/@types/node-7.0.5
 Merge pull request #230 from wechaty/greenkeeper/ws-2.0.2
 Merge pull request #231 from wechaty/greenkeeper/eslint-3.15.0
 chore(package): update @types/node to version 7.0.5
 chore(package): update eslint to version 3.15.0
 fix(package): update ws to version 2.0.2
 Merge pull request #228 from wechaty/greenkeeper/apiai-4.0.0
 chore(package): update apiai to version 4.0.0
 Merge pull request #227 from wechaty/greenkeeper/ava-0.18.0
 chore(package): update ava to version 0.18.0
 Merge pull request #226 from wechaty/greenkeeper/ws-2.0.0
 0.7.18
 add issuestats.com badge
 0.7.17
 fix https://travis-ci.org/wechaty/wechaty/jobs/196253253#L899
 fix(package): update ws to version 2.0.0
 Merge pull request #224 from wechaty/greenkeeper/express-4.14.1
 fix(package): update express to version 4.14.1
 chore(package): update sloc to version 0.2.0 (#223)
 0.7.16
 tslint: no trailing wihtespace in comments
 chore(package): update tslint to version 4.4.0 (#221)
 chore(package): update @types/node to version 7.0.4
 chore(package): update eslint to version 3.14.1 (#220)
 fix_function_room.member_#173 (#211)
 0.7.15
 set mock contact getter direct to puppet (#211)
 Merge pull request #212 from wechaty/greenkeeper/nyc-10.1.0
 Merge pull request #214 from wechaty/greenkeeper/@types/express-4.0.35
 Merge pull request #213 from wechaty/greenkeeper/body-parser-1.16.0
 chore(package): update @types/express to version 4.0.35
 fix(package): update body-parser to version 1.16.0
 chore(package): update nyc to version 10.1.0
 Merge pull request #209 from wechaty/greenkeeper/yarn-0.19.1
 chore(package): update yarn to version 0.19.1
 0.7.14
 add xinbenlv quotation
 0.7.13
 test node v6
 0.7.12
 add changelog npm script
 0.7.11
 0.7.10
 replace changelog by github-changelog-generator
 Merge pull request #206 from wechaty/greenkeeper/ws-2.0.0-beta.1
 fix(package): update ws to version 2.0.0-beta.1
 0.7.9
 code clean
 code clean
 add localhost tcp connectivity test in doctor (#184)
 Merge pull request #203 from wechaty/greenkeeper/typescript-2.1.5
 chore(package): update typescript to version 2.1.5
 Merge pull request #202 from wechaty/greenkeeper/is-ci-1.0.10
 fix(package): update is-ci to version 1.0.10
 Merge pull request #198 from wechaty/greenkeeper/@types/node-7.0.0
 Merge pull request #197 from wechaty/greenkeeper/eslint-plugin-ava-4.0.1
 Merge pull request #199 from lijiarui/patch-8
 readme friendrequest
 chore(package): update @types/node to version 7.0.0
 chore(package): update eslint-plugin-ava to version 4.0.1
 Merge pull request #193 from wechaty/greenkeeper/@types/node-6.0.59
 Merge pull request #194 from wechaty/greenkeeper/eslint-3.13.1
 chore(package): update eslint to version 3.13.1
 chore(package): update @types/node to version 6.0.59
 0.7.8
 fix #164
 Merge pull request #191 from wechaty/greenkeeper/shx-0.2.2
 chore(package): update shx to version 0.2.2
 Merge pull request #189 from wechaty/greenkeeper/eslint-3.13.0
 chore(package): update eslint to version 3.13.0
 0.7.7
 doc
 0.7.6
 merge
 0.6.70
 add getting started video
 Merge pull request #187 from wechaty/greenkeeper/@types/node-6.0.58
 chore(package): update @types/node to version 6.0.58
 Merge pull request #186 from wechaty/greenkeeper/tslint-4.3.0
 Merge branch 'master' of github.com:wechaty/wechaty
 fix new tslint error: https://github.com/wechaty/wechaty/pull/186
 chore(package): update tslint to version 4.3.0
 Merge pull request #185 from wechaty/greenkeeper/@types/selenium-webdriver-2.53.39
 fix(package): update @types/selenium-webdriver to version 2.53.39
 Merge pull request #183 from wechaty/greenkeeper/@types/node-6.0.57
 chore(package): update @types/node to version 6.0.57
 Merge pull request #180 from wechaty/greenkeeper/@types/node-6.0.56
 Merge pull request #179 from wechaty/greenkeeper/cross-env-3.1.4
 Merge pull request #182 from lijiarui/master
 #181 fix
 chore(package): update @types/node to version 6.0.56
 chore(package): update cross-env to version 3.1.4
 Merge pull request #162 from lijiarui/master
 Merge pull request #178 from wechaty/greenkeeper/sinon-1.17.7
 chore(package): update sinon to version 1.17.7
 Merge pull request #177 from wechaty/greenkeeper/@types/sinon-1.16.34
 Merge branch 'master' into greenkeeper/@types/sinon-1.16.34
 Merge pull request #176 from wechaty/greenkeeper/@types/request-0.0.39
 chore(package): update @types/sinon to version 1.16.34
 chore(package): update @types/request to version 0.0.39
 Merge pull request #171 from wechaty/greenkeeper/@types/node-6.0.55
 Merge branch 'master' into greenkeeper/@types/node-6.0.55
 Merge pull request #170 from wechaty/greenkeeper/ts-node-2.0.0
 Merge pull request #172 from wechaty/greenkeeper/@types/request-0.0.38
 chore(package): update @types/request to version 0.0.38
 chore(package): update @types/node to version 6.0.55
 chore(package): update ts-node to version 2.0.0
 0.7.5
 try to fix https://travis-ci.org/wechaty/wechaty/jobs/187463245#L3890
 Merge pull request #169 from wechaty/snyk-fix-08c15175
 fix: package.json to reduce vulnerabilities
 0.7.4
 restore npm default dist tag to next
 0.7.3
 0.7.2
 publish npm readme
 0.7.1
 0.7.0
 0.6.69
 try to suppress unhandled exceptions in 3rd party library #122
 try to suppress unhandled exceptions in 3rd party library
 0.6.68
 fix tsc fail if we have dist/ output directory
 fix unit test
 Merge pull request #161 from wechaty/greenkeeper/@types/selenium-webdriver-2.53.38
 Merge branch 'greenkeeper/@types/node-6.0.54'
 merge
 code clean
 fix ps-tree version after lock
 fix check-node-version under win32 ci
 lint under win32 ci
 disable npm install in circleci because we run everything of nodejs in docker
 Merge pull request #167 from wechaty/greenkeeper/ts-node-1.7.3
 chore(package): update ts-node to version 1.7.3
 Merge pull request #166 from wechaty/greenkeeper/@types/request-0.0.37
 chore(package): update @types/node to version 6.0.54
 chore(package): update @types/request to version 0.0.37
 English string your of inviter
 fix text
 add firer.spec.ts
 #155
 Merge remote-tracking branch 'upstream/master'
 t
 fix(package): update @types/selenium-webdriver to version 2.53.38
 0.6.67
 merge
 0.6.66
 check Node.js when npm run to kindly notice developers who are using node version below v6.9 (#159)
 Merge pull request #158 from wechaty/greenkeeper/tslint-4.2.0
 chore(package): update tslint to version 4.2.0
 merge
 lock all npm module version to fix
 run clean before dist, to replace redist(#152)
 fix ci with browser.open() & hostname
 fix ci test
 use web.wechat.com when cookie has wechat.com(#151)
 code clean
 add unit test for hostname() (#151)
 code clean
 silent chromedriver log message(#150)
 code clean
 https://github.com/Microsoft/TypeScript/issues/9944 compact selenium-webdriver types v2, hope @types v3 will publish soon
 Merge pull request #149 from wechaty/greenkeeper/@types/selenium-webdriver-2.53.37
 chore(package): update @types/selenium-webdriver to version 2.53.37
 Merge pull request #146 from wechaty/greenkeeper/tslint-4.1.1
 Merge pull request #145 from wechaty/greenkeeper/yarn-0.18.1
 chore(package): update yarn to version 0.18.1
 chore(package): update tslint to version 4.1.1
 add observable & huject
 Merge pull request #143 from wechaty/greenkeeper/@types/sinon-1.16.33
 Merge branch 'master' into greenkeeper/@types/sinon-1.16.33
 Merge pull request #142 from wechaty/greenkeeper/@types/node-6.0.52
 Merge pull request #141 from wechaty/greenkeeper/tslint-4.1.0
 chore(package): update tslint to version 4.1.0
 0.6.65
 doc
 clean
 Merge pull request #139 from lijiarui/patch-6
 Update README.md
 demo how to save contact avatar to file #121 #138
 0.6.64
 try to fix https://travis-ci.org/wechaty/wechaty/jobs/183841844#L1371
 doc
 0.6.63
 doc
 0.6.62
 doc
 0.6.61
 doc
 0.6.60
 doc
 0.6.59
 chore(package): update @types/node to version 6.0.52
 doc
 0.6.58
 doc
 0.6.57
 fix phantomjs-prebuilt peer dependence
 0.6.56
 fix test fail
 0.6.55
 0.6.54
 enable Contact.avatar() #121 #31
 move chromedriver & phantomjs-prebuilt to peer dependence
 add title to developer friends
 0.6.53
 move @types/selenium-webdriver @types/socket.io from devDependence to dependence to make npm user happy #136
 fix remark() get the old value bug #130
 chore(package): update @types/sinon to version 1.16.33
 0.6.52
 author info & ava setting
 doc
 quota
 #122
 0.6.51
 clean
 clean
 say error
 follow new tslint rules
 fix remark with null param #130
 fix remark with null param #130
 0.6.50
 code clean
 0.6.49
 Merge branch 'master' of github.com:wechaty/wechaty
 delete deprecated tslint rules
 Merge pull request #127 from wechaty/greenkeeper/update-all
 chore(package): update dependencies
 0.6.48
 use finis instead of nodeCleanup
 log more for https://travis-ci.org/wechaty/wechaty/jobs/182313353#L3727
 0.6.47
 Merge branch 'master' of github.com:wechaty/wechaty
 0.6.46
 fix contact id null exception for example bot ding-dong-bot #123
 do not reject a promise twice #122
 support Contact.find by remark #117
 add more contact methods: gender(), city(), provionce(), avatar() #121
 clean log
 0.6.46
 merge
 0.6.43
 better docker setting
 0.6.45
 #119 Sync to Async
 0.6.44
 use node cleanup to notify bot as program exit
 fix name of func #119
 0.6.43
 merge
 0.6.41
 #119
 hide npm
 0.6.42
 code clean
 0.6.41
 merge
 add node-cleanup to trap bot code exit
 fix const to let
 escape ' for filter function #116
 doc
 show error message for requiring chrome-driver
 fix unhandled rejection: https://travis-ci.org/wechaty/wechaty/jobs/180957671#L2789
 fix friend request async
 code clean
 0.6.40
 add boolean return value to FriendRequest.{send,accept}
 0.6.39
 better log
 0.6.38
 fix `set -e` not work inside wechaty::runBot
 0.6.37
 fix dependences
 fix npm install @types/node not work with symble link
 0.6.36
 code clean
 save speech mp3 to file
 format date
 return null when there is no remark set #113
 better filename for attachment
 name attachment with more detail filename, and add APPMSGTYPE_READER_TYPE 100001 #114
 add debug commands
 add all wechaty node modules to global
 d
 1
 0.6.35
 add NickName to RawObj.MemberList #104
 #104
 #104
 0.6.34
 fix #104
 room.findAll() support empty arg for all
 0.6.33
 allow Contact.remark(null) to delete remark
 Merge pull request #110 from lijiarui/patch-5
 Merge pull request #112 from lijiarui/arcode
 Update README.md
 qrcode
 Update README.md
 0.6.32
 more log & code clean
 0.6.31
 fix return
 track unhandledRejection
 0.6.30
 tune timeout to not trigger watchdog 120 sec
 0.6.29
 get rid of arrify
 code clean
 code clean
 code clean
 rename voice to speech
 fix "
 code clean
 more check for exception/rejection
 0.6.28
 fix missed types module #105
 Merge pull request #105 from JasLin/master
 fixed throw new Error('no user') while use wechaty.io
 i hate whitespace...
 get room owner on room-join room-topic event
 Merge pull request #4 from wechaty/master
 0.6.27
 add ffmpeg & request dev dependence
 0.6.26
 add voice to text example
 Merge pull request #100 from JasLin/master
 fix javascript error: attempt is not defined
 Merge pull request #3 from wechaty/master
 0.6.25
 fix chrome eval anonymous function exception #98 #60
 use MsgType
 0.6.24
 restore phantomjs unit tests, thanks @cherry-geqi #60
 Merge pull request #97 from cherry-geqi/master
 wechaty-bro.js following official coding style
 use plain javascript for phantomjs #60
 code clean
 fix Unhandled Rejection https://travis-ci.org/wechaty/wechaty/jobs/176334651#L1717
 convert wechaty-bro.js to plain old javascript syntax in favour of phantomjs
 0.6.23
 code clean
 #70 temporary for users
 use `ssh-agent` like env set
 0.6.22
 fix quit timeout
 fix $! -> $1
 0.6.21
 self fix
 code clean, add timeout for quit
 0.6.20
 code clean
 0.6.19
 use nul in windows
 fix clean() promise for https://travis-ci.org/wechaty/wechaty/jobs/175638013#L1180
 fix clean() promise for https://travis-ci.org/wechaty/wechaty/jobs/175638013#L1180
 fix clean() promise for https://travis-ci.org/wechaty/wechaty/jobs/175638013#L1180
 increase range
 0.6.18
 appvoyor npm not support --silent?
 0.6.17
 nyc + ava
 0.6.16
 test coverage
 version
 code clean
 add timeout for psTree?
 0.6.15
 silent
 0.6.14
 silent log output for docker test
 0.6.13
 division of labour for loging
 silent on appveyor for quick smoking test purpose
 log clean
 fix driver valid loop
 use appveyor organization url
 0.6.12
 fix appveyor
 0.6.11
 0.6.10
 division of labor of 3 CI system
 Merge pull request #93 from lijiarui/patch-4
 0.6.9
 fix appveyor
 0.6.8
 fix win32 test & switch to fast
 0.6.7
 fix ci & docker with rebuild -> redist
 0.6.6
 fix watchdog unit test bug
 Update README.md
 strict browser management
 better script output
 rename `npm run build` to `npm run dist`
 add npm & git help script
 code clean & fix watchdog unit test
 code clean
 strict check current to equla to target, or throw exception
 Update README.md
 Merge pull request #92 from lijiarui/patch-3
 Update README.md
 Merge pull request #91 from lijiarui/patch-2
 Update README.md
 fix ancher link error
 fix watchdog unit test error
 fix watchdog unit test error
 fix watchdog unit test error
 fix watchdog unit test error
 log for https://travis-ci.org/wechaty/wechaty/jobs/175396480#L1828
 re-format doc
 code clean
 Merge pull request #87 from lijiarui/patch-1
 code clean for #88
 code clean for #88
 Update README.md
 Update README.md
 Update README.md
 log for https://travis-ci.org/wechaty/wechaty/jobs/175324931#L1385
 code clean
 more check for https://travis-ci.org/wechaty/wechaty/jobs/175254596#L1220
 BREAKING CHANGE: message.to() will not work with Room. use message.room() instead. #88
 fill in the TBW block
 code clean
 fix `error: failed to push some refs to git@github.com:wechaty/wechaty.git` in push hook
 fix type
 #86 clean() force kill browser process, to clean orphan
 use get instead of requrie of http
 clean log
 linting
 file mode
 #4 use http protocol instead of https for download media file, because https will only succeed on the very first request!
 #4 Add more support code for saving media file, and prepare for sending attachments
 use docker command directly
 code clean for execute script
 0.6.5
 use NO_HOOK env var to push tag
 0.6.4
 test
 0.6.3
 test
 0.6.2
 0.6.1
 0.6.0
 format, and why circleci deploy 2 times?
 0.5.30
 thanks @torek
 0.5.29
 better notice message
 0.5.28
 fix var no $
 test hook
 pre-push with the right npm version tagged
 0.5.27
 email notification only sent when status changed
 suppress npm warning by --silent
 0.5.26
 #85 install @types/node to /node_modules for max compatibility
 0.5.25
 0.5.24
 0.5.23
 circle ci
 0.5.22
 remove checkContainerId()
 remove checkContainerId()
 lint
 Merge branch 'master' of github.com:wechaty/wechaty
 fix docker identify: use is-docker
 0.5.21
 restore phantomjs-prebuilt
 0.5.20
 clean
 0.5.19
 clean
 linting with typescript v2.1
 support all media files, not only image
 doc
 set valid timeout from 10 to 67 seconds
 0.5.18
 add dns server in entrypoint #84
 if in docker, there must has "docker" string in cgroup file #84
 add more dns server for #83
 0.5.17
 fix linting
 better docker container id identify function #84
 more help
 fix file mod
 Add support to save EMOTICNO/VOICE/VIDEO/MICROVIDEO for MediaMessage #4
 code clean
 code clean
 doc
 fix & enhance docker entrypoint help & command parse, with unit tests
 use bash
 clean
 ts-node run without @types/node should without problem
 use package manager for bats
 back to use node.js 6.9
 try to fix install bats with circle
 fix shellcheck in circlrci, and move bats test into docker.sh
 0.5.16
 fix circle ci env var
 0.5.15
 fix rename in package
 0.5.14
 fix pre-push not exit when lint fail, and exclude fixture from linting
 0.5.13
 shellcheck
 more test
 add docker bats unit test
 0.5.12
 skip cygwin for npm version bump
 better entrypoint help message, and bug fix
 add single module unit test
 badge cache
 do not tag when run npm version
 0.5.9
 re valid
 add --homepage arg
 fail safe for npm version patch (under windows/cygwin?)
 clean valid
 clean valid()
 0.5.7
 doc
 WebDriver.getSession() always halt, so add a ten seconds timeout?
 skip_cleanup for travis deploy
 clean travis
 0.5.6
 try to fix auto npm publish in travis
 0.5.5
 increse npm version before push
 0.5.4
 doc clean
 add email for npm
 fix shellcheck in travisci
 fix shellcheck docker in circleci
 v0.5.3
 code clean
 fix test import from specific ts file
 add auto publish npm to @next
 0.5.2
 use npm publish default to `next`
 issue #70 use related module filepath to specific file inner wechaty
 doc
 more verbose for getChromeDriver() to see where stuck the test
 shellcheck is enough, no need to run tslint
 only test node v7, add shellcheck. still no idea about how to get .nyc
 require node v7 because selenium require node v6.9...
 Merge pull request #78 from JasLin/master
 memberList Method have no 'name' argument definded,it'will cause a undefined error
 Merge pull request #2 from wechaty/master
 lintling
 ignore .yarn
 run js/ts bot file to test docker
 Merge pull request #76 from JasLin/master
 install @types/node by npm for run mybot source code
 remove shellcheck in default shlint
 use alpine-shellcheck docker image to run shell lint test
 install node types
 switch base image from alpine-shellcheck to alpine-node:7 because of selenium v3 require node v6.9
 add help message
 log more when browser.execute exception
 fix browser unit test
 add browser unit test
 code clean
 fix run ava
 fix #70 ,it maybe cause by designing the ConfigSetting as an interface, work around it putting the _puppetinstace in to global
 Merge pull request #1 from wechaty/master
 add node version for doctor
 fix browser quit() twice exception
 msg clean
 log clean
 fix driver valid function
 more strict check for browser & driver
 contact.toString() return remark or name or id
 move badge to wiki
 #72 remove the WebDriverJS promise manager
 better log
 doc
 fix docker path not include /wechaty/bin bug
 disable memory warning in most case
 doc typescript native support on docker
 doc
 changelog
 only show git hash version in ts-node mode
 win32 to windows
 restore the normal pretest
 no need to link wechaty because we have /node_modules/wechaty at root directory. and also that xvfb-chrome is already in path /wechaty/bin
 confirm circleci docker test is fixed?
 fix test bug: docker test fail should return exit code right
 move badge down
 move badge down
 doc test
 linting
 export default can lead to problems, get rid of them #40
 try to fix js: `const Wechaty = require("wechaty")`
 doc
 add `docker run doctor` to issue template
 fix test with void return
 compatible with `wechaty npm run ...` usage
 code clean
 Merge branch 'master' of github.com:wechaty/wechaty
 Update README.md
 Update README.md
 Update README.md
 Update README.md
 Update README.md
 use JavaScript as example instead of TypeScript
 Update README.md
 Update README.md
 Update README.md
 code clean
 code clean
 code clean
 doc
 doc
 Update README.md
 Update README.md
 doc clean: moved big paragraphs to wiki
 code clean
 doc
 classify doc to wiki & changelog, make readme be focus
 doc typescript
 close #66 doc Docker in README
 output fix
 doc clean
 fix npm publish files in dist not include bug
 build wechaty in docker, to get javascript dist
 code clean
 fix version path after build dist
 use dist/bin/...js file to publish instead of ts
 use shebang of `node` instead of `ts-node` for dist
 styling
 require module at the begining of code
 fix overload bug of optional args
 put `shlint` out of `npm test` because it is optional
 add code climate badge
 make sure the port is not same as orignal
 code clean
 doc
 prepare to public npm module v0.5
 return void if set message.{to,from,room}()
 circleci test docker, no need to install shellcheck
 change test output from silly to verbose
 fix win32 ci
 fix shellcheck under CI
 fix `can only "return" from a function or sourced script` error
 fix yarn close stdin bug, code clean
 rewrite to add labels, strip chromedriver from npm, include shellchecker and rm npm cache
 code clean
 rewrite & modulize functions
 fix strange ts error in docker: tsc think setTimtout return number? #66
 add shell linting with shellcheck
 clean npm cache in docker image to reduce size #66
 ignore dist & doc #66
 add shlint to linting shell script
 doc
 fix tsconfig & chromedriver in Alpine Linux
 switch docker base image from `node` to `alpine` for reducing image size
 doc
 use docker volume /bot as root, and fix entrypoint.sh bug
 symbolic link for a docker volume not support by docker of circleci?
 fix circleci docker hub trigger: use deployment instead of notification, because notification will be triggered no matter success or failure
 fix npm link bug, add more diagnose messages for docker starter #66
 link wechaty module for /bot inside docker #66
 output more diagnose information when docker run bot fail #66
 doc clean and rename `.js` to `.ts` in example directory #40
 grammerly doc
 better error help message for --volume mistake #66
 docker runner support install dependence modules automaticly from package.json by yarn, with cache
 better to find bot.ts file
 #34 sync local `remark` name
 #34 add `Contact.remark(newRemark: string)` support
 #34 add `Contact.remark(newRemark: string)` support
 code clean
 code clean
 #68 add unit test for self()
 move code coverage to test section, and add docker test badge
 #68 should use `obj.from` instead of `obj.id`. thanks @kyle-yu
 linting
 code clean & log enhance
 code clean
 linting
 #64 try to ignore all emoji in room member names
 code clean
 debug test
 run unit tests when build docker
 rename app dir in docker from `app` to `bot`
 fix docker hub webhooks in circleci: have to put plain token inside config file
 fix circleci webhook: it seems not support env var
 doc
 add setup in linux doc issue link
 Merge branch 'master' of github.com:wechaty/wechaty
 lint
 remove TS_NODE_COMPILER_OPTIONS, instead, link tsconfig.json to /
 set ava timeout from 10m to 7m, because travis-ci timeout is 10m
 link global npm node_modules directory to root in order to be an *real* global module
 fix #67 not run in `docker mode` in cloud9 ide
 code clean
 extend timeout from 60s to 120s
 code clean
 doc
 set TS & NODE env variables: COMPILER_OPTIONS & NODE_PATH
 doc
 change default memory require size from 64 to 16
 fix test
 code clean
 fix a race-condition in port finding: in ava Math.random() will get the same result in the child process?
 fix CircleCI issue: https://discuss.circleci.com/t/docker-builds-are-failing-on-circleci/5267/6?u=zixia
 fix docker.sh in circleci.com: must set image tag or will fail
 switch trigger to docker hub for rebuilding wechaty via circleci
 doc dockerfile #66
 need `xauth` package to start xvfb, support code filename as docker arg #66
 fix chromium requirement and suppress apt-get nosies #66
 docker fix
 silence apt-get install
 npm --progress false --loglevel warn install
 try to fix `rmdriverfs: Driver btrfs failed to remove root filesystem` in circleci
 fix ava dependence
 improve startup performance
 code clean
 DO NOT mock CI env, because will cause unpredictable bugs
 use chromium instead of chrome in docker
 linting
 add more check to browser driver init
 docker args pass through to npm
 rename Firer class method names
 code clean
 upgrade to use nodejs v7.0
 fix test
 fix chrome version in travis ci
 use circleci to test docker, and travis-ci with linux/mac
 fix tests
 enable coveralls coverage report
 ava run concurrency so we have to use test.serial if want to check child process pids.
 clean log
 code clean
 fix test bug
 fix stall browser bug when session file not exist
 selenium find `chromedriver.exe` by default under win32, so we have to specify the `chromedriver`.path in order to make it work with npm module `chromedriver`
 use `shx` to execute cross-platform shell commands such as `rm -fr` & `cp`
 add node v7 test
 code clean
 add unifyEmoji method to deal with name string differend with same user in browser
 fix sloc file glob bug in win32
 fix sloc directorys
 fix win32 sloc bug, code clean
 code clean
 debug ci
 fix travis ci
 add new class: `BrowserDriver` for modulize webdriver code from `Browser` class
 #40 try to fix unit test in CI!
 #46 Class Wechaty converted
 #46 Class IoClient converted
 code clean: state change log message
 use SN:%d instead of #:%d to avoid log message link to issue mistakly
 bug with vscode? `.on(event, function(this, ...args)` will show error type of args in editor
 use Wechaty & Room instance as Sayable `this`
 #46 Class Io converted
 #46 Class Puppet converted
 #46 Class Browser converted
 code clean
 doc
 doc clean
 rename gist-bot
 #40 bump to v0.5.0!
 #40 all unit tests works with typescript enabled ava!
 fix config unit test
 fix config unit test
 #59 new `BrowserCookie` class
 #40 fix unit test
 #40 fix typescript unit tests with ava
 do not specify chromeServiceBuilder
 call through ready with `contactGetter`
 BREAKING CHANGE: `room-join`/`room-leave`/`join`/`leave` events now only emit `contactList: Contact[]` as params. no `contact: Contact` anymore.
 code clean
 make room-join event more reliable for invitee contact instance
 grammerly doc
 #34 add example for contact-bot
 try to fix empty invitee bug in room `join` event
 code clean
 silly log
 fighting with state
 show qr-code in terminal for gist bot
 code clean
 fix doc with FriendRequest
 test
 doc fix
 code clean
 fix `friend` listener param defination: `request` could be undefined(for a confirmed friend relationship)
 log for #55
 voice of developer naishstar
 rename pre-push
 automatic check free memory when run
 Merge branch 'master' of github.com:wechaty/wechaty
 code clean
 fix #56 chromedriver path have to be specified in code
 code clean
 add new example bot: demo for load from gist(files)
 fix message.room(): should return null when there iss no room
 fix un-compatible methods type
 code clean: replace `Promise<any>` by `Promise<void>`, and replace `return null` by `throw`
 fix #54
 fix }
 Merge branch 'master' of github.com:wechaty/wechaty
 statSync doc
 code clean
 doc contributing
 issue template
 code clean
 add ISSUE template for better information collecting
 doctor
 add `npm run doctor` to output diagnose information
 code clean
 #52 support "你"
 #52 add chinese friend confirm message
 #52 support `room-*` event for chinese wechat
 doc
 Merge branch 'master' of github.com:wechaty/wechaty
 bug fix
 issue #40 make "strictNullChecks": true happy
 Update README.md
 add pre-push hook script
 test pre-commit hook
 fix linting
 Merge branch 'master' of github.com:wechaty/wechaty
 doc & code clean
 ignore yarn lock file
 fix #51
 code clean
 Merge branch 'master' of github.com:wechaty/wechaty
 typescript run ok
 bug fix: add Browser.restart(), for fixing browser not restart after window closed
 export log from config
 loggig
 linting
 add `implements Sayable`
 fix md syntax
 better event listener overloading
 code clean
 doc Sayable
 doc typo fix & code clean
 bug fix
 export types
 Merge branch 'master' of github.com:wechaty/wechaty
 export types for public methods
 deprecated Wechaty.reply()
 make ava happy
 use `npm run demo` to demo, prevent chromedriver not in path error
 use typescript to generate declaration file
 use ava with typescript, with new typs key
 new helper class StateMonitor
 doc #41
 #41 add Sayable Interface, and simplify listeners wraper function
 add type MessageRawObj.Url
 @deprecated PupptWeb.reply()
 add Room.memberList(): Contact[]
 #44 overload methods for better doc
 doc
 doc #44
 #40 fix circular module dependence
 #40 fix circular module dependence
 #44 more `ready()` checks
 #40 all files passed tsc compile
 #40 pass eslinting
 #40 fix all unit tests with typescript linting
 bug fix
 #44 wait for `contact.ready()` after accept friend request from him
 close #44
 #40 more types, bug fixes, async/await
 #40 convert bin/*.ts to typescript
 change scan event listener param from object to two params
 fix EventEmitter on() return type to `this`
 #41 add say to Message
 doc
 close #40 wechaty finally fully typed. thanks god
 #41 say() works on Contact/Room, and `this` inside listener functions now
 #40 fix examples
 await quit
 add this.obj safety check
 fix createServer return type error
 cannot use `*` if angular is set `.withCredentials = true`
 overload addCookies()
 typo
 #40 finally runable with ts-node!
 #40 enhance browser types
 switch to typescript@next to avoid https://github.com/wechaty/wechaty/issues/40#issuecomment-252649976
 fix Contact/Room filter func
 fighting with ts-node & watchdog
 fix null bug
 fix url
 #40 code clean
 #40 typescript compile success!
 #40 change Wechaty class Singleton
 fix #40 (typescript bug)
 fight with typescript @types ...
 fix `profile` null bug
 Merge branch 'master' of github.com:wechaty/wechaty
 v0.4.0
 red warning
 red warning
 red warning
 use v0.4 release link
 #40 fix most of typescript errors, step 24
 WARNNING message to wait finishing typescript convert.
 #40 Typescript transition step 23: put all together, everything broken...
 developer voice
 #40 ts tools
 #40 Typescript transition step 22: fix bridge.ts & tslint
 #40 Typescript transition step 21: fix browser.ts & tslint
 #40 Typescript transition step 20: fix event.ts & tslint
 #40 Typescript transition step 19: fix firer.ts & tslint
 #40 Typescript transition step 18: fix friend-request.ts & tslint
 #40 Typescript transition step 17: fix index.ts & tslint
 #40 Typescript transition step 16: fix server.ts & tslint
 #40 Typescript transition step 15: fix watchdog.ts & tslint
 #40 Typescript transition step 14: fix puppet-web.ts & tslint
 #40 Typescript transition step 13: fix config.ts & tslint
 #40 Typescript transition step 12: fix contact.ts & tslint
 #40 Typescript transition step 11: fix friend-request.ts & tslint
 #40 Typescript transition step 10: fix io.ts & tslint
 #40 Typescript transition step 9: fix io-client.ts & tslint
 #40 Typescript transition step 8: fix message.ts/message-media.ts & tslint
 Typescript transition step 7: fix puppet.ts & tslint
 Typescript transition step 6: fix room.ts & tslint
 Typescript transition step 5: fix util-lib.ts & tslint
 Typescript transition step 4: fix wechaty-event.ts & tslint
 Typescript transition step 3: fix wechaty.ts & tslint
 Typescript transition step 2: rename `require` to `import`, and rename `module.exports` to `export default`
 Typescript transition step 1: rename `.js` to `.ts`
 new class WechatyEvent to prepare `say()` method everywhere
 new class WechatyEvent to prepare `say()` method everywhere
 v0.4.0
 Merge pull request #38 from lijiarui/revise_readme
 add hubot introduction in readme
 code clean
 try to wait leaver for contact.ready()
 rename `Room.find{ name: ... }` to `Room.find{ topic: ... }`
 rename `Room.find{ name: ... }` to `Room.find{ topic: ... }`
 code clean
 room event join support multi-contact one time fire(with array args)
 fix watchdog not reset bug: browser.quit should not block watchdog reset
 contacts of room member list need to be ready asap, because we need nick name/remark name from contacts
 add header comments
 code clean & comments
 support to monitor multiple people added to room, and fire "join" event right
 doc example/room-bot
 re-structure example/room-bot
 create should return a Room instance, instead of roomId
 bug fix: to could be instanceof Room
 docs
 code clean
 more robust checkings
 clean log
 async code fix, and return Error as object
 code clean
 protect dirtyObj not to overwrite with a invalid obj, when a room is refreshing in multi tasks
 code clean
 Add Async Support between Bridge & WechatyBro, so we can get Room UserName from Create(it return a promise in browser)
 bug fix: use Config.puppetInstance()
 #32 Room new event: `topic`
 #32 demo bot
 new room class methods demo
 room create with topic
 add Wechaty.user() to get current login user
 support set default topic when create room
 #34 Contact.find && findAll
 #32 room doc & global `room-join` & `room-leave` events
 increase reload timeout, and log total timeout for convenience
 #32 fix Room MemberList refresh race condition
 #32 Room Event: `join` & `leave`
 Class Room bug fix & unit test
 voice of developer
 bug fix
 only export default in internal modules
 #32 add Firer Class to match message with event
 bug fix
 #32 merge
 #32 Room Event: `join` & `leave`
 code clean
 rename contactList back to memberList
 use Contact instead of UserName, as interface args for all
 use Contact instead of UserName, as interface args for all
 #32 add Room.nick()
 #33 new example bot: friend-bot.js
 use UserName: string for FriendRequest args
 doc for #33 FriendRequest
 fix contact with this
 #33 integration workflow
 code format
 dev clean
 dev clean
 use Config.puppetInstance()
 code clean
 use Config.puppetInstance() instead of attach by self
 support puppetInstance() to save/load instance of puppet
 support event args more than one, use Config to store puppet instance
 #33 add verify user interface to bridge, and created FriendRequest class
 #33 add verify user interface to bridge, and created FriendRequest class
 #33 add verify user interface in WechatyBro
 add more projects
 fix Room tests
 use .id instead of .get("id") for better compatible
 fix string query bug
 #32 add Room.modTopic
 #32 group add/del
 ci inside docker should not treat as a wechaty-docker env
 editroconfig
 get rid of global config DEFAULT_PUPPET_PORT
 better isDocker check
 linting
 base class of state management
 use targetState instead of isBirthing
 uin will also exist in cookie named `wxuin` ?
 doc indent
 tiny tune
 do not test after install
 Merge branch 'master' of github.com:wechaty/wechaty
 add dotNet link
 Merge branch 'master' of github.com:wechaty/wechaty
 fix docker hub url error
 rename BINARY_CHROMIUM to CMD_CHROMIUM
 rename ENDPOINT to APIHOST
 more state check
 merge
 log
 fix initWechaty() to return wechaty instance right
 use default shields.io badge
 fix puppet state test
 add buffer to io, for store offline messages(and reset after connected)
 add more targetState() check
 add CleverScript
 set this.puppet as soon as possible
 use targetState() & currentState() in Io class
 add currentState() call in test
 use currentState() & targetState() in puppet
 add targetState() and currentState() to puppet-web compoments
 fix quota in windows
 make io-client more flexable
 add sloc(source line of code) static calc
 code clean up
 fix initWechaty return error
 fix missing this of log in io-client
 rename io-bot to io-client
 fix gitter url
 file permission
 use `brolog` instead of `npmlog` because we need to run log both in nodejs & browser
 Merge branch 'master' of github.com:wechaty/wechaty
 logout name
 doc
 show name right
 add try/catch block to test(where is circleci test stalled inside)
 quit apt-get
 fix docker test error
 log os name
 test executable in docker
 silent apt-get...
 only test in docker under linux platform
 Merge branch 'master' of github.com:wechaty/wechaty
 code clean up
 fix webdriver test fail
 Merge branch 'master' of github.com:wechaty/wechaty
 code clean
 code clean up
 fix injectio bug: return with a new line will cause code return directly
 code clean up
 Merge branch 'master' of github.com:wechaty/wechaty
 move `return` from injectio.js to loader
 use serial test to prevent conflict of getBrowserPids() in parallel test
 use Config.xxx to load env variable
 rename `Wechaty` in browser to `WechatyBro`
 set default back to chrome, for there has bug in phantomjs when call Wechaty.getUserName()
 fix Wechaty.version() under win32
 merge
 log silly to monitor chrome test timeout
 quite docker apt-get install
 Merge branch 'master' of github.com:wechaty/wechaty
 rename zixia/wechaty to wechaty/wechaty
 quite docker build
 move process.env variables to Config module
 quite apt-get update when build docker
 skip instead of todo for an already implementation
 fix typo
 issue #21 switch back to phantomjs, and headless & head will all be tested
 docker code clean up
 code clean up, v0.3.15
 eslint work for ava es6
 ava eslint
 use sinon spy to test promise
 add typescript config
 add typescript config
 fix docker url
 make npm less nosiy
 move xvfb-chromium binary  path to config
 0.3.14
 doc
 use parallel mode of ava test runner
 load xvfb-chromium in docker
 config with methods
 set -e to exit when cmd fail
 skip docker xvfb test, because xvfb will be auto started with xvfb-chromium
 use root in docker, code clean
 issue #27
 issue #27 increase --shm-size in docker
 xvfb + chromium starter
 doc ava
 ava test
 merge
 working on xvfb tests in docker
 Merge branch 'master' of github.com:wechaty/wechaty
 xvfb doc
 doc issue #26 for chrome in docker
 fix xvfb counting script
 fix docker xvfb ps
 compitable for furture args
 Merge branch 'master' of github.com:wechaty/wechaty
 meaningful log
 tun off verbose log in standerd unit test
 fix typo
 fix npm install in travis ci
 await all promise instead of the first one
 Merge branch 'master' of github.com:wechaty/wechaty
 code clean
 support `test` param with builder
 use --sand-box args with chrome for some docker leak of privilidge
 change CI badge url
 use ephemeral port range
 docker install script
 Merge branch 'master' of github.com:zixia/wechaty
 rm tape dependience
 switch from tape to ava
 some vps run docker need chrome with args --no-sandbox?
 merge ava
 Merge branch 'master' of github.com:zixia/wechaty
 better log in docker(like ci)
 all unit test passed under ava
 all unit tests have switched to ava
 add wechaty-version util
 add docker unit test
 switch from onbuild to manual, and workdir to /wechaty
 switching to ava...
 beauty badge text
 fix uuid
 issue #21 try to replace the code in webwxapp to prevent check
 fix #21 block `https://wx.qq.com/?t=v2/fake` in phantomjs
 Merge branch 'master' of github.com:zixia/wechaty
 0.3.12
 doc
 fix test syntax from bash to sh
 bug fix
 get rid of git stderr when read version
 use bash
 call quit after init fail
 code clean
 Merge branch 'master' of github.com:zixia/wechaty
 Merge branch 'master' of github.com:zixia/wechaty
 code clean
 use sinon spy to test callbacks
 more electron links
 fix port log error for getPort
 google-chrome-stable instead of google-chrome ?
 chrome & xvfb installer
 Merge branch 'master' of github.com:zixia/wechaty
 add script directory
 more log for browser.quit()
 add more log to quit
 rename config to Config
 restore watchdog unit test
 fix watchdog & readyState sequence bug
 Merge branch 'master' of github.com:zixia/wechaty
 fix watchdog bugs
 Merge branch 'master' of github.com:zixia/wechaty
 do not unref timer for let bug appear
 code clean
 Chat as a Service (CaaS)
 doc
 watchdog timer should not block process exit
 show feed detail on watchdog reset
 elecvator pitch
 Merge branch 'master' of github.com:zixia/wechaty
 fix typo and show last feed when watchdog timeout
 Merge pull request #24 from zixia/greenkeeper-apiai-2.0.7
 add readyStatus to puppet to identify current status for events
 add vscode config
 Merge branch 'master' of github.com:zixia/wechaty
 code clean
 fix webdriver not found on this: bind this to co function
 chore(package): update apiai to version 2.0.7
 Merge pull request #23 from zixia/greenkeeper-apiai-2.0.6
 exclude buggy unit test
 chore(package): update apiai to version 2.0.6
 more detail version() info
 Merge branch 'master' of github.com:zixia/wechaty
 code clean
 use git revision #hash as wechaty.version if run in dev env
 code clean
 track bridge lost bug
 install chrome from google in docker
 'glob param should use " instead of ' in tape params under win32
 log test
 change server test use another port, because there has a leak of port close in other tests...
 doc
 doc
 doc
 doc
 doc
 Merge branch 'master' of github.com:zixia/wechaty
 doc
 kiss
 script for remember how to install chrome in linux
 call t.end() after exception
 fix this:
 move config default values to package.json
 try to fix glob param in win32
 upgrade circle chrome to last stable version
 upgrade circle chrome to last stable version
 fix brew cask to force install chrome
 fix brew cask to force install chrome
 fix last line of \\
 use tape js GLOB instead of shell glob for consistance behaviour of file list and order
 brew cask install
 fix chrome head in docker & mac
 fix test in travis
 install latest version of chrome for osx in travis
 start xvfb in travis
 fix test suite to use WECHATY_HEAD to switch browser
 Merge branch 'master' of github.com:zixia/wechaty
 wechaty badge with shields
 Merge pull request #20 from zixia/greenkeeper-chromedriver-2.23.1
 node destructing
 add node test for unstructing func param
 chore(package): update chromedriver to version 2.23.1
 Merge branch 'master' of github.com:zixia/wechaty
 half work with electron
 fix io-bot code
 use linux/mac tests badge
 use windows tests badge
 Merge branch 'master' of github.com:zixia/wechaty
 mini wechaty bot only need 7 lines of code!
 add CaaS list
 export IoBot
 Merge branch 'master' of github.com:zixia/wechaty
 modulized IoBot
 Merge pull request #19 from zixia/greenkeeper-eslint-3.3.1
 chore(package): update eslint to version 3.3.1
 Merge branch 'master' of github.com:zixia/wechaty
 doc todo: rewrite to typescript, and switch to AVA
 suppress phantomjs error message when log.level = silent
 change brand auto-reply key to wechaty/botie
 Merge pull request #18 from zixia/greenkeeper-eslint-3.3.0
 v0.3.9 fixs webUtil / Util rename bug in message.js
 chore(package): update eslint to version 3.3.0
 Merge pull request #17 from zixia/greenkeeper-phantomjs-prebuilt-2.1.12
 Merge pull request #16 from zixia/greenkeeper-chromedriver-2.23.0
 test
 test
 test
 test
 test
 test
 test
 test
 fix webUtil rename bug
 test
 chore(package): update phantomjs-prebuilt to version 2.1.12
 chore(package): update chromedriver to version 2.23.0
 docker ignore file
 add UUID support for io protocol
 doc
 new wechat bot project link
 fix docker badge url typo
 add dockeri.io badge
 split test
 fix unit test of room
 fix unit test run partly bug
 0.3.8
 clean code
 switch unit test tool from tap to tape, and modify usage of t.end to fix tape
 disable info log for new version of webdriver & phantomjs
 fix for new webdriver limitation: "errorMessage":"Can only set Cookies for the current domain"
 test greenkeeper.io
 test greenkeeper.io
 Merge pull request #15 from zixia/greenkeeper-update-all
 chore(package): update dependencies
 test greenkeeper
 0.3.7
 0.3.6
 manage shrinkwrap for npm
 log process quit for browserPids
 fix test bug: race condition when end() not wait quit() (and clean)
 upgrade to compatible with selenium-webdriver v3
 enable profile env setting for io-bot
 fix io protocol for version info
 docker rebuild with travis ci works well now
 fix travis rebuild hook
 try multi webhooks config in travis for only trigger docker hub webhook when test pass
 test if webhook will rebuild docker image when test fail on travis
 test webhook with always notification
 doc
 doc
 doc docker build
 test
 restore gitter plain url token
 doc docker
 docker webhook
 docker test
 Merge branch 'master' of github.com:zixia/wechaty
 add docker badges
 test travis yml url env var
 use node on debian docker image instead of alpine because of phantomjs need /lib64/ld-linux-x86-64.so.2
 docker support
 code clean & io-bot enhance
 voice from developer
 support io event `logout`
 10ms is enough to wait 1ms
 execute should return a promise instead of Error
 v0.3.0
 add shutdown to io event
 enhance io for update scan event
 shortest example code from 9 to 7 lines
 enhance io support
 log for sending ioEvent
 Merge branch 'master' of github.com:zixia/wechaty
 upgrade Io to cloud version
 doc
 Merge branch 'master' of github.com:zixia/wechaty
 bug compatible with issue #11
 debug #12
 silent the watchdog timeout warn&err log
 v0.2.8 fix phantomjs websocket ssl error
 Merge branch 'master' of github.com:zixia/wechaty
 check this.bridge in timeout
 fix case sensitive bug for browser name in head
 debug phantomjs with WebSocket ssl error
 fix bug in phantomjs: raw WebSocket still throw "The host name did not match any of the valid hosts for this certificate" error with --ignore-ssl-errors
 Merge branch 'master' of github.com:zixia/wechaty
 debug
 fix case bug, and filename in start command
 firebug
 clean log code
 merged
 show timer left
 log time before timeout when clear a timer
 Merge branch 'master' of github.com:zixia/wechaty
 put io-bot to bin
 doc
 fix test
 use npm shrinkwrap & version with "latest"
 get rid of Xvfb for osx
 travis ci
 travis ci osx?
 code clean
 add back lost media message class
 fix ding dong bot for contact class
 better dingdong bot message output
 Merge branch 'master' of github.com:zixia/wechaty
 strip warning
 add back message class to event
 directory re-structure
 move puppet-web to directory
 change node version to 6 in CI
 fix Contact require
 uncomment unit tests
 move puppet-web to seprate new sub directory
 seprate watchdog code to indenpendent file
 changelog
 clean code
 strip the npm package file size by only select whitelist files
 rename -spec.js to .spec.js
 add timeout for ding socket test
 add test/README.me
 log doc
 code clean
 add tcp socket keep alive
 start watchdog after init, in case of browser no response will cause never reset
 refine doc
 comment
 code clean
 code clean
 test
 comments injectio
 inc watchdog reset unit test timeout
 v0.2.2 minor bugfix for watchdog on different platform
 fix & clean unit test
 clean code
 still has bug in CI environment, more check
 check for puppet & browser before execute
 v0.2.1 fix watchdog timer unexpected timeout
 better comment watchDog, seems I catched the bug in last commit
 try to catch watchDog timer bug in CI env
 debug timeout...
 log to debug puppetweb watchdog timeout
 bug fix: reset browser status clean
 bug fix: watchdog not reset itself after reset the puppet
 style comma(to start of the line)
 log unit test to debug watchdog
 hide useless Class export
 v0.2.0
 fix undefined head error
 code clean & fix unit test
 init io before other wechaty inittiations
 tmp act as ding-dong for test
 clearer msg digest output for room & contact
 output use log.info instead of console.log
 get rid of qrcode-generator in io-bot
 make heroku happy by listen on PORT
 fix name too long: heroku app name max length 30
 deploy to hero ku
 add Deploy to Heroku button
 code clean
 better login check, add retry attempt counter
 code clean & log for strange situation
 code clean and better login check
 rename session in example bots to profile
 rename SESSION to PROFILE
 simplify io auth from Basic to Token
 fix unit test fail
 fix websocket protocol invalid name error: use | instead of /
 start to add wechaty.io cloud feature. tune reconnect timeout
 add wechaty.io websocket auth & event support
 add shortcut for instantiate Contact from from/to/room
 strip functions on contact object
 tune scan & login event
 Merge branch 'master' of github.com:zixia/wechaty
 add `error` event handler
 merge
 debug to log
 t.pass instead of t.ok
 add self() test
 seprate tests from 1 file to 2 files
 start coding wechaty.io
 use name `type` for puppet setting
 use WECHATY_LOG(instead of WECHATY_DEBUG) for log level
 use WECHATY_DEBUG to open phantomjs debug console port 8080
 add silent to WECHATY_LOG
 clean Wechaty class, add new class WechatyIo
 code styling & format
 mute warn log for watchDogReset unit test
 fix permission
 prepare to delete self
 format code style
 use es6 notation for key name as the same as the value
 add version() to Wechaty
 fix test fail under darwin. bug compatible with buggy ps-tree
 v0.1.8
 fix bug: strip the last message.self
 doc with new self() api
 v0.1.7
 Merge branch 'master' of github.com:zixia/wechaty
 typo
 bug fix & unit test for Wechaty.self()
 add: Wechaty.self() to test if a message is from self. del: Message.self()
 clean log messages
 add switch to allow disable clog function in browser
 save userId when received login event on time
 add WECHATY_LOG alias for DEBUG
 Merge branch 'master' of github.com:zixia/wechaty
 add error event
 fix: inject all wechaty in browser AFTER angular bootstrap, because wxapp check something when bootstrap.
 add wx security check js for doc
 make emit queue in browser be fifo. fix double login event bug
 npmlog with timestamp doc, return code bugfix and test
 better timer for watchdog to monitor scan event
 bugs fix for saveSession & login event & this binding for event handler etc
 restore back the watchDog function, which is lost when seperate 1 file to 2.
 Merge branch 'master' of github.com:zixia/wechaty
 doc & handle more error in injectio
 fix log module name typo
 rename log name in new module
 fix bug: support all head in getBrowserPids()
 rename HtmlUtil to WebUtil
 add downloadStream unit test
 seperate event handler from puppwe-web to another source file puppet-web-event
 quit webdriver after unite test
 graceful deal with brower, exceptions and restart
 prototype code
 remember XMLHttpRequest
 use fastUrl a same domain picture url. found in wxapp.js
 roger bot is too noisy too keep session
 more check for initClog in injectio
 fix clog init exception and death loop when inject and init it
 more graceful to check injectio and exceptions
 rename bot session name to example-bot.wechaty.json
 Merge branch 'master' of github.com:zixia/wechaty
 save cookies for the session when a scan event emitted
 v0.1.6
 #4 example for support save image by message stream
 Merge branch 'master' of github.com:zixia/wechaty
 wx js doc analysis
 Image Message download stream support
 Merge branch 'master' of github.com:zixia/wechaty
 first version that support image message, url only now
 message type use raw number. typeEx() return string
 make toString() of Contact & Room return the raw id to keep behaviour consit
 Merge branch 'master' of github.com:zixia/wechaty
 Merge branch 'master' of github.com:zixia/wechaty
 better check for scan url & code
 more error checks and retry
 Merge branch 'master' of github.com:zixia/wechaty
 more check on heartbeat in browser
 erge branch 'master' of github.com:zixia/wechaty
 graceful browser dead
 more error check & doc
 Merge branch 'master' of github.com:zixia/wechaty
 Merge branch 'master' of github.com:zixia/wechaty
 more error check & doc
 add detail error check & desc
 Update README.md
 Update README.md
 Update README.md
 allow unit test run longer... because open wx.qq.com is slow...
 webdriver cookie doc
 doc
 Merge branch 'master' of github.com:zixia/wechaty
 use 10 seconds to wait a page refresh
 Merge branch 'master' of github.com:zixia/wechaty
 fix: message send by self set room error
 fix scan event lost bug, and prevent browser restart when we only need a refresh
 show qrcode in console in examples. support more html emojis
 change getContact wait time from 45s to 300s, to prevent load empty group memberlist when theres too many of group and too many of members
 clear message toString() method to plain text
 pass all tests
 1. make Message.toString() clear 2. add environment variable WECHATY_PORT support 3. if PORT is not available, pick a new one near PORT 4. rename unit test session name
 v0.1.3
 fix obj typo of bridge
 better watchDog reset, code cleanup
 add a watchdog for monitor wechaty heartbeat, and restore from unknown state
 code clean & better error catch & log
 Merge branch 'master' of github.com:zixia/wechaty
 fix injectio init return value
 code cleanup
 ignore unit test json file
 move session methods to browser class, fix bugs in win32
 tune injectio timeout ms
 auto restart browser after webdriver browser crash
 doc
 v0.1.1
 enhance doc, follow function changes
 minor changes
 fix path typo
 replace npmlog to use env, fix phantomjs setCookie warning for ALL_CAP_NAMES
 env variables doc
 Update README.md
 session save & reload all ok, and docs for environment variables
 fix unit tests for puppet-web
 fix session promise chaining bug, unit test passed
 fighting for session support, half work
 new bug: webdriver.get with promise has strange behaviour
 Merge branch 'master' of github.com:zixia/wechaty
 test
 1. setCookies & getCookies support & unit tests 2. loadSession & saveSession support & unit tests 3. wechaty.reply() method support
 fix logout null exception when not login yet.
 bug fix: logout event save user to tmp before emit
 detail doc c9 ide
 add cloud9 ide open link button
 use co-routine to deal promise in init()
 change class name from Group to Room
 Merge branch 'master' of github.com:zixia/wechaty
 doc example
 typo
 clean code
 v0.0.11
 fix message from address & group bug
 fix bridge to webdriver json escape error: use base64 to encode, and encodeURIComponent to support UTF8
 bug fix & use base64 to encode json file
 fix message to
 circleci only support linux for free user
 ci for win32/mac/linux
 pass unit tests
 lots of stability enhancement, and part of class re-structed
 fix retry-promise bug: should treat `undefined` return as rejected
 cross-env for win32 unit test ci
 test node v6 only on appveyor
 add appveyor ci badge
 add wechaty module unit test
 more chatbot related links
 use npm module retry-promise
 fix npm
 add dev dependance for ps-tree, and doc to do list
 todo
 doc
 disable strict test, because many npm modules cant pass it
 v0.0.9
 Merge branch 'master' of github.com:zixia/wechaty
 add todo list & bot api service list
 add npmignore
 use strict mode when run tap unit test
 logo-en version 2
 doc improve
 code clean & better tests
 enhanced tuling123 bot
 add escape to json string before send to server
 minor fix
 Merge branch 'master' of https://github.com/zixia/wechaty
 tuling to headless
 helper function: waitData to retry a promise until get right
 use tap instead of tape, to summary code coverages
 hudge improvements: new bridge class, new event proxy system, qrcode login use event `scan`, and more.
 switch unit test from tape to tap
 add coverage badge
 use envioriment variable for circleci
 hide gitter url & add multi os for travis-ci
 hide gitter url & add multi os for travis-ci
 half work to enhance message processing...
 debug message...
 fix #5
 add image message class
 add image message class
 merge
 local ci
 add repo size
 doc
 link to itChat with chinese description
 merge
 clean
 fix group load exception when MemberList is not fullfilled
 add howto install wechaty instruction
 unit test file name from "tests" to "spec"
 add 2 python framework of weixin personal bot library
 support new events: login & logout
 package
 v0.0.7
 fix
 grammer in readme
 make phantomjs worked!
 doc
 v0.0.6
 trais ci start xvfb!
 trais ci use ubuntu trusty!
 trais ci!
 test travis
 try to fix chrome version inside travis-ci
 upgrade chrome version in circleci
 re-structed code design, server/browser now are flat
 Merge branch 'master' of github.com:zixia/wechaty
 add browser options
 Merge branch 'master' of github.com:zixia/wechaty
 doc
 rename & format code
 typo fix
 typo fix
 typo fix
 use co(generator) to sync promise calls
 add travis-ci to gitter webhook
 use co/yield to sync test
 add travis-ci badge
 only test nodejs version 6 and above
 add travis-ci
 fix group ready()
 try to support phantomjs
 add chromedriver dependence for convinionce
 doc
 doc
 doc
 compatible phantomjs-prebult executable path
 add nodejs6 requirement
 add logo
 add logo
 add logos
 add bing
 readme
 Merge branch 'gitter-badger-gitter-badge'
 fix conflict
 readme
 v0.0.5
 badge npm
 npm badge
 v0.0.5 prepare
 add npmlog dependence
 add circleci
 doc
 doc
 doc
 doc
 doc
 doc
 doc
 document
 Add Gitter badge
 v0.0.4
 bug fix
 ding-dong-bot show group name right
 v0.0.3
 format
 add group & contact class, bug fix, and bot enhancements
 fix unit test
 v0.0.2
 contact class worked!
 bug fix
 bug fix
 example: ding dong auto-replyer
 runable v0.0.2
 prepare to publish to npm
 rename lib to src, default use phantomjs
 hard code ssl key & cert
 start with message...
 finish smoking tests
 testable web server suite
 webdriver smoking test
 half work... fighting
 half work, for echo bot
 links
 unit tests by tape
 runable tech prototype~
 going on...
 Merge branch 'master' of github.com:zixia/wechaty-lib
 hacker typer
 matrix by bash
 matrix by js
 coding...
 server code init
 initial commit, start coding...
 Initial commit
